//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class NewtonBoxParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonBoxParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonBoxParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonBoxParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonBoxParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_x {
    set {
      cppPINVOKE.NewtonBoxParam_m_x_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonBoxParam_m_x_get(swigCPtr);
      return ret;
    } 
  }

  public float m_y {
    set {
      cppPINVOKE.NewtonBoxParam_m_y_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonBoxParam_m_y_get(swigCPtr);
      return ret;
    } 
  }

  public float m_z {
    set {
      cppPINVOKE.NewtonBoxParam_m_z_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonBoxParam_m_z_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonBoxParam() : this(cppPINVOKE.new_NewtonBoxParam(), true) {
  }

}

public class NewtonSphereParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonSphereParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonSphereParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonSphereParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonSphereParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_radio {
    set {
      cppPINVOKE.NewtonSphereParam_m_radio_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonSphereParam_m_radio_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonSphereParam() : this(cppPINVOKE.new_NewtonSphereParam(), true) {
  }

}

public class NewtonCapsuleParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonCapsuleParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonCapsuleParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonCapsuleParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonCapsuleParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_radio0 {
    set {
      cppPINVOKE.NewtonCapsuleParam_m_radio0_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonCapsuleParam_m_radio0_get(swigCPtr);
      return ret;
    } 
  }

  public float m_radio1 {
    set {
      cppPINVOKE.NewtonCapsuleParam_m_radio1_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonCapsuleParam_m_radio1_get(swigCPtr);
      return ret;
    } 
  }

  public float m_height {
    set {
      cppPINVOKE.NewtonCapsuleParam_m_height_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonCapsuleParam_m_height_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonCapsuleParam() : this(cppPINVOKE.new_NewtonCapsuleParam(), true) {
  }

}

public class NewtonCylinderParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonCylinderParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonCylinderParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonCylinderParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonCylinderParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_radio0 {
    set {
      cppPINVOKE.NewtonCylinderParam_m_radio0_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonCylinderParam_m_radio0_get(swigCPtr);
      return ret;
    } 
  }

  public float m_radio1 {
    set {
      cppPINVOKE.NewtonCylinderParam_m_radio1_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonCylinderParam_m_radio1_get(swigCPtr);
      return ret;
    } 
  }

  public float m_height {
    set {
      cppPINVOKE.NewtonCylinderParam_m_height_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonCylinderParam_m_height_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonCylinderParam() : this(cppPINVOKE.new_NewtonCylinderParam(), true) {
  }

}

public class NewtonConeParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonConeParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonConeParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonConeParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonConeParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_radio {
    set {
      cppPINVOKE.NewtonConeParam_m_radio_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonConeParam_m_radio_get(swigCPtr);
      return ret;
    } 
  }

  public float m_height {
    set {
      cppPINVOKE.NewtonConeParam_m_height_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonConeParam_m_height_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonConeParam() : this(cppPINVOKE.new_NewtonConeParam(), true) {
  }

}

public class NewtonChamferCylinderParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonChamferCylinderParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonChamferCylinderParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonChamferCylinderParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonChamferCylinderParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_radio {
    set {
      cppPINVOKE.NewtonChamferCylinderParam_m_radio_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonChamferCylinderParam_m_radio_get(swigCPtr);
      return ret;
    } 
  }

  public float m_height {
    set {
      cppPINVOKE.NewtonChamferCylinderParam_m_height_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonChamferCylinderParam_m_height_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonChamferCylinderParam() : this(cppPINVOKE.new_NewtonChamferCylinderParam(), true) {
  }

}

public class NewtonConvexHullParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonConvexHullParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonConvexHullParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonConvexHullParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonConvexHullParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int m_vertexCount {
    set {
      cppPINVOKE.NewtonConvexHullParam_m_vertexCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonConvexHullParam_m_vertexCount_get(swigCPtr);
      return ret;
    } 
  }

  public int m_vertexStrideInBytes {
    set {
      cppPINVOKE.NewtonConvexHullParam_m_vertexStrideInBytes_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonConvexHullParam_m_vertexStrideInBytes_get(swigCPtr);
      return ret;
    } 
  }

  public int m_faceCount {
    set {
      cppPINVOKE.NewtonConvexHullParam_m_faceCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonConvexHullParam_m_faceCount_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_vertex {
    set {
      cppPINVOKE.NewtonConvexHullParam_m_vertex_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonConvexHullParam_m_vertex_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public NewtonConvexHullParam() : this(cppPINVOKE.new_NewtonConvexHullParam(), true) {
  }

}

public class NewtonCompoundCollisionParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonCompoundCollisionParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonCompoundCollisionParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonCompoundCollisionParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonCompoundCollisionParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int m_chidrenCount {
    set {
      cppPINVOKE.NewtonCompoundCollisionParam_m_chidrenCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonCompoundCollisionParam_m_chidrenCount_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonCompoundCollisionParam() : this(cppPINVOKE.new_NewtonCompoundCollisionParam(), true) {
  }

}

public class NewtonCollisionTreeParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonCollisionTreeParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonCollisionTreeParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonCollisionTreeParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonCollisionTreeParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int m_vertexCount {
    set {
      cppPINVOKE.NewtonCollisionTreeParam_m_vertexCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonCollisionTreeParam_m_vertexCount_get(swigCPtr);
      return ret;
    } 
  }

  public int m_indexCount {
    set {
      cppPINVOKE.NewtonCollisionTreeParam_m_indexCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonCollisionTreeParam_m_indexCount_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonCollisionTreeParam() : this(cppPINVOKE.new_NewtonCollisionTreeParam(), true) {
  }

}

public class NewtonDeformableMeshParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonDeformableMeshParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonDeformableMeshParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonDeformableMeshParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonDeformableMeshParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int m_vertexCount {
    set {
      cppPINVOKE.NewtonDeformableMeshParam_m_vertexCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonDeformableMeshParam_m_vertexCount_get(swigCPtr);
      return ret;
    } 
  }

  public int m_triangleCount {
    set {
      cppPINVOKE.NewtonDeformableMeshParam_m_triangleCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonDeformableMeshParam_m_triangleCount_get(swigCPtr);
      return ret;
    } 
  }

  public int m_vrtexStrideInBytes {
    set {
      cppPINVOKE.NewtonDeformableMeshParam_m_vrtexStrideInBytes_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonDeformableMeshParam_m_vrtexStrideInBytes_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_short m_indexList {
    set {
      cppPINVOKE.NewtonDeformableMeshParam_m_indexList_set(swigCPtr, SWIGTYPE_p_unsigned_short.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonDeformableMeshParam_m_indexList_get(swigCPtr);
      SWIGTYPE_p_unsigned_short ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_vertexList {
    set {
      cppPINVOKE.NewtonDeformableMeshParam_m_vertexList_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonDeformableMeshParam_m_vertexList_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public NewtonDeformableMeshParam() : this(cppPINVOKE.new_NewtonDeformableMeshParam(), true) {
  }

}

public class NewtonHeightFieldCollisionParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonHeightFieldCollisionParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonHeightFieldCollisionParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonHeightFieldCollisionParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonHeightFieldCollisionParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int m_width {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_width_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonHeightFieldCollisionParam_m_width_get(swigCPtr);
      return ret;
    } 
  }

  public int m_height {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_height_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonHeightFieldCollisionParam_m_height_get(swigCPtr);
      return ret;
    } 
  }

  public int m_gridsDiagonals {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_gridsDiagonals_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonHeightFieldCollisionParam_m_gridsDiagonals_get(swigCPtr);
      return ret;
    } 
  }

  public int m_elevationDataType {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_elevationDataType_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonHeightFieldCollisionParam_m_elevationDataType_get(swigCPtr);
      return ret;
    } 
  }

  public float m_horizonalScale {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_horizonalScale_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonHeightFieldCollisionParam_m_horizonalScale_get(swigCPtr);
      return ret;
    } 
  }

  public float m_verticalScale {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_verticalScale_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonHeightFieldCollisionParam_m_verticalScale_get(swigCPtr);
      return ret;
    } 
  }

  public float m_horizonalDisplacementScale {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_horizonalDisplacementScale_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonHeightFieldCollisionParam_m_horizonalDisplacementScale_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_void m_vertialElevation {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_vertialElevation_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonHeightFieldCollisionParam_m_vertialElevation_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_short m_horizotalDisplacement {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_horizotalDisplacement_set(swigCPtr, SWIGTYPE_p_short.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonHeightFieldCollisionParam_m_horizotalDisplacement_get(swigCPtr);
      SWIGTYPE_p_short ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_short(cPtr, false);
      return ret;
    } 
  }

  public string m_atributes {
    set {
      cppPINVOKE.NewtonHeightFieldCollisionParam_m_atributes_set(swigCPtr, value);
    } 
    get {
      string ret = cppPINVOKE.NewtonHeightFieldCollisionParam_m_atributes_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonHeightFieldCollisionParam() : this(cppPINVOKE.new_NewtonHeightFieldCollisionParam(), true) {
  }

}

public class NewtonSceneCollisionParam : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonSceneCollisionParam(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonSceneCollisionParam obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonSceneCollisionParam() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonSceneCollisionParam(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int m_childrenProxyCount {
    set {
      cppPINVOKE.NewtonSceneCollisionParam_m_childrenProxyCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonSceneCollisionParam_m_childrenProxyCount_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonSceneCollisionParam() : this(cppPINVOKE.new_NewtonSceneCollisionParam(), true) {
  }

}

public class NewtonCollisionInfoRecord : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonCollisionInfoRecord(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonCollisionInfoRecord obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonCollisionInfoRecord() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonCollisionInfoRecord(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_a_4__float m_offsetMatrix {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_offsetMatrix_set(swigCPtr, SWIGTYPE_p_a_4__float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_offsetMatrix_get(swigCPtr);
      SWIGTYPE_p_a_4__float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_a_4__float(cPtr, false);
      return ret;
    } 
  }

  public int m_collisionType {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_collisionType_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonCollisionInfoRecord_m_collisionType_get(swigCPtr);
      return ret;
    } 
  }

  public int m_collisionUserID {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_collisionUserID_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonCollisionInfoRecord_m_collisionUserID_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonBoxParam m_box {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_box_set(swigCPtr, NewtonBoxParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_box_get(swigCPtr);
      NewtonBoxParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonBoxParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonConeParam m_cone {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_cone_set(swigCPtr, NewtonConeParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_cone_get(swigCPtr);
      NewtonConeParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonConeParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonSphereParam m_sphere {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_sphere_set(swigCPtr, NewtonSphereParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_sphere_get(swigCPtr);
      NewtonSphereParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonSphereParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonCapsuleParam m_capsule {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_capsule_set(swigCPtr, NewtonCapsuleParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_capsule_get(swigCPtr);
      NewtonCapsuleParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonCapsuleParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonCylinderParam m_cylinder {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_cylinder_set(swigCPtr, NewtonCylinderParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_cylinder_get(swigCPtr);
      NewtonCylinderParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonCylinderParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonChamferCylinderParam m_chamferCylinder {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_chamferCylinder_set(swigCPtr, NewtonChamferCylinderParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_chamferCylinder_get(swigCPtr);
      NewtonChamferCylinderParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonChamferCylinderParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonConvexHullParam m_convexHull {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_convexHull_set(swigCPtr, NewtonConvexHullParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_convexHull_get(swigCPtr);
      NewtonConvexHullParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonConvexHullParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonDeformableMeshParam m_deformableMesh {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_deformableMesh_set(swigCPtr, NewtonDeformableMeshParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_deformableMesh_get(swigCPtr);
      NewtonDeformableMeshParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonDeformableMeshParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonCompoundCollisionParam m_compoundCollision {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_compoundCollision_set(swigCPtr, NewtonCompoundCollisionParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_compoundCollision_get(swigCPtr);
      NewtonCompoundCollisionParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonCompoundCollisionParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonCollisionTreeParam m_collisionTree {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_collisionTree_set(swigCPtr, NewtonCollisionTreeParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_collisionTree_get(swigCPtr);
      NewtonCollisionTreeParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonCollisionTreeParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonHeightFieldCollisionParam m_heightField {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_heightField_set(swigCPtr, NewtonHeightFieldCollisionParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_heightField_get(swigCPtr);
      NewtonHeightFieldCollisionParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonHeightFieldCollisionParam(cPtr, false);
      return ret;
    } 
  }

  public NewtonSceneCollisionParam m_sceneCollision {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_sceneCollision_set(swigCPtr, NewtonSceneCollisionParam.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_sceneCollision_get(swigCPtr);
      NewtonSceneCollisionParam ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonSceneCollisionParam(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_paramArray {
    set {
      cppPINVOKE.NewtonCollisionInfoRecord_m_paramArray_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionInfoRecord_m_paramArray_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public NewtonCollisionInfoRecord() : this(cppPINVOKE.new_NewtonCollisionInfoRecord(), true) {
  }

}

public class NewtonJointRecord : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonJointRecord(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonJointRecord obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonJointRecord() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonJointRecord(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_a_4__float m_attachmenMatrix_0 {
    set {
      cppPINVOKE.NewtonJointRecord_m_attachmenMatrix_0_set(swigCPtr, SWIGTYPE_p_a_4__float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_attachmenMatrix_0_get(swigCPtr);
      SWIGTYPE_p_a_4__float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_a_4__float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_a_4__float m_attachmenMatrix_1 {
    set {
      cppPINVOKE.NewtonJointRecord_m_attachmenMatrix_1_set(swigCPtr, SWIGTYPE_p_a_4__float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_attachmenMatrix_1_get(swigCPtr);
      SWIGTYPE_p_a_4__float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_a_4__float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_minLinearDof {
    set {
      cppPINVOKE.NewtonJointRecord_m_minLinearDof_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_minLinearDof_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_maxLinearDof {
    set {
      cppPINVOKE.NewtonJointRecord_m_maxLinearDof_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_maxLinearDof_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_minAngularDof {
    set {
      cppPINVOKE.NewtonJointRecord_m_minAngularDof_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_minAngularDof_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_maxAngularDof {
    set {
      cppPINVOKE.NewtonJointRecord_m_maxAngularDof_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_maxAngularDof_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_NewtonBody m_attachBody_0 {
    set {
      cppPINVOKE.NewtonJointRecord_m_attachBody_0_set(swigCPtr, SWIGTYPE_p_NewtonBody.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_attachBody_0_get(swigCPtr);
      SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_NewtonBody m_attachBody_1 {
    set {
      cppPINVOKE.NewtonJointRecord_m_attachBody_1_set(swigCPtr, SWIGTYPE_p_NewtonBody.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_attachBody_1_get(swigCPtr);
      SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_extraParameters {
    set {
      cppPINVOKE.NewtonJointRecord_m_extraParameters_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonJointRecord_m_extraParameters_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public int m_bodiesCollisionOn {
    set {
      cppPINVOKE.NewtonJointRecord_m_bodiesCollisionOn_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonJointRecord_m_bodiesCollisionOn_get(swigCPtr);
      return ret;
    } 
  }

  public string m_descriptionType {
    set {
      cppPINVOKE.NewtonJointRecord_m_descriptionType_set(swigCPtr, value);
    } 
    get {
      string ret = cppPINVOKE.NewtonJointRecord_m_descriptionType_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonJointRecord() : this(cppPINVOKE.new_NewtonJointRecord(), true) {
  }

}

public class NewtonUserMeshCollisionCollideDesc : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonUserMeshCollisionCollideDesc(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonUserMeshCollisionCollideDesc obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonUserMeshCollisionCollideDesc() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonUserMeshCollisionCollideDesc(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_float m_boxP0 {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_boxP0_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_boxP0_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_boxP1 {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_boxP1_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_boxP1_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_boxDistanceTravel {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_boxDistanceTravel_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_boxDistanceTravel_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public int m_threadNumber {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_threadNumber_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_threadNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int m_faceCount {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_faceCount_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_faceCount_get(swigCPtr);
      return ret;
    } 
  }

  public int m_vertexStrideInBytes {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_vertexStrideInBytes_set(swigCPtr, value);
    } 
    get {
      int ret = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_vertexStrideInBytes_get(swigCPtr);
      return ret;
    } 
  }

  public float m_skinThickness {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_skinThickness_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_skinThickness_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_void m_userData {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_userData_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_userData_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_NewtonBody m_objBody {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_objBody_set(swigCPtr, SWIGTYPE_p_NewtonBody.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_objBody_get(swigCPtr);
      SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_NewtonBody m_polySoupBody {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_polySoupBody_set(swigCPtr, SWIGTYPE_p_NewtonBody.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_polySoupBody_get(swigCPtr);
      SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_NewtonCollision m_objCollision {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_objCollision_set(swigCPtr, SWIGTYPE_p_NewtonCollision.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_objCollision_get(swigCPtr);
      SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_NewtonCollision m_polySoupCollision {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_polySoupCollision_set(swigCPtr, SWIGTYPE_p_NewtonCollision.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_polySoupCollision_get(swigCPtr);
      SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_vertex {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_vertex_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_vertex_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int m_faceIndexCount {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_faceIndexCount_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_faceIndexCount_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_int m_faceVertexIndex {
    set {
      cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_faceVertexIndex_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionCollideDesc_m_faceVertexIndex_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public NewtonUserMeshCollisionCollideDesc() : this(cppPINVOKE.new_NewtonUserMeshCollisionCollideDesc(), true) {
  }

}

public class NewtonWorldConvexCastReturnInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonWorldConvexCastReturnInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonWorldConvexCastReturnInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonWorldConvexCastReturnInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonWorldConvexCastReturnInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_float m_point {
    set {
      cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_point_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_point_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_normal {
    set {
      cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_normal_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_normal_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public long m_contactID {
    set {
      cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_contactID_set(swigCPtr, value);
    } 
    get {
      long ret = cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_contactID_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_NewtonBody m_hitBody {
    set {
      cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_hitBody_set(swigCPtr, SWIGTYPE_p_NewtonBody.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_hitBody_get(swigCPtr);
      SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
      return ret;
    } 
  }

  public float m_penetration {
    set {
      cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_penetration_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonWorldConvexCastReturnInfo_m_penetration_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonWorldConvexCastReturnInfo() : this(cppPINVOKE.new_NewtonWorldConvexCastReturnInfo(), true) {
  }

}

public class NewtonUserMeshCollisionRayHitDesc : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonUserMeshCollisionRayHitDesc(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonUserMeshCollisionRayHitDesc obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonUserMeshCollisionRayHitDesc() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonUserMeshCollisionRayHitDesc(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_float m_p0 {
    set {
      cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_p0_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_p0_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_p1 {
    set {
      cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_p1_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_p1_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_normalOut {
    set {
      cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_normalOut_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_normalOut_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public long m_userIdOut {
    set {
      cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_userIdOut_set(swigCPtr, value);
    } 
    get {
      long ret = cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_userIdOut_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_void m_userData {
    set {
      cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_userData_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserMeshCollisionRayHitDesc_m_userData_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public NewtonUserMeshCollisionRayHitDesc() : this(cppPINVOKE.new_NewtonUserMeshCollisionRayHitDesc(), true) {
  }

}

public class NewtonHingeSliderUpdateDesc : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonHingeSliderUpdateDesc(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonHingeSliderUpdateDesc obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonHingeSliderUpdateDesc() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonHingeSliderUpdateDesc(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_accel {
    set {
      cppPINVOKE.NewtonHingeSliderUpdateDesc_m_accel_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonHingeSliderUpdateDesc_m_accel_get(swigCPtr);
      return ret;
    } 
  }

  public float m_minFriction {
    set {
      cppPINVOKE.NewtonHingeSliderUpdateDesc_m_minFriction_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonHingeSliderUpdateDesc_m_minFriction_get(swigCPtr);
      return ret;
    } 
  }

  public float m_maxFriction {
    set {
      cppPINVOKE.NewtonHingeSliderUpdateDesc_m_maxFriction_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonHingeSliderUpdateDesc_m_maxFriction_get(swigCPtr);
      return ret;
    } 
  }

  public float m_timestep {
    set {
      cppPINVOKE.NewtonHingeSliderUpdateDesc_m_timestep_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonHingeSliderUpdateDesc_m_timestep_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonHingeSliderUpdateDesc() : this(cppPINVOKE.new_NewtonHingeSliderUpdateDesc(), true) {
  }

}

public class NewtonClothPatchMaterial : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonClothPatchMaterial(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonClothPatchMaterial obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonClothPatchMaterial() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonClothPatchMaterial(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_damper {
    set {
      cppPINVOKE.NewtonClothPatchMaterial_m_damper_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonClothPatchMaterial_m_damper_get(swigCPtr);
      return ret;
    } 
  }

  public float m_stiffness {
    set {
      cppPINVOKE.NewtonClothPatchMaterial_m_stiffness_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonClothPatchMaterial_m_stiffness_get(swigCPtr);
      return ret;
    } 
  }

  public NewtonClothPatchMaterial() : this(cppPINVOKE.new_NewtonClothPatchMaterial(), true) {
  }

}

public class NewtonSkeletonBoneJacobian : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonSkeletonBoneJacobian(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonSkeletonBoneJacobian obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonSkeletonBoneJacobian() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonSkeletonBoneJacobian(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_float m_linear {
    set {
      cppPINVOKE.NewtonSkeletonBoneJacobian_m_linear_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonBoneJacobian_m_linear_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_angular {
    set {
      cppPINVOKE.NewtonSkeletonBoneJacobian_m_angular_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonBoneJacobian_m_angular_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public NewtonSkeletonBoneJacobian() : this(cppPINVOKE.new_NewtonSkeletonBoneJacobian(), true) {
  }

}

public class NewtonSkeletonBoneJacobianPair : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonSkeletonBoneJacobianPair(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonSkeletonBoneJacobianPair obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonSkeletonBoneJacobianPair() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonSkeletonBoneJacobianPair(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public NewtonSkeletonBoneJacobian m_j01 {
    set {
      cppPINVOKE.NewtonSkeletonBoneJacobianPair_m_j01_set(swigCPtr, NewtonSkeletonBoneJacobian.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonBoneJacobianPair_m_j01_get(swigCPtr);
      NewtonSkeletonBoneJacobian ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonSkeletonBoneJacobian(cPtr, false);
      return ret;
    } 
  }

  public NewtonSkeletonBoneJacobian m_j10 {
    set {
      cppPINVOKE.NewtonSkeletonBoneJacobianPair_m_j10_set(swigCPtr, NewtonSkeletonBoneJacobian.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonBoneJacobianPair_m_j10_get(swigCPtr);
      NewtonSkeletonBoneJacobian ret = (cPtr == global::System.IntPtr.Zero) ? null : new NewtonSkeletonBoneJacobian(cPtr, false);
      return ret;
    } 
  }

  public NewtonSkeletonBoneJacobianPair() : this(cppPINVOKE.new_NewtonSkeletonBoneJacobianPair(), true) {
  }

}

public class NewtonUserContactPoint : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NewtonUserContactPoint(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NewtonUserContactPoint obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NewtonUserContactPoint() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_NewtonUserContactPoint(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_float m_point {
    set {
      cppPINVOKE.NewtonUserContactPoint_m_point_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserContactPoint_m_point_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_normal {
    set {
      cppPINVOKE.NewtonUserContactPoint_m_normal_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserContactPoint_m_normal_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public long m_shapeId0 {
    set {
      cppPINVOKE.NewtonUserContactPoint_m_shapeId0_set(swigCPtr, value);
    } 
    get {
      long ret = cppPINVOKE.NewtonUserContactPoint_m_shapeId0_get(swigCPtr);
      return ret;
    } 
  }

  public long m_shapeId1 {
    set {
      cppPINVOKE.NewtonUserContactPoint_m_shapeId1_set(swigCPtr, value);
    } 
    get {
      long ret = cppPINVOKE.NewtonUserContactPoint_m_shapeId1_get(swigCPtr);
      return ret;
    } 
  }

  public float m_penetration {
    set {
      cppPINVOKE.NewtonUserContactPoint_m_penetration_set(swigCPtr, value);
    } 
    get {
      float ret = cppPINVOKE.NewtonUserContactPoint_m_penetration_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_int m_unused {
    set {
      cppPINVOKE.NewtonUserContactPoint_m_unused_set(swigCPtr, SWIGTYPE_p_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.NewtonUserContactPoint_m_unused_get(swigCPtr);
      SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
      return ret;
    } 
  }

  public NewtonUserContactPoint() : this(cppPINVOKE.new_NewtonUserContactPoint(), true) {
  }

}

class cppPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="SWIGRegisterExceptionCallbacks_cpp")]
    public static extern void SWIGRegisterExceptionCallbacks_cpp(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_cpp")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_cpp(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_cpp(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_cpp(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(cppPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(cppPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="SWIGRegisterStringCallback_cpp")]
    public static extern void SWIGRegisterStringCallback_cpp(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_cpp(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static cppPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NEWTON_MAJOR_VERSION_get")]
  public static extern int NEWTON_MAJOR_VERSION_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NEWTON_MINOR_VERSION_get")]
  public static extern int NEWTON_MINOR_VERSION_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NEWTON_BROADPHASE_DEFAULT_get")]
  public static extern int NEWTON_BROADPHASE_DEFAULT_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NEWTON_BROADPHASE_PERSINTENT_get")]
  public static extern int NEWTON_BROADPHASE_PERSINTENT_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NEWTON_DYNAMIC_BODY_get")]
  public static extern int NEWTON_DYNAMIC_BODY_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NEWTON_KINEMATIC_BODY_get")]
  public static extern int NEWTON_KINEMATIC_BODY_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NEWTON_DEFORMABLE_BODY_get")]
  public static extern int NEWTON_DEFORMABLE_BODY_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_SPHERE_get")]
  public static extern int SERIALIZE_ID_SPHERE_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_CAPSULE_get")]
  public static extern int SERIALIZE_ID_CAPSULE_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_CYLINDER_get")]
  public static extern int SERIALIZE_ID_CYLINDER_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_CHAMFERCYLINDER_get")]
  public static extern int SERIALIZE_ID_CHAMFERCYLINDER_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_BOX_get")]
  public static extern int SERIALIZE_ID_BOX_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_CONE_get")]
  public static extern int SERIALIZE_ID_CONE_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_CONVEXHULL_get")]
  public static extern int SERIALIZE_ID_CONVEXHULL_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_NULL_get")]
  public static extern int SERIALIZE_ID_NULL_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_COMPOUND_get")]
  public static extern int SERIALIZE_ID_COMPOUND_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_TREE_get")]
  public static extern int SERIALIZE_ID_TREE_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_HEIGHTFIELD_get")]
  public static extern int SERIALIZE_ID_HEIGHTFIELD_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_CLOTH_PATCH_get")]
  public static extern int SERIALIZE_ID_CLOTH_PATCH_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_DEFORMABLE_SOLID_get")]
  public static extern int SERIALIZE_ID_DEFORMABLE_SOLID_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_USERMESH_get")]
  public static extern int SERIALIZE_ID_USERMESH_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_SCENE_get")]
  public static extern int SERIALIZE_ID_SCENE_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_SERIALIZE_ID_FRACTURED_COMPOUND_get")]
  public static extern int SERIALIZE_ID_FRACTURED_COMPOUND_get();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBoxParam_m_x_set")]
  public static extern void NewtonBoxParam_m_x_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBoxParam_m_x_get")]
  public static extern float NewtonBoxParam_m_x_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBoxParam_m_y_set")]
  public static extern void NewtonBoxParam_m_y_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBoxParam_m_y_get")]
  public static extern float NewtonBoxParam_m_y_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBoxParam_m_z_set")]
  public static extern void NewtonBoxParam_m_z_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBoxParam_m_z_get")]
  public static extern float NewtonBoxParam_m_z_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonBoxParam")]
  public static extern global::System.IntPtr new_NewtonBoxParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonBoxParam")]
  public static extern void delete_NewtonBoxParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSphereParam_m_radio_set")]
  public static extern void NewtonSphereParam_m_radio_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSphereParam_m_radio_get")]
  public static extern float NewtonSphereParam_m_radio_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonSphereParam")]
  public static extern global::System.IntPtr new_NewtonSphereParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonSphereParam")]
  public static extern void delete_NewtonSphereParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCapsuleParam_m_radio0_set")]
  public static extern void NewtonCapsuleParam_m_radio0_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCapsuleParam_m_radio0_get")]
  public static extern float NewtonCapsuleParam_m_radio0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCapsuleParam_m_radio1_set")]
  public static extern void NewtonCapsuleParam_m_radio1_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCapsuleParam_m_radio1_get")]
  public static extern float NewtonCapsuleParam_m_radio1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCapsuleParam_m_height_set")]
  public static extern void NewtonCapsuleParam_m_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCapsuleParam_m_height_get")]
  public static extern float NewtonCapsuleParam_m_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonCapsuleParam")]
  public static extern global::System.IntPtr new_NewtonCapsuleParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonCapsuleParam")]
  public static extern void delete_NewtonCapsuleParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCylinderParam_m_radio0_set")]
  public static extern void NewtonCylinderParam_m_radio0_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCylinderParam_m_radio0_get")]
  public static extern float NewtonCylinderParam_m_radio0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCylinderParam_m_radio1_set")]
  public static extern void NewtonCylinderParam_m_radio1_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCylinderParam_m_radio1_get")]
  public static extern float NewtonCylinderParam_m_radio1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCylinderParam_m_height_set")]
  public static extern void NewtonCylinderParam_m_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCylinderParam_m_height_get")]
  public static extern float NewtonCylinderParam_m_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonCylinderParam")]
  public static extern global::System.IntPtr new_NewtonCylinderParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonCylinderParam")]
  public static extern void delete_NewtonCylinderParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConeParam_m_radio_set")]
  public static extern void NewtonConeParam_m_radio_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConeParam_m_radio_get")]
  public static extern float NewtonConeParam_m_radio_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConeParam_m_height_set")]
  public static extern void NewtonConeParam_m_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConeParam_m_height_get")]
  public static extern float NewtonConeParam_m_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonConeParam")]
  public static extern global::System.IntPtr new_NewtonConeParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonConeParam")]
  public static extern void delete_NewtonConeParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonChamferCylinderParam_m_radio_set")]
  public static extern void NewtonChamferCylinderParam_m_radio_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonChamferCylinderParam_m_radio_get")]
  public static extern float NewtonChamferCylinderParam_m_radio_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonChamferCylinderParam_m_height_set")]
  public static extern void NewtonChamferCylinderParam_m_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonChamferCylinderParam_m_height_get")]
  public static extern float NewtonChamferCylinderParam_m_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonChamferCylinderParam")]
  public static extern global::System.IntPtr new_NewtonChamferCylinderParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonChamferCylinderParam")]
  public static extern void delete_NewtonChamferCylinderParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullParam_m_vertexCount_set")]
  public static extern void NewtonConvexHullParam_m_vertexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullParam_m_vertexCount_get")]
  public static extern int NewtonConvexHullParam_m_vertexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullParam_m_vertexStrideInBytes_set")]
  public static extern void NewtonConvexHullParam_m_vertexStrideInBytes_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullParam_m_vertexStrideInBytes_get")]
  public static extern int NewtonConvexHullParam_m_vertexStrideInBytes_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullParam_m_faceCount_set")]
  public static extern void NewtonConvexHullParam_m_faceCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullParam_m_faceCount_get")]
  public static extern int NewtonConvexHullParam_m_faceCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullParam_m_vertex_set")]
  public static extern void NewtonConvexHullParam_m_vertex_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullParam_m_vertex_get")]
  public static extern global::System.IntPtr NewtonConvexHullParam_m_vertex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonConvexHullParam")]
  public static extern global::System.IntPtr new_NewtonConvexHullParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonConvexHullParam")]
  public static extern void delete_NewtonConvexHullParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionParam_m_chidrenCount_set")]
  public static extern void NewtonCompoundCollisionParam_m_chidrenCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionParam_m_chidrenCount_get")]
  public static extern int NewtonCompoundCollisionParam_m_chidrenCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonCompoundCollisionParam")]
  public static extern global::System.IntPtr new_NewtonCompoundCollisionParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonCompoundCollisionParam")]
  public static extern void delete_NewtonCompoundCollisionParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionTreeParam_m_vertexCount_set")]
  public static extern void NewtonCollisionTreeParam_m_vertexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionTreeParam_m_vertexCount_get")]
  public static extern int NewtonCollisionTreeParam_m_vertexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionTreeParam_m_indexCount_set")]
  public static extern void NewtonCollisionTreeParam_m_indexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionTreeParam_m_indexCount_get")]
  public static extern int NewtonCollisionTreeParam_m_indexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonCollisionTreeParam")]
  public static extern global::System.IntPtr new_NewtonCollisionTreeParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonCollisionTreeParam")]
  public static extern void delete_NewtonCollisionTreeParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_vertexCount_set")]
  public static extern void NewtonDeformableMeshParam_m_vertexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_vertexCount_get")]
  public static extern int NewtonDeformableMeshParam_m_vertexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_triangleCount_set")]
  public static extern void NewtonDeformableMeshParam_m_triangleCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_triangleCount_get")]
  public static extern int NewtonDeformableMeshParam_m_triangleCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_vrtexStrideInBytes_set")]
  public static extern void NewtonDeformableMeshParam_m_vrtexStrideInBytes_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_vrtexStrideInBytes_get")]
  public static extern int NewtonDeformableMeshParam_m_vrtexStrideInBytes_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_indexList_set")]
  public static extern void NewtonDeformableMeshParam_m_indexList_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_indexList_get")]
  public static extern global::System.IntPtr NewtonDeformableMeshParam_m_indexList_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_vertexList_set")]
  public static extern void NewtonDeformableMeshParam_m_vertexList_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshParam_m_vertexList_get")]
  public static extern global::System.IntPtr NewtonDeformableMeshParam_m_vertexList_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonDeformableMeshParam")]
  public static extern global::System.IntPtr new_NewtonDeformableMeshParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonDeformableMeshParam")]
  public static extern void delete_NewtonDeformableMeshParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_width_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_width_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_width_get")]
  public static extern int NewtonHeightFieldCollisionParam_m_width_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_height_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_height_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_height_get")]
  public static extern int NewtonHeightFieldCollisionParam_m_height_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_gridsDiagonals_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_gridsDiagonals_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_gridsDiagonals_get")]
  public static extern int NewtonHeightFieldCollisionParam_m_gridsDiagonals_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_elevationDataType_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_elevationDataType_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_elevationDataType_get")]
  public static extern int NewtonHeightFieldCollisionParam_m_elevationDataType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_horizonalScale_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_horizonalScale_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_horizonalScale_get")]
  public static extern float NewtonHeightFieldCollisionParam_m_horizonalScale_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_verticalScale_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_verticalScale_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_verticalScale_get")]
  public static extern float NewtonHeightFieldCollisionParam_m_verticalScale_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_horizonalDisplacementScale_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_horizonalDisplacementScale_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_horizonalDisplacementScale_get")]
  public static extern float NewtonHeightFieldCollisionParam_m_horizonalDisplacementScale_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_vertialElevation_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_vertialElevation_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_vertialElevation_get")]
  public static extern global::System.IntPtr NewtonHeightFieldCollisionParam_m_vertialElevation_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_horizotalDisplacement_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_horizotalDisplacement_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_horizotalDisplacement_get")]
  public static extern global::System.IntPtr NewtonHeightFieldCollisionParam_m_horizotalDisplacement_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_atributes_set")]
  public static extern void NewtonHeightFieldCollisionParam_m_atributes_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldCollisionParam_m_atributes_get")]
  public static extern string NewtonHeightFieldCollisionParam_m_atributes_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonHeightFieldCollisionParam")]
  public static extern global::System.IntPtr new_NewtonHeightFieldCollisionParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonHeightFieldCollisionParam")]
  public static extern void delete_NewtonHeightFieldCollisionParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionParam_m_childrenProxyCount_set")]
  public static extern void NewtonSceneCollisionParam_m_childrenProxyCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionParam_m_childrenProxyCount_get")]
  public static extern int NewtonSceneCollisionParam_m_childrenProxyCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonSceneCollisionParam")]
  public static extern global::System.IntPtr new_NewtonSceneCollisionParam();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonSceneCollisionParam")]
  public static extern void delete_NewtonSceneCollisionParam(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_offsetMatrix_set")]
  public static extern void NewtonCollisionInfoRecord_m_offsetMatrix_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_offsetMatrix_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_offsetMatrix_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_collisionType_set")]
  public static extern void NewtonCollisionInfoRecord_m_collisionType_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_collisionType_get")]
  public static extern int NewtonCollisionInfoRecord_m_collisionType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_collisionUserID_set")]
  public static extern void NewtonCollisionInfoRecord_m_collisionUserID_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_collisionUserID_get")]
  public static extern int NewtonCollisionInfoRecord_m_collisionUserID_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_box_set")]
  public static extern void NewtonCollisionInfoRecord_m_box_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_box_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_box_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_cone_set")]
  public static extern void NewtonCollisionInfoRecord_m_cone_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_cone_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_cone_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_sphere_set")]
  public static extern void NewtonCollisionInfoRecord_m_sphere_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_sphere_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_sphere_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_capsule_set")]
  public static extern void NewtonCollisionInfoRecord_m_capsule_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_capsule_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_capsule_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_cylinder_set")]
  public static extern void NewtonCollisionInfoRecord_m_cylinder_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_cylinder_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_cylinder_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_chamferCylinder_set")]
  public static extern void NewtonCollisionInfoRecord_m_chamferCylinder_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_chamferCylinder_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_chamferCylinder_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_convexHull_set")]
  public static extern void NewtonCollisionInfoRecord_m_convexHull_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_convexHull_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_convexHull_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_deformableMesh_set")]
  public static extern void NewtonCollisionInfoRecord_m_deformableMesh_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_deformableMesh_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_deformableMesh_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_compoundCollision_set")]
  public static extern void NewtonCollisionInfoRecord_m_compoundCollision_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_compoundCollision_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_compoundCollision_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_collisionTree_set")]
  public static extern void NewtonCollisionInfoRecord_m_collisionTree_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_collisionTree_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_collisionTree_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_heightField_set")]
  public static extern void NewtonCollisionInfoRecord_m_heightField_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_heightField_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_heightField_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_sceneCollision_set")]
  public static extern void NewtonCollisionInfoRecord_m_sceneCollision_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_sceneCollision_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_sceneCollision_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_paramArray_set")]
  public static extern void NewtonCollisionInfoRecord_m_paramArray_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionInfoRecord_m_paramArray_get")]
  public static extern global::System.IntPtr NewtonCollisionInfoRecord_m_paramArray_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonCollisionInfoRecord")]
  public static extern global::System.IntPtr new_NewtonCollisionInfoRecord();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonCollisionInfoRecord")]
  public static extern void delete_NewtonCollisionInfoRecord(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_attachmenMatrix_0_set")]
  public static extern void NewtonJointRecord_m_attachmenMatrix_0_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_attachmenMatrix_0_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_attachmenMatrix_0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_attachmenMatrix_1_set")]
  public static extern void NewtonJointRecord_m_attachmenMatrix_1_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_attachmenMatrix_1_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_attachmenMatrix_1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_minLinearDof_set")]
  public static extern void NewtonJointRecord_m_minLinearDof_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_minLinearDof_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_minLinearDof_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_maxLinearDof_set")]
  public static extern void NewtonJointRecord_m_maxLinearDof_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_maxLinearDof_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_maxLinearDof_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_minAngularDof_set")]
  public static extern void NewtonJointRecord_m_minAngularDof_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_minAngularDof_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_minAngularDof_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_maxAngularDof_set")]
  public static extern void NewtonJointRecord_m_maxAngularDof_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_maxAngularDof_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_maxAngularDof_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_attachBody_0_set")]
  public static extern void NewtonJointRecord_m_attachBody_0_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_attachBody_0_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_attachBody_0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_attachBody_1_set")]
  public static extern void NewtonJointRecord_m_attachBody_1_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_attachBody_1_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_attachBody_1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_extraParameters_set")]
  public static extern void NewtonJointRecord_m_extraParameters_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_extraParameters_get")]
  public static extern global::System.IntPtr NewtonJointRecord_m_extraParameters_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_bodiesCollisionOn_set")]
  public static extern void NewtonJointRecord_m_bodiesCollisionOn_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_bodiesCollisionOn_get")]
  public static extern int NewtonJointRecord_m_bodiesCollisionOn_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_descriptionType_set")]
  public static extern void NewtonJointRecord_m_descriptionType_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointRecord_m_descriptionType_get")]
  public static extern string NewtonJointRecord_m_descriptionType_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonJointRecord")]
  public static extern global::System.IntPtr new_NewtonJointRecord();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonJointRecord")]
  public static extern void delete_NewtonJointRecord(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_boxP0_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_boxP0_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_boxP0_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_boxP0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_boxP1_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_boxP1_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_boxP1_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_boxP1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_boxDistanceTravel_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_boxDistanceTravel_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_boxDistanceTravel_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_boxDistanceTravel_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_threadNumber_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_threadNumber_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_threadNumber_get")]
  public static extern int NewtonUserMeshCollisionCollideDesc_m_threadNumber_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_faceCount_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_faceCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_faceCount_get")]
  public static extern int NewtonUserMeshCollisionCollideDesc_m_faceCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_vertexStrideInBytes_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_vertexStrideInBytes_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_vertexStrideInBytes_get")]
  public static extern int NewtonUserMeshCollisionCollideDesc_m_vertexStrideInBytes_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_skinThickness_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_skinThickness_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_skinThickness_get")]
  public static extern float NewtonUserMeshCollisionCollideDesc_m_skinThickness_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_userData_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_userData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_userData_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_userData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_objBody_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_objBody_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_objBody_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_objBody_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_polySoupBody_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_polySoupBody_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_polySoupBody_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_polySoupBody_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_objCollision_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_objCollision_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_objCollision_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_objCollision_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_polySoupCollision_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_polySoupCollision_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_polySoupCollision_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_polySoupCollision_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_vertex_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_vertex_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_vertex_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_vertex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_faceIndexCount_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_faceIndexCount_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_faceIndexCount_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_faceIndexCount_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_faceVertexIndex_set")]
  public static extern void NewtonUserMeshCollisionCollideDesc_m_faceVertexIndex_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionCollideDesc_m_faceVertexIndex_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionCollideDesc_m_faceVertexIndex_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonUserMeshCollisionCollideDesc")]
  public static extern global::System.IntPtr new_NewtonUserMeshCollisionCollideDesc();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonUserMeshCollisionCollideDesc")]
  public static extern void delete_NewtonUserMeshCollisionCollideDesc(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_point_set")]
  public static extern void NewtonWorldConvexCastReturnInfo_m_point_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_point_get")]
  public static extern global::System.IntPtr NewtonWorldConvexCastReturnInfo_m_point_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_normal_set")]
  public static extern void NewtonWorldConvexCastReturnInfo_m_normal_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_normal_get")]
  public static extern global::System.IntPtr NewtonWorldConvexCastReturnInfo_m_normal_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_contactID_set")]
  public static extern void NewtonWorldConvexCastReturnInfo_m_contactID_set(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_contactID_get")]
  public static extern long NewtonWorldConvexCastReturnInfo_m_contactID_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_hitBody_set")]
  public static extern void NewtonWorldConvexCastReturnInfo_m_hitBody_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_hitBody_get")]
  public static extern global::System.IntPtr NewtonWorldConvexCastReturnInfo_m_hitBody_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_penetration_set")]
  public static extern void NewtonWorldConvexCastReturnInfo_m_penetration_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCastReturnInfo_m_penetration_get")]
  public static extern float NewtonWorldConvexCastReturnInfo_m_penetration_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonWorldConvexCastReturnInfo")]
  public static extern global::System.IntPtr new_NewtonWorldConvexCastReturnInfo();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonWorldConvexCastReturnInfo")]
  public static extern void delete_NewtonWorldConvexCastReturnInfo(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_p0_set")]
  public static extern void NewtonUserMeshCollisionRayHitDesc_m_p0_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_p0_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionRayHitDesc_m_p0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_p1_set")]
  public static extern void NewtonUserMeshCollisionRayHitDesc_m_p1_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_p1_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionRayHitDesc_m_p1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_normalOut_set")]
  public static extern void NewtonUserMeshCollisionRayHitDesc_m_normalOut_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_normalOut_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionRayHitDesc_m_normalOut_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_userIdOut_set")]
  public static extern void NewtonUserMeshCollisionRayHitDesc_m_userIdOut_set(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_userIdOut_get")]
  public static extern long NewtonUserMeshCollisionRayHitDesc_m_userIdOut_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_userData_set")]
  public static extern void NewtonUserMeshCollisionRayHitDesc_m_userData_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionRayHitDesc_m_userData_get")]
  public static extern global::System.IntPtr NewtonUserMeshCollisionRayHitDesc_m_userData_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonUserMeshCollisionRayHitDesc")]
  public static extern global::System.IntPtr new_NewtonUserMeshCollisionRayHitDesc();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonUserMeshCollisionRayHitDesc")]
  public static extern void delete_NewtonUserMeshCollisionRayHitDesc(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSliderUpdateDesc_m_accel_set")]
  public static extern void NewtonHingeSliderUpdateDesc_m_accel_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSliderUpdateDesc_m_accel_get")]
  public static extern float NewtonHingeSliderUpdateDesc_m_accel_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSliderUpdateDesc_m_minFriction_set")]
  public static extern void NewtonHingeSliderUpdateDesc_m_minFriction_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSliderUpdateDesc_m_minFriction_get")]
  public static extern float NewtonHingeSliderUpdateDesc_m_minFriction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSliderUpdateDesc_m_maxFriction_set")]
  public static extern void NewtonHingeSliderUpdateDesc_m_maxFriction_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSliderUpdateDesc_m_maxFriction_get")]
  public static extern float NewtonHingeSliderUpdateDesc_m_maxFriction_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSliderUpdateDesc_m_timestep_set")]
  public static extern void NewtonHingeSliderUpdateDesc_m_timestep_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSliderUpdateDesc_m_timestep_get")]
  public static extern float NewtonHingeSliderUpdateDesc_m_timestep_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonHingeSliderUpdateDesc")]
  public static extern global::System.IntPtr new_NewtonHingeSliderUpdateDesc();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonHingeSliderUpdateDesc")]
  public static extern void delete_NewtonHingeSliderUpdateDesc(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonClothPatchMaterial_m_damper_set")]
  public static extern void NewtonClothPatchMaterial_m_damper_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonClothPatchMaterial_m_damper_get")]
  public static extern float NewtonClothPatchMaterial_m_damper_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonClothPatchMaterial_m_stiffness_set")]
  public static extern void NewtonClothPatchMaterial_m_stiffness_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonClothPatchMaterial_m_stiffness_get")]
  public static extern float NewtonClothPatchMaterial_m_stiffness_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonClothPatchMaterial")]
  public static extern global::System.IntPtr new_NewtonClothPatchMaterial();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonClothPatchMaterial")]
  public static extern void delete_NewtonClothPatchMaterial(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonBoneJacobian_m_linear_set")]
  public static extern void NewtonSkeletonBoneJacobian_m_linear_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonBoneJacobian_m_linear_get")]
  public static extern global::System.IntPtr NewtonSkeletonBoneJacobian_m_linear_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonBoneJacobian_m_angular_set")]
  public static extern void NewtonSkeletonBoneJacobian_m_angular_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonBoneJacobian_m_angular_get")]
  public static extern global::System.IntPtr NewtonSkeletonBoneJacobian_m_angular_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonSkeletonBoneJacobian")]
  public static extern global::System.IntPtr new_NewtonSkeletonBoneJacobian();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonSkeletonBoneJacobian")]
  public static extern void delete_NewtonSkeletonBoneJacobian(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonBoneJacobianPair_m_j01_set")]
  public static extern void NewtonSkeletonBoneJacobianPair_m_j01_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonBoneJacobianPair_m_j01_get")]
  public static extern global::System.IntPtr NewtonSkeletonBoneJacobianPair_m_j01_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonBoneJacobianPair_m_j10_set")]
  public static extern void NewtonSkeletonBoneJacobianPair_m_j10_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonBoneJacobianPair_m_j10_get")]
  public static extern global::System.IntPtr NewtonSkeletonBoneJacobianPair_m_j10_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonSkeletonBoneJacobianPair")]
  public static extern global::System.IntPtr new_NewtonSkeletonBoneJacobianPair();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonSkeletonBoneJacobianPair")]
  public static extern void delete_NewtonSkeletonBoneJacobianPair(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_point_set")]
  public static extern void NewtonUserContactPoint_m_point_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_point_get")]
  public static extern global::System.IntPtr NewtonUserContactPoint_m_point_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_normal_set")]
  public static extern void NewtonUserContactPoint_m_normal_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_normal_get")]
  public static extern global::System.IntPtr NewtonUserContactPoint_m_normal_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_shapeId0_set")]
  public static extern void NewtonUserContactPoint_m_shapeId0_set(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_shapeId0_get")]
  public static extern long NewtonUserContactPoint_m_shapeId0_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_shapeId1_set")]
  public static extern void NewtonUserContactPoint_m_shapeId1_set(global::System.Runtime.InteropServices.HandleRef jarg1, long jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_shapeId1_get")]
  public static extern long NewtonUserContactPoint_m_shapeId1_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_penetration_set")]
  public static extern void NewtonUserContactPoint_m_penetration_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_penetration_get")]
  public static extern float NewtonUserContactPoint_m_penetration_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_unused_set")]
  public static extern void NewtonUserContactPoint_m_unused_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserContactPoint_m_unused_get")]
  public static extern global::System.IntPtr NewtonUserContactPoint_m_unused_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_new_NewtonUserContactPoint")]
  public static extern global::System.IntPtr new_NewtonUserContactPoint();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_delete_NewtonUserContactPoint")]
  public static extern void delete_NewtonUserContactPoint(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetVersion")]
  public static extern int NewtonWorldGetVersion();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldFloatSize")]
  public static extern int NewtonWorldFloatSize();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetMemoryUsed")]
  public static extern int NewtonGetMemoryUsed();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetMemorySystem")]
  public static extern void NewtonSetMemorySystem(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreate")]
  public static extern global::System.IntPtr NewtonCreate();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDestroy")]
  public static extern void NewtonDestroy(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDestroyAllBodies")]
  public static extern void NewtonDestroyAllBodies(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonAlloc")]
  public static extern global::System.IntPtr NewtonAlloc(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFree")]
  public static extern void NewtonFree(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonEnumerateDevices")]
  public static extern int NewtonEnumerateDevices(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetCurrentDevice")]
  public static extern int NewtonGetCurrentDevice(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetCurrentDevice")]
  public static extern void NewtonSetCurrentDevice(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetDeviceString")]
  public static extern void NewtonGetDeviceString(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetContactMergeTolerance")]
  public static extern float NewtonGetContactMergeTolerance(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetContactMergeTolerance")]
  public static extern void NewtonSetContactMergeTolerance(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonInvalidateCache")]
  public static extern void NewtonInvalidateCache(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetSolverModel")]
  public static extern void NewtonSetSolverModel(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetSolverConvergenceQuality")]
  public static extern void NewtonSetSolverConvergenceQuality(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetMultiThreadSolverOnSingleIsland")]
  public static extern void NewtonSetMultiThreadSolverOnSingleIsland(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetMultiThreadSolverOnSingleIsland")]
  public static extern int NewtonGetMultiThreadSolverOnSingleIsland(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetBroadphaseAlgorithm")]
  public static extern int NewtonGetBroadphaseAlgorithm(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSelectBroadphaseAlgorithm")]
  public static extern void NewtonSelectBroadphaseAlgorithm(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUpdate")]
  public static extern void NewtonUpdate(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUpdateAsync")]
  public static extern void NewtonUpdateAsync(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWaitForUpdateToFinish")]
  public static extern void NewtonWaitForUpdateToFinish(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSerializeToFile")]
  public static extern void NewtonSerializeToFile(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeserializeFromFile")]
  public static extern void NewtonDeserializeFromFile(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetJointSerializationCallbacks")]
  public static extern void NewtonSetJointSerializationCallbacks(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetJointSerializationCallbacks")]
  public static extern void NewtonGetJointSerializationCallbacks(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldCriticalSectionLock")]
  public static extern void NewtonWorldCriticalSectionLock(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldCriticalSectionUnlock")]
  public static extern void NewtonWorldCriticalSectionUnlock(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetThreadsCount")]
  public static extern void NewtonSetThreadsCount(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetThreadsCount")]
  public static extern int NewtonGetThreadsCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetMaxThreadsCount")]
  public static extern int NewtonGetMaxThreadsCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDispachThreadJob")]
  public static extern void NewtonDispachThreadJob(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSyncThreadJobs")]
  public static extern void NewtonSyncThreadJobs(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonAtomicAdd")]
  public static extern int NewtonAtomicAdd(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonAtomicSwap")]
  public static extern int NewtonAtomicSwap(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonYield")]
  public static extern void NewtonYield();

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetFrictionModel")]
  public static extern void NewtonSetFrictionModel(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetMinimumFrameRate")]
  public static extern void NewtonSetMinimumFrameRate(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetIslandUpdateEvent")]
  public static extern void NewtonSetIslandUpdateEvent(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldForEachJointDo")]
  public static extern void NewtonWorldForEachJointDo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldForEachBodyInAABBDo")]
  public static extern void NewtonWorldForEachBodyInAABBDo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldSetUserData")]
  public static extern void NewtonWorldSetUserData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetUserData")]
  public static extern global::System.IntPtr NewtonWorldGetUserData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetListenerUserData")]
  public static extern global::System.IntPtr NewtonWorldGetListenerUserData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldListenerGetBodyDestroyCallback")]
  public static extern global::System.IntPtr NewtonWorldListenerGetBodyDestroyCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldListenerSetBodyDestroyCallback")]
  public static extern void NewtonWorldListenerSetBodyDestroyCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetPreListener")]
  public static extern global::System.IntPtr NewtonWorldGetPreListener(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldAddPreListener")]
  public static extern global::System.IntPtr NewtonWorldAddPreListener(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetPostListener")]
  public static extern global::System.IntPtr NewtonWorldGetPostListener(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldAddPostListener")]
  public static extern global::System.IntPtr NewtonWorldAddPostListener(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldSetDestructorCallback")]
  public static extern void NewtonWorldSetDestructorCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetDestructorCallback")]
  public static extern global::System.IntPtr NewtonWorldGetDestructorCallback(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldSetCollisionConstructorDestructorCallback")]
  public static extern void NewtonWorldSetCollisionConstructorDestructorCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldRayCast")]
  public static extern void NewtonWorldRayCast(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, int jarg7);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldConvexCast")]
  public static extern int NewtonWorldConvexCast(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, int jarg9, int jarg10);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldCollide")]
  public static extern int NewtonWorldCollide(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, int jarg7, int jarg8);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetBodyCount")]
  public static extern int NewtonWorldGetBodyCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetConstraintCount")]
  public static extern int NewtonWorldGetConstraintCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonIslandGetBody")]
  public static extern global::System.IntPtr NewtonIslandGetBody(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonIslandGetBodyAABB")]
  public static extern void NewtonIslandGetBodyAABB(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialCreateGroupID")]
  public static extern int NewtonMaterialCreateGroupID(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetDefaultGroupID")]
  public static extern int NewtonMaterialGetDefaultGroupID(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialDestroyAllGroupID")]
  public static extern void NewtonMaterialDestroyAllGroupID(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetUserData")]
  public static extern global::System.IntPtr NewtonMaterialGetUserData(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetSurfaceThickness")]
  public static extern void NewtonMaterialSetSurfaceThickness(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetCallbackUserData")]
  public static extern void NewtonMaterialSetCallbackUserData(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactGenerationCallback")]
  public static extern void NewtonMaterialSetContactGenerationCallback(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetCompoundCollisionCallback")]
  public static extern void NewtonMaterialSetCompoundCollisionCallback(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetCollisionCallback")]
  public static extern void NewtonMaterialSetCollisionCallback(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetDefaultSoftness")]
  public static extern void NewtonMaterialSetDefaultSoftness(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetDefaultElasticity")]
  public static extern void NewtonMaterialSetDefaultElasticity(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetDefaultCollidable")]
  public static extern void NewtonMaterialSetDefaultCollidable(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetDefaultFriction")]
  public static extern void NewtonMaterialSetDefaultFriction(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, float jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetFirstMaterial")]
  public static extern global::System.IntPtr NewtonWorldGetFirstMaterial(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetNextMaterial")]
  public static extern global::System.IntPtr NewtonWorldGetNextMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetFirstBody")]
  public static extern global::System.IntPtr NewtonWorldGetFirstBody(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonWorldGetNextBody")]
  public static extern global::System.IntPtr NewtonWorldGetNextBody(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetMaterialPairUserData")]
  public static extern global::System.IntPtr NewtonMaterialGetMaterialPairUserData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetContactFaceAttribute")]
  public static extern uint NewtonMaterialGetContactFaceAttribute(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetBodyCollidingShape")]
  public static extern global::System.IntPtr NewtonMaterialGetBodyCollidingShape(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetContactNormalSpeed")]
  public static extern float NewtonMaterialGetContactNormalSpeed(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetContactForce")]
  public static extern void NewtonMaterialGetContactForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetContactPositionAndNormal")]
  public static extern void NewtonMaterialGetContactPositionAndNormal(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetContactTangentDirections")]
  public static extern void NewtonMaterialGetContactTangentDirections(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetContactTangentSpeed")]
  public static extern float NewtonMaterialGetContactTangentSpeed(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetContactMaxNormalImpact")]
  public static extern float NewtonMaterialGetContactMaxNormalImpact(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialGetContactMaxTangentImpact")]
  public static extern float NewtonMaterialGetContactMaxTangentImpact(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactSoftness")]
  public static extern void NewtonMaterialSetContactSoftness(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactElasticity")]
  public static extern void NewtonMaterialSetContactElasticity(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactFrictionState")]
  public static extern void NewtonMaterialSetContactFrictionState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactFrictionCoef")]
  public static extern void NewtonMaterialSetContactFrictionCoef(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactNormalAcceleration")]
  public static extern void NewtonMaterialSetContactNormalAcceleration(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactNormalDirection")]
  public static extern void NewtonMaterialSetContactNormalDirection(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactPosition")]
  public static extern void NewtonMaterialSetContactPosition(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactTangentFriction")]
  public static extern void NewtonMaterialSetContactTangentFriction(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialSetContactTangentAcceleration")]
  public static extern void NewtonMaterialSetContactTangentAcceleration(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMaterialContactRotateTangentDirections")]
  public static extern void NewtonMaterialContactRotateTangentDirections(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateNull")]
  public static extern global::System.IntPtr NewtonCreateNull(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateSphere")]
  public static extern global::System.IntPtr NewtonCreateSphere(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateBox")]
  public static extern global::System.IntPtr NewtonCreateBox(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, float jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateCone")]
  public static extern global::System.IntPtr NewtonCreateCone(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateCapsule")]
  public static extern global::System.IntPtr NewtonCreateCapsule(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, float jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateCylinder")]
  public static extern global::System.IntPtr NewtonCreateCylinder(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, float jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateChamferCylinder")]
  public static extern global::System.IntPtr NewtonCreateChamferCylinder(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateConvexHull")]
  public static extern global::System.IntPtr NewtonCreateConvexHull(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, float jarg5, int jarg6, global::System.Runtime.InteropServices.HandleRef jarg7);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateConvexHullFromMesh")]
  public static extern global::System.IntPtr NewtonCreateConvexHullFromMesh(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetMode")]
  public static extern int NewtonCollisionGetMode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionSetMode")]
  public static extern void NewtonCollisionSetMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullGetFaceIndices")]
  public static extern int NewtonConvexHullGetFaceIndices(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexHullGetVertexData")]
  public static extern int NewtonConvexHullGetVertexData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexCollisionCalculateVolume")]
  public static extern float NewtonConvexCollisionCalculateVolume(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexCollisionCalculateInertialMatrix")]
  public static extern void NewtonConvexCollisionCalculateInertialMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConvexCollisionCalculateBuoyancyAcceleration")]
  public static extern void NewtonConvexCollisionCalculateBuoyancyAcceleration(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, float jarg6, float jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, global::System.Runtime.InteropServices.HandleRef jarg9);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionDataPointer")]
  public static extern global::System.IntPtr NewtonCollisionDataPointer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateCompoundCollision")]
  public static extern global::System.IntPtr NewtonCreateCompoundCollision(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateCompoundCollisionFromMesh")]
  public static extern global::System.IntPtr NewtonCreateCompoundCollisionFromMesh(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionBeginAddRemove")]
  public static extern void NewtonCompoundCollisionBeginAddRemove(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionAddSubCollision")]
  public static extern global::System.IntPtr NewtonCompoundCollisionAddSubCollision(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionRemoveSubCollision")]
  public static extern void NewtonCompoundCollisionRemoveSubCollision(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionRemoveSubCollisionByIndex")]
  public static extern void NewtonCompoundCollisionRemoveSubCollisionByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionSetSubCollisionMatrix")]
  public static extern void NewtonCompoundCollisionSetSubCollisionMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionEndAddRemove")]
  public static extern void NewtonCompoundCollisionEndAddRemove(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionGetFirstNode")]
  public static extern global::System.IntPtr NewtonCompoundCollisionGetFirstNode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionGetNextNode")]
  public static extern global::System.IntPtr NewtonCompoundCollisionGetNextNode(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionGetNodeByIndex")]
  public static extern global::System.IntPtr NewtonCompoundCollisionGetNodeByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionGetNodeIndex")]
  public static extern int NewtonCompoundCollisionGetNodeIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCompoundCollisionGetCollisionFromNode")]
  public static extern global::System.IntPtr NewtonCompoundCollisionGetCollisionFromNode(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateFracturedCompoundCollision")]
  public static extern global::System.IntPtr NewtonCreateFracturedCompoundCollision(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, int jarg7, int jarg8, global::System.Runtime.InteropServices.HandleRef jarg9, global::System.Runtime.InteropServices.HandleRef jarg10, global::System.Runtime.InteropServices.HandleRef jarg11, global::System.Runtime.InteropServices.HandleRef jarg12);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundPlaneClip")]
  public static extern global::System.IntPtr NewtonFracturedCompoundPlaneClip(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundSetCallbacks")]
  public static extern void NewtonFracturedCompoundSetCallbacks(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundIsNodeFreeToDetach")]
  public static extern int NewtonFracturedCompoundIsNodeFreeToDetach(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundNeighborNodeList")]
  public static extern int NewtonFracturedCompoundNeighborNodeList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundGetMainMesh")]
  public static extern global::System.IntPtr NewtonFracturedCompoundGetMainMesh(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundGetFirstSubMesh")]
  public static extern global::System.IntPtr NewtonFracturedCompoundGetFirstSubMesh(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundGetNextSubMesh")]
  public static extern global::System.IntPtr NewtonFracturedCompoundGetNextSubMesh(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundCollisionGetVertexCount")]
  public static extern int NewtonFracturedCompoundCollisionGetVertexCount(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundCollisionGetVertexPositions")]
  public static extern global::System.IntPtr NewtonFracturedCompoundCollisionGetVertexPositions(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundCollisionGetVertexNormals")]
  public static extern global::System.IntPtr NewtonFracturedCompoundCollisionGetVertexNormals(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundCollisionGetVertexUVs")]
  public static extern global::System.IntPtr NewtonFracturedCompoundCollisionGetVertexUVs(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundMeshPartGetIndexStream")]
  public static extern int NewtonFracturedCompoundMeshPartGetIndexStream(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundMeshPartGetFirstSegment")]
  public static extern global::System.IntPtr NewtonFracturedCompoundMeshPartGetFirstSegment(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundMeshPartGetNextSegment")]
  public static extern global::System.IntPtr NewtonFracturedCompoundMeshPartGetNextSegment(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundMeshPartGetMaterial")]
  public static extern int NewtonFracturedCompoundMeshPartGetMaterial(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonFracturedCompoundMeshPartGetIndexCount")]
  public static extern int NewtonFracturedCompoundMeshPartGetIndexCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateSceneCollision")]
  public static extern global::System.IntPtr NewtonCreateSceneCollision(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionBeginAddRemove")]
  public static extern void NewtonSceneCollisionBeginAddRemove(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionAddSubCollision")]
  public static extern global::System.IntPtr NewtonSceneCollisionAddSubCollision(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionRemoveSubCollision")]
  public static extern void NewtonSceneCollisionRemoveSubCollision(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionRemoveSubCollisionByIndex")]
  public static extern void NewtonSceneCollisionRemoveSubCollisionByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionSetSubCollisionMatrix")]
  public static extern void NewtonSceneCollisionSetSubCollisionMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionEndAddRemove")]
  public static extern void NewtonSceneCollisionEndAddRemove(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionGetFirstNode")]
  public static extern global::System.IntPtr NewtonSceneCollisionGetFirstNode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionGetNextNode")]
  public static extern global::System.IntPtr NewtonSceneCollisionGetNextNode(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionGetNodeByIndex")]
  public static extern global::System.IntPtr NewtonSceneCollisionGetNodeByIndex(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionGetNodeIndex")]
  public static extern int NewtonSceneCollisionGetNodeIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSceneCollisionGetCollisionFromNode")]
  public static extern global::System.IntPtr NewtonSceneCollisionGetCollisionFromNode(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateUserMeshCollision")]
  public static extern global::System.IntPtr NewtonCreateUserMeshCollision(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, global::System.Runtime.InteropServices.HandleRef jarg9, global::System.Runtime.InteropServices.HandleRef jarg10, global::System.Runtime.InteropServices.HandleRef jarg11, int jarg12);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserMeshCollisionContinuousOverlapTest")]
  public static extern int NewtonUserMeshCollisionContinuousOverlapTest(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateCollisionFromSerialization")]
  public static extern global::System.IntPtr NewtonCreateCollisionFromSerialization(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionSerialize")]
  public static extern void NewtonCollisionSerialize(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetInfo")]
  public static extern void NewtonCollisionGetInfo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateHeightFieldCollision")]
  public static extern global::System.IntPtr NewtonCreateHeightFieldCollision(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, string jarg7, float jarg8, float jarg9, int jarg10);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldSetUserRayCastCallback")]
  public static extern void NewtonHeightFieldSetUserRayCastCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHeightFieldSetHorizontalDisplacement")]
  public static extern void NewtonHeightFieldSetHorizontalDisplacement(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateTreeCollision")]
  public static extern global::System.IntPtr NewtonCreateTreeCollision(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateTreeCollisionFromMesh")]
  public static extern global::System.IntPtr NewtonCreateTreeCollisionFromMesh(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonTreeCollisionSetUserRayCastCallback")]
  public static extern void NewtonTreeCollisionSetUserRayCastCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonTreeCollisionBeginBuild")]
  public static extern void NewtonTreeCollisionBeginBuild(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonTreeCollisionAddFace")]
  public static extern void NewtonTreeCollisionAddFace(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonTreeCollisionEndBuild")]
  public static extern void NewtonTreeCollisionEndBuild(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonTreeCollisionGetFaceAttribute")]
  public static extern int NewtonTreeCollisionGetFaceAttribute(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonTreeCollisionSetFaceAttribute")]
  public static extern void NewtonTreeCollisionSetFaceAttribute(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonTreeCollisionForEachFace")]
  public static extern void NewtonTreeCollisionForEachFace(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonTreeCollisionGetVertexListTriangleListInAABB")]
  public static extern int NewtonTreeCollisionGetVertexListTriangleListInAABB(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, int jarg8, global::System.Runtime.InteropServices.HandleRef jarg9);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonStaticCollisionSetDebugCallback")]
  public static extern void NewtonStaticCollisionSetDebugCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionCreateInstance")]
  public static extern global::System.IntPtr NewtonCollisionCreateInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetType")]
  public static extern int NewtonCollisionGetType(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionIsConvexShape")]
  public static extern int NewtonCollisionIsConvexShape(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionIsStaticShape")]
  public static extern int NewtonCollisionIsStaticShape(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionSetUserData")]
  public static extern void NewtonCollisionSetUserData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetUserData")]
  public static extern global::System.IntPtr NewtonCollisionGetUserData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionSetUserData1")]
  public static extern void NewtonCollisionSetUserData1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetUserData1")]
  public static extern global::System.IntPtr NewtonCollisionGetUserData1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionSetUserID")]
  public static extern void NewtonCollisionSetUserID(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetUserID")]
  public static extern uint NewtonCollisionGetUserID(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetSubCollisionHandle")]
  public static extern global::System.IntPtr NewtonCollisionGetSubCollisionHandle(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetParentInstance")]
  public static extern global::System.IntPtr NewtonCollisionGetParentInstance(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionSetMatrix")]
  public static extern void NewtonCollisionSetMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetMatrix")]
  public static extern void NewtonCollisionGetMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionSetScale")]
  public static extern void NewtonCollisionSetScale(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetScale")]
  public static extern void NewtonCollisionGetScale(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDestroyCollision")]
  public static extern void NewtonDestroyCollision(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionGetSkinThickness")]
  public static extern float NewtonCollisionGetSkinThickness(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionIntersectionTest")]
  public static extern int NewtonCollisionIntersectionTest(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, int jarg6);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionPointDistance")]
  public static extern int NewtonCollisionPointDistance(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, int jarg7);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionClosestPoint")]
  public static extern int NewtonCollisionClosestPoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, int jarg9);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionCollide")]
  public static extern int NewtonCollisionCollide(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, global::System.Runtime.InteropServices.HandleRef jarg9, global::System.Runtime.InteropServices.HandleRef jarg10, global::System.Runtime.InteropServices.HandleRef jarg11, int jarg12);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionCollideContinue")]
  public static extern int NewtonCollisionCollideContinue(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, global::System.Runtime.InteropServices.HandleRef jarg9, global::System.Runtime.InteropServices.HandleRef jarg10, global::System.Runtime.InteropServices.HandleRef jarg11, global::System.Runtime.InteropServices.HandleRef jarg12, global::System.Runtime.InteropServices.HandleRef jarg13, global::System.Runtime.InteropServices.HandleRef jarg14, global::System.Runtime.InteropServices.HandleRef jarg15, global::System.Runtime.InteropServices.HandleRef jarg16, global::System.Runtime.InteropServices.HandleRef jarg17, int jarg18);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionSupportVertex")]
  public static extern void NewtonCollisionSupportVertex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionRayCast")]
  public static extern float NewtonCollisionRayCast(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionCalculateAABB")]
  public static extern void NewtonCollisionCalculateAABB(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionForEachPolygonDo")]
  public static extern void NewtonCollisionForEachPolygonDo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionAggregateCreate")]
  public static extern global::System.IntPtr NewtonCollisionAggregateCreate(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionAggregateDestroy")]
  public static extern void NewtonCollisionAggregateDestroy(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionAggregateAddBody")]
  public static extern void NewtonCollisionAggregateAddBody(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionAggregateRemoveBody")]
  public static extern void NewtonCollisionAggregateRemoveBody(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionAggregateGetSelfCollision")]
  public static extern int NewtonCollisionAggregateGetSelfCollision(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCollisionAggregateSetSelfCollision")]
  public static extern void NewtonCollisionAggregateSetSelfCollision(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSetEulerAngle")]
  public static extern void NewtonSetEulerAngle(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonGetEulerAngle")]
  public static extern void NewtonGetEulerAngle(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCalculateSpringDamperAcceleration")]
  public static extern float NewtonCalculateSpringDamperAcceleration(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateDynamicBody")]
  public static extern global::System.IntPtr NewtonCreateDynamicBody(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateKinematicBody")]
  public static extern global::System.IntPtr NewtonCreateKinematicBody(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateDeformableBody")]
  public static extern global::System.IntPtr NewtonCreateDeformableBody(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDestroyBody")]
  public static extern void NewtonDestroyBody(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetSimulationState")]
  public static extern int NewtonBodyGetSimulationState(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetSimulationState")]
  public static extern void NewtonBodySetSimulationState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetType")]
  public static extern int NewtonBodyGetType(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetCollidable")]
  public static extern int NewtonBodyGetCollidable(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetCollidable")]
  public static extern void NewtonBodySetCollidable(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyAddForce")]
  public static extern void NewtonBodyAddForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyAddTorque")]
  public static extern void NewtonBodyAddTorque(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyCalculateInverseDynamicsForce")]
  public static extern void NewtonBodyCalculateInverseDynamicsForce(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetCentreOfMass")]
  public static extern void NewtonBodySetCentreOfMass(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetMassMatrix")]
  public static extern void NewtonBodySetMassMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetFullMassMatrix")]
  public static extern void NewtonBodySetFullMassMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetMassProperties")]
  public static extern void NewtonBodySetMassProperties(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetMatrix")]
  public static extern void NewtonBodySetMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetMatrixNoSleep")]
  public static extern void NewtonBodySetMatrixNoSleep(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetMatrixRecursive")]
  public static extern void NewtonBodySetMatrixRecursive(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetMaterialGroupID")]
  public static extern void NewtonBodySetMaterialGroupID(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetContinuousCollisionMode")]
  public static extern void NewtonBodySetContinuousCollisionMode(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetJointRecursiveCollision")]
  public static extern void NewtonBodySetJointRecursiveCollision(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetOmega")]
  public static extern void NewtonBodySetOmega(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetOmegaNoSleep")]
  public static extern void NewtonBodySetOmegaNoSleep(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetVelocity")]
  public static extern void NewtonBodySetVelocity(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetVelocityNoSleep")]
  public static extern void NewtonBodySetVelocityNoSleep(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetForce")]
  public static extern void NewtonBodySetForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetTorque")]
  public static extern void NewtonBodySetTorque(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetLinearDamping")]
  public static extern void NewtonBodySetLinearDamping(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetAngularDamping")]
  public static extern void NewtonBodySetAngularDamping(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetCollision")]
  public static extern void NewtonBodySetCollision(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetCollisionScale")]
  public static extern void NewtonBodySetCollisionScale(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetMaxRotationPerStep")]
  public static extern float NewtonBodyGetMaxRotationPerStep(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetMaxRotationPerStep")]
  public static extern void NewtonBodySetMaxRotationPerStep(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetSleepState")]
  public static extern int NewtonBodyGetSleepState(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetSleepState")]
  public static extern void NewtonBodySetSleepState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetAutoSleep")]
  public static extern int NewtonBodyGetAutoSleep(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetAutoSleep")]
  public static extern void NewtonBodySetAutoSleep(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetFreezeState")]
  public static extern int NewtonBodyGetFreezeState(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetFreezeState")]
  public static extern void NewtonBodySetFreezeState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetDestructorCallback")]
  public static extern void NewtonBodySetDestructorCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetDestructorCallback")]
  public static extern global::System.IntPtr NewtonBodyGetDestructorCallback(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetTransformCallback")]
  public static extern void NewtonBodySetTransformCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetTransformCallback")]
  public static extern global::System.IntPtr NewtonBodyGetTransformCallback(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetForceAndTorqueCallback")]
  public static extern void NewtonBodySetForceAndTorqueCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetForceAndTorqueCallback")]
  public static extern global::System.IntPtr NewtonBodyGetForceAndTorqueCallback(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetID")]
  public static extern int NewtonBodyGetID(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodySetUserData")]
  public static extern void NewtonBodySetUserData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetUserData")]
  public static extern global::System.IntPtr NewtonBodyGetUserData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetWorld")]
  public static extern global::System.IntPtr NewtonBodyGetWorld(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetCollision")]
  public static extern global::System.IntPtr NewtonBodyGetCollision(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetMaterialGroupID")]
  public static extern int NewtonBodyGetMaterialGroupID(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetContinuousCollisionMode")]
  public static extern int NewtonBodyGetContinuousCollisionMode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetJointRecursiveCollision")]
  public static extern int NewtonBodyGetJointRecursiveCollision(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetPosition")]
  public static extern void NewtonBodyGetPosition(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetMatrix")]
  public static extern void NewtonBodyGetMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetRotation")]
  public static extern void NewtonBodyGetRotation(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetMassMatrix")]
  public static extern void NewtonBodyGetMassMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetInvMass")]
  public static extern void NewtonBodyGetInvMass(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetInertiaMatrix")]
  public static extern void NewtonBodyGetInertiaMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetInvInertiaMatrix")]
  public static extern void NewtonBodyGetInvInertiaMatrix(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetOmega")]
  public static extern void NewtonBodyGetOmega(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetVelocity")]
  public static extern void NewtonBodyGetVelocity(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetForce")]
  public static extern void NewtonBodyGetForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetTorque")]
  public static extern void NewtonBodyGetTorque(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetForceAcc")]
  public static extern void NewtonBodyGetForceAcc(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetTorqueAcc")]
  public static extern void NewtonBodyGetTorqueAcc(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetCentreOfMass")]
  public static extern void NewtonBodyGetCentreOfMass(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetPointVelocity")]
  public static extern void NewtonBodyGetPointVelocity(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyAddImpulse")]
  public static extern void NewtonBodyAddImpulse(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyApplyImpulseArray")]
  public static extern void NewtonBodyApplyImpulseArray(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyApplyImpulsePair")]
  public static extern void NewtonBodyApplyImpulsePair(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyIntegrateVelocity")]
  public static extern void NewtonBodyIntegrateVelocity(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetLinearDamping")]
  public static extern float NewtonBodyGetLinearDamping(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetAngularDamping")]
  public static extern void NewtonBodyGetAngularDamping(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetAABB")]
  public static extern void NewtonBodyGetAABB(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetFirstJoint")]
  public static extern global::System.IntPtr NewtonBodyGetFirstJoint(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetNextJoint")]
  public static extern global::System.IntPtr NewtonBodyGetNextJoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetFirstContactJoint")]
  public static extern global::System.IntPtr NewtonBodyGetFirstContactJoint(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetNextContactJoint")]
  public static extern global::System.IntPtr NewtonBodyGetNextContactJoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBodyGetSkeleton")]
  public static extern global::System.IntPtr NewtonBodyGetSkeleton(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactJointGetFirstContact")]
  public static extern global::System.IntPtr NewtonContactJointGetFirstContact(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactJointGetNextContact")]
  public static extern global::System.IntPtr NewtonContactJointGetNextContact(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactJointGetContactCount")]
  public static extern int NewtonContactJointGetContactCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactJointRemoveContact")]
  public static extern void NewtonContactJointRemoveContact(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactJointGetClosestDistance")]
  public static extern float NewtonContactJointGetClosestDistance(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactGetMaterial")]
  public static extern global::System.IntPtr NewtonContactGetMaterial(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactGetCollision0")]
  public static extern global::System.IntPtr NewtonContactGetCollision0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactGetCollision1")]
  public static extern global::System.IntPtr NewtonContactGetCollision1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactGetCollisionID0")]
  public static extern global::System.IntPtr NewtonContactGetCollisionID0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonContactGetCollisionID1")]
  public static extern global::System.IntPtr NewtonContactGetCollisionID1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointGetUserData")]
  public static extern global::System.IntPtr NewtonJointGetUserData(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointSetUserData")]
  public static extern void NewtonJointSetUserData(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointGetBody0")]
  public static extern global::System.IntPtr NewtonJointGetBody0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointGetBody1")]
  public static extern global::System.IntPtr NewtonJointGetBody1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointGetInfo")]
  public static extern void NewtonJointGetInfo(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointGetCollisionState")]
  public static extern int NewtonJointGetCollisionState(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointSetCollisionState")]
  public static extern void NewtonJointSetCollisionState(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointGetStiffness")]
  public static extern float NewtonJointGetStiffness(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointSetStiffness")]
  public static extern void NewtonJointSetStiffness(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDestroyJoint")]
  public static extern void NewtonDestroyJoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointSetDestructor")]
  public static extern void NewtonJointSetDestructor(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonJointIsActive")]
  public static extern int NewtonJointIsActive(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateClothPatch")]
  public static extern global::System.IntPtr NewtonCreateClothPatch(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCreateDeformableMesh")]
  public static extern global::System.IntPtr NewtonCreateDeformableMesh(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshCreateClusters")]
  public static extern void NewtonDeformableMeshCreateClusters(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshSetDebugCallback")]
  public static extern void NewtonDeformableMeshSetDebugCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshGetParticleCount")]
  public static extern int NewtonDeformableMeshGetParticleCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshGetParticlePosition")]
  public static extern void NewtonDeformableMeshGetParticlePosition(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshBeginConfiguration")]
  public static extern void NewtonDeformableMeshBeginConfiguration(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshUnconstraintParticle")]
  public static extern void NewtonDeformableMeshUnconstraintParticle(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshConstraintParticle")]
  public static extern void NewtonDeformableMeshConstraintParticle(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshEndConfiguration")]
  public static extern void NewtonDeformableMeshEndConfiguration(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshSetSkinThickness")]
  public static extern void NewtonDeformableMeshSetSkinThickness(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshUpdateRenderNormals")]
  public static extern void NewtonDeformableMeshUpdateRenderNormals(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshGetVertexCount")]
  public static extern int NewtonDeformableMeshGetVertexCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshGetVertexStreams")]
  public static extern void NewtonDeformableMeshGetVertexStreams(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, int jarg6, global::System.Runtime.InteropServices.HandleRef jarg7);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshGetFirstSegment")]
  public static extern global::System.IntPtr NewtonDeformableMeshGetFirstSegment(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshGetNextSegment")]
  public static extern global::System.IntPtr NewtonDeformableMeshGetNextSegment(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshSegmentGetMaterialID")]
  public static extern int NewtonDeformableMeshSegmentGetMaterialID(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshSegmentGetIndexCount")]
  public static extern int NewtonDeformableMeshSegmentGetIndexCount(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonDeformableMeshSegmentGetIndexList")]
  public static extern global::System.IntPtr NewtonDeformableMeshSegmentGetIndexList(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConstraintCreateBall")]
  public static extern global::System.IntPtr NewtonConstraintCreateBall(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBallSetUserCallback")]
  public static extern void NewtonBallSetUserCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBallGetJointAngle")]
  public static extern void NewtonBallGetJointAngle(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBallGetJointOmega")]
  public static extern void NewtonBallGetJointOmega(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBallGetJointForce")]
  public static extern void NewtonBallGetJointForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonBallSetConeLimits")]
  public static extern void NewtonBallSetConeLimits(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConstraintCreateHinge")]
  public static extern global::System.IntPtr NewtonConstraintCreateHinge(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeSetUserCallback")]
  public static extern void NewtonHingeSetUserCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeGetJointAngle")]
  public static extern float NewtonHingeGetJointAngle(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeGetJointOmega")]
  public static extern float NewtonHingeGetJointOmega(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeGetJointForce")]
  public static extern void NewtonHingeGetJointForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonHingeCalculateStopAlpha")]
  public static extern float NewtonHingeCalculateStopAlpha(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConstraintCreateSlider")]
  public static extern global::System.IntPtr NewtonConstraintCreateSlider(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSliderSetUserCallback")]
  public static extern void NewtonSliderSetUserCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSliderGetJointPosit")]
  public static extern float NewtonSliderGetJointPosit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSliderGetJointVeloc")]
  public static extern float NewtonSliderGetJointVeloc(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSliderGetJointForce")]
  public static extern void NewtonSliderGetJointForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSliderCalculateStopAccel")]
  public static extern float NewtonSliderCalculateStopAccel(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConstraintCreateCorkscrew")]
  public static extern global::System.IntPtr NewtonConstraintCreateCorkscrew(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCorkscrewSetUserCallback")]
  public static extern void NewtonCorkscrewSetUserCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCorkscrewGetJointPosit")]
  public static extern float NewtonCorkscrewGetJointPosit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCorkscrewGetJointAngle")]
  public static extern float NewtonCorkscrewGetJointAngle(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCorkscrewGetJointVeloc")]
  public static extern float NewtonCorkscrewGetJointVeloc(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCorkscrewGetJointOmega")]
  public static extern float NewtonCorkscrewGetJointOmega(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCorkscrewGetJointForce")]
  public static extern void NewtonCorkscrewGetJointForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCorkscrewCalculateStopAlpha")]
  public static extern float NewtonCorkscrewCalculateStopAlpha(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonCorkscrewCalculateStopAccel")]
  public static extern float NewtonCorkscrewCalculateStopAccel(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConstraintCreateUniversal")]
  public static extern global::System.IntPtr NewtonConstraintCreateUniversal(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUniversalSetUserCallback")]
  public static extern void NewtonUniversalSetUserCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUniversalGetJointAngle0")]
  public static extern float NewtonUniversalGetJointAngle0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUniversalGetJointAngle1")]
  public static extern float NewtonUniversalGetJointAngle1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUniversalGetJointOmega0")]
  public static extern float NewtonUniversalGetJointOmega0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUniversalGetJointOmega1")]
  public static extern float NewtonUniversalGetJointOmega1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUniversalGetJointForce")]
  public static extern void NewtonUniversalGetJointForce(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUniversalCalculateStopAlpha0")]
  public static extern float NewtonUniversalCalculateStopAlpha0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUniversalCalculateStopAlpha1")]
  public static extern float NewtonUniversalCalculateStopAlpha1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConstraintCreateUpVector")]
  public static extern global::System.IntPtr NewtonConstraintCreateUpVector(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUpVectorGetPin")]
  public static extern void NewtonUpVectorGetPin(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUpVectorSetPin")]
  public static extern void NewtonUpVectorSetPin(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonConstraintCreateUserJoint")]
  public static extern global::System.IntPtr NewtonConstraintCreateUserJoint(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointSetFeedbackCollectorCallback")]
  public static extern void NewtonUserJointSetFeedbackCollectorCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointAddLinearRow")]
  public static extern void NewtonUserJointAddLinearRow(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointAddAngularRow")]
  public static extern void NewtonUserJointAddAngularRow(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointAddGeneralRow")]
  public static extern void NewtonUserJointAddGeneralRow(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointSetRowMinimumFriction")]
  public static extern void NewtonUserJointSetRowMinimumFriction(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointSetRowMaximumFriction")]
  public static extern void NewtonUserJointSetRowMaximumFriction(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserCalculateRowZeroAccelaration")]
  public static extern float NewtonUserCalculateRowZeroAccelaration(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointSetRowAcceleration")]
  public static extern void NewtonUserJointSetRowAcceleration(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointSetRowSpringDamperAcceleration")]
  public static extern void NewtonUserJointSetRowSpringDamperAcceleration(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointSetRowStiffness")]
  public static extern void NewtonUserJointSetRowStiffness(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJoinRowsCount")]
  public static extern int NewtonUserJoinRowsCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointGetGeneralRow")]
  public static extern void NewtonUserJointGetGeneralRow(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonUserJointGetRowForce")]
  public static extern float NewtonUserJointGetRowForce(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerCreate")]
  public static extern global::System.IntPtr NewtonSkeletonContainerCreate(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerDelete")]
  public static extern void NewtonSkeletonContainerDelete(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonGetSolverMode")]
  public static extern int NewtonSkeletonGetSolverMode(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonSetSolverMode")]
  public static extern void NewtonSkeletonSetSolverMode(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerAttachJointArray")]
  public static extern void NewtonSkeletonContainerAttachJointArray(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerAttachBone")]
  public static extern global::System.IntPtr NewtonSkeletonContainerAttachBone(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerFinalize")]
  public static extern void NewtonSkeletonContainerFinalize(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerGetRoot")]
  public static extern global::System.IntPtr NewtonSkeletonContainerGetRoot(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerGetParent")]
  public static extern global::System.IntPtr NewtonSkeletonContainerGetParent(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerFirstChild")]
  public static extern global::System.IntPtr NewtonSkeletonContainerFirstChild(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerNextSibling")]
  public static extern global::System.IntPtr NewtonSkeletonContainerNextSibling(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerGetBodyFromNode")]
  public static extern global::System.IntPtr NewtonSkeletonContainerGetBodyFromNode(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonSkeletonContainerGetParentJointFromNode")]
  public static extern global::System.IntPtr NewtonSkeletonContainerGetParentJointFromNode(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreate")]
  public static extern global::System.IntPtr NewtonMeshCreate(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateFromMesh")]
  public static extern global::System.IntPtr NewtonMeshCreateFromMesh(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateFromCollision")]
  public static extern global::System.IntPtr NewtonMeshCreateFromCollision(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateConvexHull")]
  public static extern global::System.IntPtr NewtonMeshCreateConvexHull(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateDelaunayTetrahedralization")]
  public static extern global::System.IntPtr NewtonMeshCreateDelaunayTetrahedralization(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateVoronoiConvexDecomposition")]
  public static extern global::System.IntPtr NewtonMeshCreateVoronoiConvexDecomposition(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateFromSerialization")]
  public static extern global::System.IntPtr NewtonMeshCreateFromSerialization(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshDestroy")]
  public static extern void NewtonMeshDestroy(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshSerialize")]
  public static extern void NewtonMeshSerialize(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshSaveOFF")]
  public static extern void NewtonMeshSaveOFF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshLoadOFF")]
  public static extern global::System.IntPtr NewtonMeshLoadOFF(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshApplyTransform")]
  public static extern void NewtonMeshApplyTransform(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCalculateOOBB")]
  public static extern void NewtonMeshCalculateOOBB(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCalculateVertexNormals")]
  public static extern void NewtonMeshCalculateVertexNormals(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshApplySphericalMapping")]
  public static extern void NewtonMeshApplySphericalMapping(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshApplyCylindricalMapping")]
  public static extern void NewtonMeshApplyCylindricalMapping(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshApplyBoxMapping")]
  public static extern void NewtonMeshApplyBoxMapping(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshApplyAngleBasedMapping")]
  public static extern void NewtonMeshApplyAngleBasedMapping(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshIsOpenMesh")]
  public static extern int NewtonMeshIsOpenMesh(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshFixTJoints")]
  public static extern void NewtonMeshFixTJoints(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshPolygonize")]
  public static extern void NewtonMeshPolygonize(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshTriangulate")]
  public static extern void NewtonMeshTriangulate(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshUnion")]
  public static extern global::System.IntPtr NewtonMeshUnion(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshDifference")]
  public static extern global::System.IntPtr NewtonMeshDifference(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshIntersection")]
  public static extern global::System.IntPtr NewtonMeshIntersection(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshClip")]
  public static extern void NewtonMeshClip(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshConvexMeshIntersection")]
  public static extern global::System.IntPtr NewtonMeshConvexMeshIntersection(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshSimplify")]
  public static extern global::System.IntPtr NewtonMeshSimplify(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshApproximateConvexDecomposition")]
  public static extern global::System.IntPtr NewtonMeshApproximateConvexDecomposition(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2, float jarg3, int jarg4, int jarg5, global::System.Runtime.InteropServices.HandleRef jarg6, global::System.Runtime.InteropServices.HandleRef jarg7);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonRemoveUnusedVertices")]
  public static extern void NewtonRemoveUnusedVertices(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshBeginFace")]
  public static extern void NewtonMeshBeginFace(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshAddFace")]
  public static extern void NewtonMeshAddFace(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshEndFace")]
  public static extern void NewtonMeshEndFace(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshBuildFromVertexListIndexList")]
  public static extern void NewtonMeshBuildFromVertexListIndexList(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, int jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, int jarg9, global::System.Runtime.InteropServices.HandleRef jarg10, global::System.Runtime.InteropServices.HandleRef jarg11, int jarg12, global::System.Runtime.InteropServices.HandleRef jarg13, global::System.Runtime.InteropServices.HandleRef jarg14, int jarg15, global::System.Runtime.InteropServices.HandleRef jarg16);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetVertexStreams")]
  public static extern void NewtonMeshGetVertexStreams(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, int jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, int jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, int jarg8, global::System.Runtime.InteropServices.HandleRef jarg9);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetIndirectVertexStreams")]
  public static extern void NewtonMeshGetIndirectVertexStreams(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4, global::System.Runtime.InteropServices.HandleRef jarg5, int jarg6, global::System.Runtime.InteropServices.HandleRef jarg7, global::System.Runtime.InteropServices.HandleRef jarg8, global::System.Runtime.InteropServices.HandleRef jarg9, int jarg10, global::System.Runtime.InteropServices.HandleRef jarg11, global::System.Runtime.InteropServices.HandleRef jarg12, global::System.Runtime.InteropServices.HandleRef jarg13, int jarg14, global::System.Runtime.InteropServices.HandleRef jarg15, global::System.Runtime.InteropServices.HandleRef jarg16, global::System.Runtime.InteropServices.HandleRef jarg17);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshBeginHandle")]
  public static extern global::System.IntPtr NewtonMeshBeginHandle(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshEndHandle")]
  public static extern void NewtonMeshEndHandle(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshFirstMaterial")]
  public static extern int NewtonMeshFirstMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshNextMaterial")]
  public static extern int NewtonMeshNextMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshMaterialGetMaterial")]
  public static extern int NewtonMeshMaterialGetMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshMaterialGetIndexCount")]
  public static extern int NewtonMeshMaterialGetIndexCount(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshMaterialGetIndexStream")]
  public static extern void NewtonMeshMaterialGetIndexStream(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshMaterialGetIndexStreamShort")]
  public static extern void NewtonMeshMaterialGetIndexStreamShort(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateFirstSingleSegment")]
  public static extern global::System.IntPtr NewtonMeshCreateFirstSingleSegment(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateNextSingleSegment")]
  public static extern global::System.IntPtr NewtonMeshCreateNextSingleSegment(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateFirstLayer")]
  public static extern global::System.IntPtr NewtonMeshCreateFirstLayer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCreateNextLayer")]
  public static extern global::System.IntPtr NewtonMeshCreateNextLayer(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetTotalFaceCount")]
  public static extern int NewtonMeshGetTotalFaceCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetTotalIndexCount")]
  public static extern int NewtonMeshGetTotalIndexCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFaces")]
  public static extern void NewtonMeshGetFaces(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetPointCount")]
  public static extern int NewtonMeshGetPointCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetPointStrideInByte")]
  public static extern int NewtonMeshGetPointStrideInByte(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetPointArray")]
  public static extern global::System.IntPtr NewtonMeshGetPointArray(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetNormalArray")]
  public static extern global::System.IntPtr NewtonMeshGetNormalArray(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetUV0Array")]
  public static extern global::System.IntPtr NewtonMeshGetUV0Array(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetUV1Array")]
  public static extern global::System.IntPtr NewtonMeshGetUV1Array(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetVertexCount")]
  public static extern int NewtonMeshGetVertexCount(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetVertexStrideInByte")]
  public static extern int NewtonMeshGetVertexStrideInByte(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetVertexArray")]
  public static extern global::System.IntPtr NewtonMeshGetVertexArray(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFirstVertex")]
  public static extern global::System.IntPtr NewtonMeshGetFirstVertex(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetNextVertex")]
  public static extern global::System.IntPtr NewtonMeshGetNextVertex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetVertexIndex")]
  public static extern int NewtonMeshGetVertexIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFirstPoint")]
  public static extern global::System.IntPtr NewtonMeshGetFirstPoint(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetNextPoint")]
  public static extern global::System.IntPtr NewtonMeshGetNextPoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetPointIndex")]
  public static extern int NewtonMeshGetPointIndex(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetVertexIndexFromPoint")]
  public static extern int NewtonMeshGetVertexIndexFromPoint(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFirstEdge")]
  public static extern global::System.IntPtr NewtonMeshGetFirstEdge(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetNextEdge")]
  public static extern global::System.IntPtr NewtonMeshGetNextEdge(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetEdgeIndices")]
  public static extern void NewtonMeshGetEdgeIndices(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFirstFace")]
  public static extern global::System.IntPtr NewtonMeshGetFirstFace(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetNextFace")]
  public static extern global::System.IntPtr NewtonMeshGetNextFace(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshIsFaceOpen")]
  public static extern int NewtonMeshIsFaceOpen(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFaceMaterial")]
  public static extern int NewtonMeshGetFaceMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFaceIndexCount")]
  public static extern int NewtonMeshGetFaceIndexCount(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFaceIndices")]
  public static extern void NewtonMeshGetFaceIndices(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshGetFacePointIndices")]
  public static extern void NewtonMeshGetFacePointIndices(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshCalculateFaceNormal")]
  public static extern void NewtonMeshCalculateFaceNormal(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("cpp", EntryPoint="CSharp_NewtonMeshSetFaceMaterial")]
  public static extern void NewtonMeshSetFaceMaterial(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);
}

public class cpp {
  public static int NewtonWorldGetVersion() {
    int ret = cppPINVOKE.NewtonWorldGetVersion();
    return ret;
  }

  public static int NewtonWorldFloatSize() {
    int ret = cppPINVOKE.NewtonWorldFloatSize();
    return ret;
  }

  public static int NewtonGetMemoryUsed() {
    int ret = cppPINVOKE.NewtonGetMemoryUsed();
    return ret;
  }

  public static void NewtonSetMemorySystem(SWIGTYPE_p_f_int__p_void malloc, SWIGTYPE_p_f_q_const__p_void_int__void free) {
    cppPINVOKE.NewtonSetMemorySystem(SWIGTYPE_p_f_int__p_void.getCPtr(malloc), SWIGTYPE_p_f_q_const__p_void_int__void.getCPtr(free));
  }

  public static SWIGTYPE_p_NewtonWorld NewtonCreate() {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreate();
    SWIGTYPE_p_NewtonWorld ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonWorld(cPtr, false);
    return ret;
  }

  public static void NewtonDestroy(SWIGTYPE_p_NewtonWorld newtonWorld) {
    cppPINVOKE.NewtonDestroy(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
  }

  public static void NewtonDestroyAllBodies(SWIGTYPE_p_NewtonWorld newtonWorld) {
    cppPINVOKE.NewtonDestroyAllBodies(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
  }

  public static SWIGTYPE_p_void NewtonAlloc(int sizeInBytes) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonAlloc(sizeInBytes);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonFree(SWIGTYPE_p_void ptr) {
    cppPINVOKE.NewtonFree(SWIGTYPE_p_void.getCPtr(ptr));
  }

  public static int NewtonEnumerateDevices(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonEnumerateDevices(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static int NewtonGetCurrentDevice(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonGetCurrentDevice(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static void NewtonSetCurrentDevice(SWIGTYPE_p_NewtonWorld newtonWorld, int deviceIndex) {
    cppPINVOKE.NewtonSetCurrentDevice(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), deviceIndex);
  }

  public static void NewtonGetDeviceString(SWIGTYPE_p_NewtonWorld newtonWorld, int deviceIndex, string vendorString, int maxSize) {
    cppPINVOKE.NewtonGetDeviceString(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), deviceIndex, vendorString, maxSize);
  }

  public static float NewtonGetContactMergeTolerance(SWIGTYPE_p_NewtonWorld newtonWorld) {
    float ret = cppPINVOKE.NewtonGetContactMergeTolerance(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static void NewtonSetContactMergeTolerance(SWIGTYPE_p_NewtonWorld newtonWorld, float tolerance) {
    cppPINVOKE.NewtonSetContactMergeTolerance(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), tolerance);
  }

  public static void NewtonInvalidateCache(SWIGTYPE_p_NewtonWorld newtonWorld) {
    cppPINVOKE.NewtonInvalidateCache(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
  }

  public static void NewtonSetSolverModel(SWIGTYPE_p_NewtonWorld newtonWorld, int model) {
    cppPINVOKE.NewtonSetSolverModel(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), model);
  }

  public static void NewtonSetSolverConvergenceQuality(SWIGTYPE_p_NewtonWorld newtonWorld, int lowOrHigh) {
    cppPINVOKE.NewtonSetSolverConvergenceQuality(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), lowOrHigh);
  }

  public static void NewtonSetMultiThreadSolverOnSingleIsland(SWIGTYPE_p_NewtonWorld newtonWorld, int mode) {
    cppPINVOKE.NewtonSetMultiThreadSolverOnSingleIsland(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), mode);
  }

  public static int NewtonGetMultiThreadSolverOnSingleIsland(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonGetMultiThreadSolverOnSingleIsland(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static int NewtonGetBroadphaseAlgorithm(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonGetBroadphaseAlgorithm(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static void NewtonSelectBroadphaseAlgorithm(SWIGTYPE_p_NewtonWorld newtonWorld, int algorithmType) {
    cppPINVOKE.NewtonSelectBroadphaseAlgorithm(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), algorithmType);
  }

  public static void NewtonUpdate(SWIGTYPE_p_NewtonWorld newtonWorld, float timestep) {
    cppPINVOKE.NewtonUpdate(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), timestep);
  }

  public static void NewtonUpdateAsync(SWIGTYPE_p_NewtonWorld newtonWorld, float timestep) {
    cppPINVOKE.NewtonUpdateAsync(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), timestep);
  }

  public static void NewtonWaitForUpdateToFinish(SWIGTYPE_p_NewtonWorld newtonWorld) {
    cppPINVOKE.NewtonWaitForUpdateToFinish(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
  }

  public static void NewtonSerializeToFile(SWIGTYPE_p_NewtonWorld newtonWorld, string filename, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void bodyCallback, SWIGTYPE_p_void bodyUserData) {
    cppPINVOKE.NewtonSerializeToFile(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), filename, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void.getCPtr(bodyCallback), SWIGTYPE_p_void.getCPtr(bodyUserData));
  }

  public static void NewtonDeserializeFromFile(SWIGTYPE_p_NewtonWorld newtonWorld, string filename, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void bodyCallback, SWIGTYPE_p_void bodyUserData) {
    cppPINVOKE.NewtonDeserializeFromFile(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), filename, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void.getCPtr(bodyCallback), SWIGTYPE_p_void.getCPtr(bodyUserData));
  }

  public static void NewtonSetJointSerializationCallbacks(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void serializeJoint, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void deserializeJoint) {
    cppPINVOKE.NewtonSetJointSerializationCallbacks(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void.getCPtr(serializeJoint), SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void.getCPtr(deserializeJoint));
  }

  public static void NewtonGetJointSerializationCallbacks(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void serializeJoint, SWIGTYPE_p_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void deserializeJoint) {
    cppPINVOKE.NewtonGetJointSerializationCallbacks(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void.getCPtr(serializeJoint), SWIGTYPE_p_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void.getCPtr(deserializeJoint));
  }

  public static void NewtonWorldCriticalSectionLock(SWIGTYPE_p_NewtonWorld newtonWorld, int threadIndex) {
    cppPINVOKE.NewtonWorldCriticalSectionLock(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), threadIndex);
  }

  public static void NewtonWorldCriticalSectionUnlock(SWIGTYPE_p_NewtonWorld newtonWorld) {
    cppPINVOKE.NewtonWorldCriticalSectionUnlock(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
  }

  public static void NewtonSetThreadsCount(SWIGTYPE_p_NewtonWorld newtonWorld, int threads) {
    cppPINVOKE.NewtonSetThreadsCount(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), threads);
  }

  public static int NewtonGetThreadsCount(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonGetThreadsCount(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static int NewtonGetMaxThreadsCount(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonGetMaxThreadsCount(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static void NewtonDispachThreadJob(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_f_q_const__p_NewtonWorld_q_const__p_void_int__void task, SWIGTYPE_p_void usedData) {
    cppPINVOKE.NewtonDispachThreadJob(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_f_q_const__p_NewtonWorld_q_const__p_void_int__void.getCPtr(task), SWIGTYPE_p_void.getCPtr(usedData));
  }

  public static void NewtonSyncThreadJobs(SWIGTYPE_p_NewtonWorld newtonWorld) {
    cppPINVOKE.NewtonSyncThreadJobs(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
  }

  public static int NewtonAtomicAdd(SWIGTYPE_p_int ptr, int value) {
    int ret = cppPINVOKE.NewtonAtomicAdd(SWIGTYPE_p_int.getCPtr(ptr), value);
    return ret;
  }

  public static int NewtonAtomicSwap(SWIGTYPE_p_int ptr, int value) {
    int ret = cppPINVOKE.NewtonAtomicSwap(SWIGTYPE_p_int.getCPtr(ptr), value);
    return ret;
  }

  public static void NewtonYield() {
    cppPINVOKE.NewtonYield();
  }

  public static void NewtonSetFrictionModel(SWIGTYPE_p_NewtonWorld newtonWorld, int model) {
    cppPINVOKE.NewtonSetFrictionModel(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), model);
  }

  public static void NewtonSetMinimumFrameRate(SWIGTYPE_p_NewtonWorld newtonWorld, float frameRate) {
    cppPINVOKE.NewtonSetMinimumFrameRate(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), frameRate);
  }

  public static void NewtonSetIslandUpdateEvent(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_p_q_const__void_int__int islandUpdate) {
    cppPINVOKE.NewtonSetIslandUpdateEvent(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_p_q_const__void_int__int.getCPtr(islandUpdate));
  }

  public static void NewtonWorldForEachJointDo(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_void__void callback, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonWorldForEachJointDo(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_void__void.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userData));
  }

  public static void NewtonWorldForEachBodyInAABBDo(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float p0, SWIGTYPE_p_float p1, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_void__int callback, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonWorldForEachBodyInAABBDo(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(p0), SWIGTYPE_p_float.getCPtr(p1), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_void__int.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userData));
  }

  public static void NewtonWorldSetUserData(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonWorldSetUserData(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_void.getCPtr(userData));
  }

  public static SWIGTYPE_p_void NewtonWorldGetUserData(SWIGTYPE_p_NewtonWorld newtonWorld) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetUserData(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonWorldGetListenerUserData(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_void listener) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetListenerUserData(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_void.getCPtr(listener));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void NewtonWorldListenerGetBodyDestroyCallback(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_void listener) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldListenerGetBodyDestroyCallback(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_void.getCPtr(listener));
    SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void(cPtr, false);
    return ret;
  }

  public static void NewtonWorldListenerSetBodyDestroyCallback(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_void listener, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void bodyDestroyCallback) {
    cppPINVOKE.NewtonWorldListenerSetBodyDestroyCallback(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_void.getCPtr(listener), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void.getCPtr(bodyDestroyCallback));
  }

  public static SWIGTYPE_p_void NewtonWorldGetPreListener(SWIGTYPE_p_NewtonWorld newtonWorld, string nameId) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetPreListener(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), nameId);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonWorldAddPreListener(SWIGTYPE_p_NewtonWorld newtonWorld, string nameId, SWIGTYPE_p_void listenerUserData, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_float__void update, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void__void destroy) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldAddPreListener(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), nameId, SWIGTYPE_p_void.getCPtr(listenerUserData), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_float__void.getCPtr(update), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void__void.getCPtr(destroy));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonWorldGetPostListener(SWIGTYPE_p_NewtonWorld newtonWorld, string nameId) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetPostListener(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), nameId);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonWorldAddPostListener(SWIGTYPE_p_NewtonWorld newtonWorld, string nameId, SWIGTYPE_p_void listenerUserData, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_float__void update, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void__void destroy) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldAddPostListener(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), nameId, SWIGTYPE_p_void.getCPtr(listenerUserData), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_float__void.getCPtr(update), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void__void.getCPtr(destroy));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonWorldSetDestructorCallback(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void destructor) {
    cppPINVOKE.NewtonWorldSetDestructorCallback(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void.getCPtr(destructor));
  }

  public static SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void NewtonWorldGetDestructorCallback(SWIGTYPE_p_NewtonWorld newtonWorld) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetDestructorCallback(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void(cPtr, false);
    return ret;
  }

  public static void NewtonWorldSetCollisionConstructorDestructorCallback(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_NewtonCollision_q_const__p_q_const__NewtonCollision__void constructor, SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_q_const__NewtonCollision__void destructor) {
    cppPINVOKE.NewtonWorldSetCollisionConstructorDestructorCallback(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_NewtonCollision_q_const__p_q_const__NewtonCollision__void.getCPtr(constructor), SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_q_const__NewtonCollision__void.getCPtr(destructor));
  }

  public static void NewtonWorldRayCast(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float p0, SWIGTYPE_p_float p1, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__float_q_const__p_q_const__float_long_long_q_const__p_void_float__float filter, SWIGTYPE_p_void userData, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int prefilter, int threadIndex) {
    cppPINVOKE.NewtonWorldRayCast(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(p0), SWIGTYPE_p_float.getCPtr(p1), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__float_q_const__p_q_const__float_long_long_q_const__p_void_float__float.getCPtr(filter), SWIGTYPE_p_void.getCPtr(userData), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int.getCPtr(prefilter), threadIndex);
  }

  public static int NewtonWorldConvexCast(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float matrix, SWIGTYPE_p_float target, SWIGTYPE_p_NewtonCollision shape, SWIGTYPE_p_float param, SWIGTYPE_p_void userData, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int prefilter, NewtonWorldConvexCastReturnInfo info, int maxContactsCount, int threadIndex) {
    int ret = cppPINVOKE.NewtonWorldConvexCast(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_float.getCPtr(target), SWIGTYPE_p_NewtonCollision.getCPtr(shape), SWIGTYPE_p_float.getCPtr(param), SWIGTYPE_p_void.getCPtr(userData), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int.getCPtr(prefilter), NewtonWorldConvexCastReturnInfo.getCPtr(info), maxContactsCount, threadIndex);
    return ret;
  }

  public static int NewtonWorldCollide(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float matrix, SWIGTYPE_p_NewtonCollision shape, SWIGTYPE_p_void userData, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int prefilter, NewtonWorldConvexCastReturnInfo info, int maxContactsCount, int threadIndex) {
    int ret = cppPINVOKE.NewtonWorldCollide(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_NewtonCollision.getCPtr(shape), SWIGTYPE_p_void.getCPtr(userData), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int.getCPtr(prefilter), NewtonWorldConvexCastReturnInfo.getCPtr(info), maxContactsCount, threadIndex);
    return ret;
  }

  public static int NewtonWorldGetBodyCount(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonWorldGetBodyCount(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static int NewtonWorldGetConstraintCount(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonWorldGetConstraintCount(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static SWIGTYPE_p_NewtonBody NewtonIslandGetBody(SWIGTYPE_p_void island, int bodyIndex) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonIslandGetBody(SWIGTYPE_p_void.getCPtr(island), bodyIndex);
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static void NewtonIslandGetBodyAABB(SWIGTYPE_p_void island, int bodyIndex, SWIGTYPE_p_float p0, SWIGTYPE_p_float p1) {
    cppPINVOKE.NewtonIslandGetBodyAABB(SWIGTYPE_p_void.getCPtr(island), bodyIndex, SWIGTYPE_p_float.getCPtr(p0), SWIGTYPE_p_float.getCPtr(p1));
  }

  public static int NewtonMaterialCreateGroupID(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonMaterialCreateGroupID(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static int NewtonMaterialGetDefaultGroupID(SWIGTYPE_p_NewtonWorld newtonWorld) {
    int ret = cppPINVOKE.NewtonMaterialGetDefaultGroupID(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    return ret;
  }

  public static void NewtonMaterialDestroyAllGroupID(SWIGTYPE_p_NewtonWorld newtonWorld) {
    cppPINVOKE.NewtonMaterialDestroyAllGroupID(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
  }

  public static SWIGTYPE_p_void NewtonMaterialGetUserData(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMaterialGetUserData(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonMaterialSetSurfaceThickness(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, float thickness) {
    cppPINVOKE.NewtonMaterialSetSurfaceThickness(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, thickness);
  }

  public static void NewtonMaterialSetCallbackUserData(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonMaterialSetCallbackUserData(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, SWIGTYPE_p_void.getCPtr(userData));
  }

  public static void NewtonMaterialSetContactGenerationCallback(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_NewtonUserContactPoint_int_int__int contactGeneration) {
    cppPINVOKE.NewtonMaterialSetContactGenerationCallback(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_NewtonUserContactPoint_int_int__int.getCPtr(contactGeneration));
  }

  public static void NewtonMaterialSetCompoundCollisionCallback(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_int__int compoundAabbOverlap) {
    cppPINVOKE.NewtonMaterialSetCompoundCollisionCallback(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_int__int.getCPtr(compoundAabbOverlap));
  }

  public static void NewtonMaterialSetCollisionCallback(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int__int aabbOverlap, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void process) {
    cppPINVOKE.NewtonMaterialSetCollisionCallback(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int__int.getCPtr(aabbOverlap), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void.getCPtr(process));
  }

  public static void NewtonMaterialSetDefaultSoftness(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, float value) {
    cppPINVOKE.NewtonMaterialSetDefaultSoftness(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, value);
  }

  public static void NewtonMaterialSetDefaultElasticity(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, float elasticCoef) {
    cppPINVOKE.NewtonMaterialSetDefaultElasticity(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, elasticCoef);
  }

  public static void NewtonMaterialSetDefaultCollidable(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, int state) {
    cppPINVOKE.NewtonMaterialSetDefaultCollidable(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, state);
  }

  public static void NewtonMaterialSetDefaultFriction(SWIGTYPE_p_NewtonWorld newtonWorld, int id0, int id1, float staticFriction, float kineticFriction) {
    cppPINVOKE.NewtonMaterialSetDefaultFriction(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), id0, id1, staticFriction, kineticFriction);
  }

  public static SWIGTYPE_p_NewtonMaterial NewtonWorldGetFirstMaterial(SWIGTYPE_p_NewtonWorld newtonWorld) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetFirstMaterial(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    SWIGTYPE_p_NewtonMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMaterial(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMaterial NewtonWorldGetNextMaterial(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonMaterial material) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetNextMaterial(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonMaterial.getCPtr(material));
    SWIGTYPE_p_NewtonMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMaterial(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonBody NewtonWorldGetFirstBody(SWIGTYPE_p_NewtonWorld newtonWorld) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetFirstBody(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonBody NewtonWorldGetNextBody(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonBody curBody) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonWorldGetNextBody(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonBody.getCPtr(curBody));
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonMaterialGetMaterialPairUserData(SWIGTYPE_p_NewtonMaterial material) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMaterialGetMaterialPairUserData(SWIGTYPE_p_NewtonMaterial.getCPtr(material));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static uint NewtonMaterialGetContactFaceAttribute(SWIGTYPE_p_NewtonMaterial material) {
    uint ret = cppPINVOKE.NewtonMaterialGetContactFaceAttribute(SWIGTYPE_p_NewtonMaterial.getCPtr(material));
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonMaterialGetBodyCollidingShape(SWIGTYPE_p_NewtonMaterial material, SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMaterialGetBodyCollidingShape(SWIGTYPE_p_NewtonMaterial.getCPtr(material), SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static float NewtonMaterialGetContactNormalSpeed(SWIGTYPE_p_NewtonMaterial material) {
    float ret = cppPINVOKE.NewtonMaterialGetContactNormalSpeed(SWIGTYPE_p_NewtonMaterial.getCPtr(material));
    return ret;
  }

  public static void NewtonMaterialGetContactForce(SWIGTYPE_p_NewtonMaterial material, SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float force) {
    cppPINVOKE.NewtonMaterialGetContactForce(SWIGTYPE_p_NewtonMaterial.getCPtr(material), SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(force));
  }

  public static void NewtonMaterialGetContactPositionAndNormal(SWIGTYPE_p_NewtonMaterial material, SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float posit, SWIGTYPE_p_float normal) {
    cppPINVOKE.NewtonMaterialGetContactPositionAndNormal(SWIGTYPE_p_NewtonMaterial.getCPtr(material), SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(posit), SWIGTYPE_p_float.getCPtr(normal));
  }

  public static void NewtonMaterialGetContactTangentDirections(SWIGTYPE_p_NewtonMaterial material, SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float dir0, SWIGTYPE_p_float dir1) {
    cppPINVOKE.NewtonMaterialGetContactTangentDirections(SWIGTYPE_p_NewtonMaterial.getCPtr(material), SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(dir0), SWIGTYPE_p_float.getCPtr(dir1));
  }

  public static float NewtonMaterialGetContactTangentSpeed(SWIGTYPE_p_NewtonMaterial material, int index) {
    float ret = cppPINVOKE.NewtonMaterialGetContactTangentSpeed(SWIGTYPE_p_NewtonMaterial.getCPtr(material), index);
    return ret;
  }

  public static float NewtonMaterialGetContactMaxNormalImpact(SWIGTYPE_p_NewtonMaterial material) {
    float ret = cppPINVOKE.NewtonMaterialGetContactMaxNormalImpact(SWIGTYPE_p_NewtonMaterial.getCPtr(material));
    return ret;
  }

  public static float NewtonMaterialGetContactMaxTangentImpact(SWIGTYPE_p_NewtonMaterial material, int index) {
    float ret = cppPINVOKE.NewtonMaterialGetContactMaxTangentImpact(SWIGTYPE_p_NewtonMaterial.getCPtr(material), index);
    return ret;
  }

  public static void NewtonMaterialSetContactSoftness(SWIGTYPE_p_NewtonMaterial material, float softness) {
    cppPINVOKE.NewtonMaterialSetContactSoftness(SWIGTYPE_p_NewtonMaterial.getCPtr(material), softness);
  }

  public static void NewtonMaterialSetContactElasticity(SWIGTYPE_p_NewtonMaterial material, float restitution) {
    cppPINVOKE.NewtonMaterialSetContactElasticity(SWIGTYPE_p_NewtonMaterial.getCPtr(material), restitution);
  }

  public static void NewtonMaterialSetContactFrictionState(SWIGTYPE_p_NewtonMaterial material, int state, int index) {
    cppPINVOKE.NewtonMaterialSetContactFrictionState(SWIGTYPE_p_NewtonMaterial.getCPtr(material), state, index);
  }

  public static void NewtonMaterialSetContactFrictionCoef(SWIGTYPE_p_NewtonMaterial material, float staticFrictionCoef, float kineticFrictionCoef, int index) {
    cppPINVOKE.NewtonMaterialSetContactFrictionCoef(SWIGTYPE_p_NewtonMaterial.getCPtr(material), staticFrictionCoef, kineticFrictionCoef, index);
  }

  public static void NewtonMaterialSetContactNormalAcceleration(SWIGTYPE_p_NewtonMaterial material, float accel) {
    cppPINVOKE.NewtonMaterialSetContactNormalAcceleration(SWIGTYPE_p_NewtonMaterial.getCPtr(material), accel);
  }

  public static void NewtonMaterialSetContactNormalDirection(SWIGTYPE_p_NewtonMaterial material, SWIGTYPE_p_float directionVector) {
    cppPINVOKE.NewtonMaterialSetContactNormalDirection(SWIGTYPE_p_NewtonMaterial.getCPtr(material), SWIGTYPE_p_float.getCPtr(directionVector));
  }

  public static void NewtonMaterialSetContactPosition(SWIGTYPE_p_NewtonMaterial material, SWIGTYPE_p_float position) {
    cppPINVOKE.NewtonMaterialSetContactPosition(SWIGTYPE_p_NewtonMaterial.getCPtr(material), SWIGTYPE_p_float.getCPtr(position));
  }

  public static void NewtonMaterialSetContactTangentFriction(SWIGTYPE_p_NewtonMaterial material, float friction, int index) {
    cppPINVOKE.NewtonMaterialSetContactTangentFriction(SWIGTYPE_p_NewtonMaterial.getCPtr(material), friction, index);
  }

  public static void NewtonMaterialSetContactTangentAcceleration(SWIGTYPE_p_NewtonMaterial material, float accel, int index) {
    cppPINVOKE.NewtonMaterialSetContactTangentAcceleration(SWIGTYPE_p_NewtonMaterial.getCPtr(material), accel, index);
  }

  public static void NewtonMaterialContactRotateTangentDirections(SWIGTYPE_p_NewtonMaterial material, SWIGTYPE_p_float directionVector) {
    cppPINVOKE.NewtonMaterialContactRotateTangentDirections(SWIGTYPE_p_NewtonMaterial.getCPtr(material), SWIGTYPE_p_float.getCPtr(directionVector));
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateNull(SWIGTYPE_p_NewtonWorld newtonWorld) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateNull(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateSphere(SWIGTYPE_p_NewtonWorld newtonWorld, float radius, int shapeID, SWIGTYPE_p_float offsetMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateSphere(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), radius, shapeID, SWIGTYPE_p_float.getCPtr(offsetMatrix));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateBox(SWIGTYPE_p_NewtonWorld newtonWorld, float dx, float dy, float dz, int shapeID, SWIGTYPE_p_float offsetMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateBox(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), dx, dy, dz, shapeID, SWIGTYPE_p_float.getCPtr(offsetMatrix));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateCone(SWIGTYPE_p_NewtonWorld newtonWorld, float radius, float height, int shapeID, SWIGTYPE_p_float offsetMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateCone(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), radius, height, shapeID, SWIGTYPE_p_float.getCPtr(offsetMatrix));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateCapsule(SWIGTYPE_p_NewtonWorld newtonWorld, float radius0, float radius1, float height, int shapeID, SWIGTYPE_p_float offsetMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateCapsule(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), radius0, radius1, height, shapeID, SWIGTYPE_p_float.getCPtr(offsetMatrix));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateCylinder(SWIGTYPE_p_NewtonWorld newtonWorld, float radio0, float radio1, float height, int shapeID, SWIGTYPE_p_float offsetMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateCylinder(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), radio0, radio1, height, shapeID, SWIGTYPE_p_float.getCPtr(offsetMatrix));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateChamferCylinder(SWIGTYPE_p_NewtonWorld newtonWorld, float radius, float height, int shapeID, SWIGTYPE_p_float offsetMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateChamferCylinder(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), radius, height, shapeID, SWIGTYPE_p_float.getCPtr(offsetMatrix));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateConvexHull(SWIGTYPE_p_NewtonWorld newtonWorld, int count, SWIGTYPE_p_float vertexCloud, int strideInBytes, float tolerance, int shapeID, SWIGTYPE_p_float offsetMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateConvexHull(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), count, SWIGTYPE_p_float.getCPtr(vertexCloud), strideInBytes, tolerance, shapeID, SWIGTYPE_p_float.getCPtr(offsetMatrix));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateConvexHullFromMesh(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonMesh mesh, float tolerance, int shapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateConvexHullFromMesh(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonMesh.getCPtr(mesh), tolerance, shapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static int NewtonCollisionGetMode(SWIGTYPE_p_NewtonCollision convexCollision) {
    int ret = cppPINVOKE.NewtonCollisionGetMode(SWIGTYPE_p_NewtonCollision.getCPtr(convexCollision));
    return ret;
  }

  public static void NewtonCollisionSetMode(SWIGTYPE_p_NewtonCollision convexCollision, int mode) {
    cppPINVOKE.NewtonCollisionSetMode(SWIGTYPE_p_NewtonCollision.getCPtr(convexCollision), mode);
  }

  public static int NewtonConvexHullGetFaceIndices(SWIGTYPE_p_NewtonCollision convexHullCollision, int face, SWIGTYPE_p_int faceIndices) {
    int ret = cppPINVOKE.NewtonConvexHullGetFaceIndices(SWIGTYPE_p_NewtonCollision.getCPtr(convexHullCollision), face, SWIGTYPE_p_int.getCPtr(faceIndices));
    return ret;
  }

  public static int NewtonConvexHullGetVertexData(SWIGTYPE_p_NewtonCollision convexHullCollision, SWIGTYPE_p_p_float vertexData, SWIGTYPE_p_int strideInBytes) {
    int ret = cppPINVOKE.NewtonConvexHullGetVertexData(SWIGTYPE_p_NewtonCollision.getCPtr(convexHullCollision), SWIGTYPE_p_p_float.getCPtr(vertexData), SWIGTYPE_p_int.getCPtr(strideInBytes));
    return ret;
  }

  public static float NewtonConvexCollisionCalculateVolume(SWIGTYPE_p_NewtonCollision convexCollision) {
    float ret = cppPINVOKE.NewtonConvexCollisionCalculateVolume(SWIGTYPE_p_NewtonCollision.getCPtr(convexCollision));
    return ret;
  }

  public static void NewtonConvexCollisionCalculateInertialMatrix(SWIGTYPE_p_NewtonCollision convexCollision, SWIGTYPE_p_float inertia, SWIGTYPE_p_float origin) {
    cppPINVOKE.NewtonConvexCollisionCalculateInertialMatrix(SWIGTYPE_p_NewtonCollision.getCPtr(convexCollision), SWIGTYPE_p_float.getCPtr(inertia), SWIGTYPE_p_float.getCPtr(origin));
  }

  public static void NewtonConvexCollisionCalculateBuoyancyAcceleration(SWIGTYPE_p_NewtonCollision convexCollision, SWIGTYPE_p_float matrix, SWIGTYPE_p_float shapeOrigin, SWIGTYPE_p_float gravityVector, SWIGTYPE_p_float fluidPlane, float fluidDensity, float fluidViscosity, SWIGTYPE_p_float accel, SWIGTYPE_p_float alpha) {
    cppPINVOKE.NewtonConvexCollisionCalculateBuoyancyAcceleration(SWIGTYPE_p_NewtonCollision.getCPtr(convexCollision), SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_float.getCPtr(shapeOrigin), SWIGTYPE_p_float.getCPtr(gravityVector), SWIGTYPE_p_float.getCPtr(fluidPlane), fluidDensity, fluidViscosity, SWIGTYPE_p_float.getCPtr(accel), SWIGTYPE_p_float.getCPtr(alpha));
  }

  public static SWIGTYPE_p_void NewtonCollisionDataPointer(SWIGTYPE_p_NewtonCollision convexCollision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionDataPointer(SWIGTYPE_p_NewtonCollision.getCPtr(convexCollision));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateCompoundCollision(SWIGTYPE_p_NewtonWorld newtonWorld, int shapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateCompoundCollision(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), shapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateCompoundCollisionFromMesh(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonMesh mesh, float hullTolerance, int shapeID, int subShapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateCompoundCollisionFromMesh(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonMesh.getCPtr(mesh), hullTolerance, shapeID, subShapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static void NewtonCompoundCollisionBeginAddRemove(SWIGTYPE_p_NewtonCollision compoundCollision) {
    cppPINVOKE.NewtonCompoundCollisionBeginAddRemove(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision));
  }

  public static SWIGTYPE_p_void NewtonCompoundCollisionAddSubCollision(SWIGTYPE_p_NewtonCollision compoundCollision, SWIGTYPE_p_NewtonCollision convexCollision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCompoundCollisionAddSubCollision(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), SWIGTYPE_p_NewtonCollision.getCPtr(convexCollision));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonCompoundCollisionRemoveSubCollision(SWIGTYPE_p_NewtonCollision compoundCollision, SWIGTYPE_p_void collisionNode) {
    cppPINVOKE.NewtonCompoundCollisionRemoveSubCollision(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), SWIGTYPE_p_void.getCPtr(collisionNode));
  }

  public static void NewtonCompoundCollisionRemoveSubCollisionByIndex(SWIGTYPE_p_NewtonCollision compoundCollision, int nodeIndex) {
    cppPINVOKE.NewtonCompoundCollisionRemoveSubCollisionByIndex(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), nodeIndex);
  }

  public static void NewtonCompoundCollisionSetSubCollisionMatrix(SWIGTYPE_p_NewtonCollision compoundCollision, SWIGTYPE_p_void collisionNode, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonCompoundCollisionSetSubCollisionMatrix(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), SWIGTYPE_p_void.getCPtr(collisionNode), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonCompoundCollisionEndAddRemove(SWIGTYPE_p_NewtonCollision compoundCollision) {
    cppPINVOKE.NewtonCompoundCollisionEndAddRemove(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision));
  }

  public static SWIGTYPE_p_void NewtonCompoundCollisionGetFirstNode(SWIGTYPE_p_NewtonCollision compoundCollision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCompoundCollisionGetFirstNode(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonCompoundCollisionGetNextNode(SWIGTYPE_p_NewtonCollision compoundCollision, SWIGTYPE_p_void collisionNode) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCompoundCollisionGetNextNode(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), SWIGTYPE_p_void.getCPtr(collisionNode));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonCompoundCollisionGetNodeByIndex(SWIGTYPE_p_NewtonCollision compoundCollision, int index) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCompoundCollisionGetNodeByIndex(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), index);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static int NewtonCompoundCollisionGetNodeIndex(SWIGTYPE_p_NewtonCollision compoundCollision, SWIGTYPE_p_void collisionNode) {
    int ret = cppPINVOKE.NewtonCompoundCollisionGetNodeIndex(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), SWIGTYPE_p_void.getCPtr(collisionNode));
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCompoundCollisionGetCollisionFromNode(SWIGTYPE_p_NewtonCollision compoundCollision, SWIGTYPE_p_void collisionNode) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCompoundCollisionGetCollisionFromNode(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), SWIGTYPE_p_void.getCPtr(collisionNode));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateFracturedCompoundCollision(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonMesh solidMesh, int shapeID, int fracturePhysicsMaterialID, int pointcloudCount, SWIGTYPE_p_float vertexCloud, int strideInBytes, int materialID, SWIGTYPE_p_float textureMatrix, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void regenerateMainMeshCallback, SWIGTYPE_p_f_q_const__p_NewtonBody__void emitFracturedCompound, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void emitFracfuredChunk) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateFracturedCompoundCollision(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonMesh.getCPtr(solidMesh), shapeID, fracturePhysicsMaterialID, pointcloudCount, SWIGTYPE_p_float.getCPtr(vertexCloud), strideInBytes, materialID, SWIGTYPE_p_float.getCPtr(textureMatrix), SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void.getCPtr(regenerateMainMeshCallback), SWIGTYPE_p_f_q_const__p_NewtonBody__void.getCPtr(emitFracturedCompound), SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void.getCPtr(emitFracfuredChunk));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonFracturedCompoundPlaneClip(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_float plane) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundPlaneClip(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_float.getCPtr(plane));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static void NewtonFracturedCompoundSetCallbacks(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void regenerateMainMeshCallback, SWIGTYPE_p_f_q_const__p_NewtonBody__void emitFracturedCompound, SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void emitFracfuredChunk) {
    cppPINVOKE.NewtonFracturedCompoundSetCallbacks(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void.getCPtr(regenerateMainMeshCallback), SWIGTYPE_p_f_q_const__p_NewtonBody__void.getCPtr(emitFracturedCompound), SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void.getCPtr(emitFracfuredChunk));
  }

  public static int NewtonFracturedCompoundIsNodeFreeToDetach(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_void collisionNode) {
    int ret = cppPINVOKE.NewtonFracturedCompoundIsNodeFreeToDetach(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_void.getCPtr(collisionNode));
    return ret;
  }

  public static int NewtonFracturedCompoundNeighborNodeList(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_void collisionNode, SWIGTYPE_p_p_void list, int maxCount) {
    int ret = cppPINVOKE.NewtonFracturedCompoundNeighborNodeList(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_void.getCPtr(collisionNode), SWIGTYPE_p_p_void.getCPtr(list), maxCount);
    return ret;
  }

  public static SWIGTYPE_p_NewtonFracturedCompoundMeshPart NewtonFracturedCompoundGetMainMesh(SWIGTYPE_p_NewtonCollision fracturedCompound) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundGetMainMesh(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound));
    SWIGTYPE_p_NewtonFracturedCompoundMeshPart ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonFracturedCompoundMeshPart(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonFracturedCompoundMeshPart NewtonFracturedCompoundGetFirstSubMesh(SWIGTYPE_p_NewtonCollision fracturedCompound) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundGetFirstSubMesh(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound));
    SWIGTYPE_p_NewtonFracturedCompoundMeshPart ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonFracturedCompoundMeshPart(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonFracturedCompoundMeshPart NewtonFracturedCompoundGetNextSubMesh(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_NewtonFracturedCompoundMeshPart subMesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundGetNextSubMesh(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_NewtonFracturedCompoundMeshPart.getCPtr(subMesh));
    SWIGTYPE_p_NewtonFracturedCompoundMeshPart ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonFracturedCompoundMeshPart(cPtr, false);
    return ret;
  }

  public static int NewtonFracturedCompoundCollisionGetVertexCount(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_NewtonFracturedCompoundMeshPart meshOwner) {
    int ret = cppPINVOKE.NewtonFracturedCompoundCollisionGetVertexCount(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_NewtonFracturedCompoundMeshPart.getCPtr(meshOwner));
    return ret;
  }

  public static SWIGTYPE_p_float NewtonFracturedCompoundCollisionGetVertexPositions(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_NewtonFracturedCompoundMeshPart meshOwner) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundCollisionGetVertexPositions(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_NewtonFracturedCompoundMeshPart.getCPtr(meshOwner));
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_float NewtonFracturedCompoundCollisionGetVertexNormals(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_NewtonFracturedCompoundMeshPart meshOwner) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundCollisionGetVertexNormals(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_NewtonFracturedCompoundMeshPart.getCPtr(meshOwner));
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_float NewtonFracturedCompoundCollisionGetVertexUVs(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_NewtonFracturedCompoundMeshPart meshOwner) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundCollisionGetVertexUVs(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_NewtonFracturedCompoundMeshPart.getCPtr(meshOwner));
    SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public static int NewtonFracturedCompoundMeshPartGetIndexStream(SWIGTYPE_p_NewtonCollision fracturedCompound, SWIGTYPE_p_NewtonFracturedCompoundMeshPart meshOwner, SWIGTYPE_p_void segment, SWIGTYPE_p_int index) {
    int ret = cppPINVOKE.NewtonFracturedCompoundMeshPartGetIndexStream(SWIGTYPE_p_NewtonCollision.getCPtr(fracturedCompound), SWIGTYPE_p_NewtonFracturedCompoundMeshPart.getCPtr(meshOwner), SWIGTYPE_p_void.getCPtr(segment), SWIGTYPE_p_int.getCPtr(index));
    return ret;
  }

  public static SWIGTYPE_p_void NewtonFracturedCompoundMeshPartGetFirstSegment(SWIGTYPE_p_NewtonFracturedCompoundMeshPart fractureCompoundMeshPart) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundMeshPartGetFirstSegment(SWIGTYPE_p_NewtonFracturedCompoundMeshPart.getCPtr(fractureCompoundMeshPart));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonFracturedCompoundMeshPartGetNextSegment(SWIGTYPE_p_void fractureCompoundMeshSegment) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonFracturedCompoundMeshPartGetNextSegment(SWIGTYPE_p_void.getCPtr(fractureCompoundMeshSegment));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static int NewtonFracturedCompoundMeshPartGetMaterial(SWIGTYPE_p_void fractureCompoundMeshSegment) {
    int ret = cppPINVOKE.NewtonFracturedCompoundMeshPartGetMaterial(SWIGTYPE_p_void.getCPtr(fractureCompoundMeshSegment));
    return ret;
  }

  public static int NewtonFracturedCompoundMeshPartGetIndexCount(SWIGTYPE_p_void fractureCompoundMeshSegment) {
    int ret = cppPINVOKE.NewtonFracturedCompoundMeshPartGetIndexCount(SWIGTYPE_p_void.getCPtr(fractureCompoundMeshSegment));
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateSceneCollision(SWIGTYPE_p_NewtonWorld newtonWorld, int shapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateSceneCollision(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), shapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static void NewtonSceneCollisionBeginAddRemove(SWIGTYPE_p_NewtonCollision sceneCollision) {
    cppPINVOKE.NewtonSceneCollisionBeginAddRemove(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision));
  }

  public static SWIGTYPE_p_void NewtonSceneCollisionAddSubCollision(SWIGTYPE_p_NewtonCollision sceneCollision, SWIGTYPE_p_NewtonCollision collision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSceneCollisionAddSubCollision(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision), SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonSceneCollisionRemoveSubCollision(SWIGTYPE_p_NewtonCollision compoundCollision, SWIGTYPE_p_void collisionNode) {
    cppPINVOKE.NewtonSceneCollisionRemoveSubCollision(SWIGTYPE_p_NewtonCollision.getCPtr(compoundCollision), SWIGTYPE_p_void.getCPtr(collisionNode));
  }

  public static void NewtonSceneCollisionRemoveSubCollisionByIndex(SWIGTYPE_p_NewtonCollision sceneCollision, int nodeIndex) {
    cppPINVOKE.NewtonSceneCollisionRemoveSubCollisionByIndex(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision), nodeIndex);
  }

  public static void NewtonSceneCollisionSetSubCollisionMatrix(SWIGTYPE_p_NewtonCollision sceneCollision, SWIGTYPE_p_void collisionNode, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonSceneCollisionSetSubCollisionMatrix(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision), SWIGTYPE_p_void.getCPtr(collisionNode), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonSceneCollisionEndAddRemove(SWIGTYPE_p_NewtonCollision sceneCollision) {
    cppPINVOKE.NewtonSceneCollisionEndAddRemove(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision));
  }

  public static SWIGTYPE_p_void NewtonSceneCollisionGetFirstNode(SWIGTYPE_p_NewtonCollision sceneCollision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSceneCollisionGetFirstNode(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonSceneCollisionGetNextNode(SWIGTYPE_p_NewtonCollision sceneCollision, SWIGTYPE_p_void collisionNode) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSceneCollisionGetNextNode(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision), SWIGTYPE_p_void.getCPtr(collisionNode));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonSceneCollisionGetNodeByIndex(SWIGTYPE_p_NewtonCollision sceneCollision, int index) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSceneCollisionGetNodeByIndex(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision), index);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static int NewtonSceneCollisionGetNodeIndex(SWIGTYPE_p_NewtonCollision sceneCollision, SWIGTYPE_p_void collisionNode) {
    int ret = cppPINVOKE.NewtonSceneCollisionGetNodeIndex(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision), SWIGTYPE_p_void.getCPtr(collisionNode));
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonSceneCollisionGetCollisionFromNode(SWIGTYPE_p_NewtonCollision sceneCollision, SWIGTYPE_p_void collisionNode) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSceneCollisionGetCollisionFromNode(SWIGTYPE_p_NewtonCollision.getCPtr(sceneCollision), SWIGTYPE_p_void.getCPtr(collisionNode));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateUserMeshCollision(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float minBox, SWIGTYPE_p_float maxBox, SWIGTYPE_p_void userData, SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionCollideDesc_q_const__p_q_const__void__void collideCallback, SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionRayHitDesc__float rayHitCallback, SWIGTYPE_p_f_q_const__p_void__void destroyCallback, SWIGTYPE_p_f_q_const__p_void_q_const__p_NewtonCollisionInfoRecord__void getInfoCallback, SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float__int getLocalAABBCallback, SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float_q_const__p_p_q_const__float_q_const__p_int_q_const__p_int_q_const__p_q_const__int_int_q_const__p_q_const__int__int facesInAABBCallback, SWIGTYPE_p_f_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void serializeCallback, int shapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateUserMeshCollision(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(minBox), SWIGTYPE_p_float.getCPtr(maxBox), SWIGTYPE_p_void.getCPtr(userData), SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionCollideDesc_q_const__p_q_const__void__void.getCPtr(collideCallback), SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionRayHitDesc__float.getCPtr(rayHitCallback), SWIGTYPE_p_f_q_const__p_void__void.getCPtr(destroyCallback), SWIGTYPE_p_f_q_const__p_void_q_const__p_NewtonCollisionInfoRecord__void.getCPtr(getInfoCallback), SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float__int.getCPtr(getLocalAABBCallback), SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float_q_const__p_p_q_const__float_q_const__p_int_q_const__p_int_q_const__p_q_const__int_int_q_const__p_q_const__int__int.getCPtr(facesInAABBCallback), SWIGTYPE_p_f_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void.getCPtr(serializeCallback), shapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static int NewtonUserMeshCollisionContinuousOverlapTest(NewtonUserMeshCollisionCollideDesc collideDescData, SWIGTYPE_p_void continueCollisionHandle, SWIGTYPE_p_float minAabb, SWIGTYPE_p_float maxAabb) {
    int ret = cppPINVOKE.NewtonUserMeshCollisionContinuousOverlapTest(NewtonUserMeshCollisionCollideDesc.getCPtr(collideDescData), SWIGTYPE_p_void.getCPtr(continueCollisionHandle), SWIGTYPE_p_float.getCPtr(minAabb), SWIGTYPE_p_float.getCPtr(maxAabb));
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateCollisionFromSerialization(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_f_q_const__p_void_q_const__p_void_int__void deserializeFunction, SWIGTYPE_p_void serializeHandle) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateCollisionFromSerialization(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_f_q_const__p_void_q_const__p_void_int__void.getCPtr(deserializeFunction), SWIGTYPE_p_void.getCPtr(serializeHandle));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static void NewtonCollisionSerialize(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__void_int__void serializeFunction, SWIGTYPE_p_void serializeHandle) {
    cppPINVOKE.NewtonCollisionSerialize(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__void_int__void.getCPtr(serializeFunction), SWIGTYPE_p_void.getCPtr(serializeHandle));
  }

  public static void NewtonCollisionGetInfo(SWIGTYPE_p_NewtonCollision collision, NewtonCollisionInfoRecord collisionInfo) {
    cppPINVOKE.NewtonCollisionGetInfo(SWIGTYPE_p_NewtonCollision.getCPtr(collision), NewtonCollisionInfoRecord.getCPtr(collisionInfo));
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateHeightFieldCollision(SWIGTYPE_p_NewtonWorld newtonWorld, int width, int height, int gridsDiagonals, int elevationdatType, SWIGTYPE_p_void elevationMap, string attributeMap, float verticalScale, float horizontalScale, int shapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateHeightFieldCollision(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), width, height, gridsDiagonals, elevationdatType, SWIGTYPE_p_void.getCPtr(elevationMap), attributeMap, verticalScale, horizontalScale, shapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static void NewtonHeightFieldSetUserRayCastCallback(SWIGTYPE_p_NewtonCollision heightfieldCollision, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_int_int_q_const__p_float_int_q_const__p_void__float rayHitCallback) {
    cppPINVOKE.NewtonHeightFieldSetUserRayCastCallback(SWIGTYPE_p_NewtonCollision.getCPtr(heightfieldCollision), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_int_int_q_const__p_float_int_q_const__p_void__float.getCPtr(rayHitCallback));
  }

  public static void NewtonHeightFieldSetHorizontalDisplacement(SWIGTYPE_p_NewtonCollision heightfieldCollision, SWIGTYPE_p_unsigned_short horizontalMap, float scale) {
    cppPINVOKE.NewtonHeightFieldSetHorizontalDisplacement(SWIGTYPE_p_NewtonCollision.getCPtr(heightfieldCollision), SWIGTYPE_p_unsigned_short.getCPtr(horizontalMap), scale);
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateTreeCollision(SWIGTYPE_p_NewtonWorld newtonWorld, int shapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateTreeCollision(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), shapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateTreeCollisionFromMesh(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonMesh mesh, int shapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateTreeCollisionFromMesh(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonMesh.getCPtr(mesh), shapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static void NewtonTreeCollisionSetUserRayCastCallback(SWIGTYPE_p_NewtonCollision treeCollision, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_q_const__p_float_int_q_const__p_void__float rayHitCallback) {
    cppPINVOKE.NewtonTreeCollisionSetUserRayCastCallback(SWIGTYPE_p_NewtonCollision.getCPtr(treeCollision), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_q_const__p_float_int_q_const__p_void__float.getCPtr(rayHitCallback));
  }

  public static void NewtonTreeCollisionBeginBuild(SWIGTYPE_p_NewtonCollision treeCollision) {
    cppPINVOKE.NewtonTreeCollisionBeginBuild(SWIGTYPE_p_NewtonCollision.getCPtr(treeCollision));
  }

  public static void NewtonTreeCollisionAddFace(SWIGTYPE_p_NewtonCollision treeCollision, int vertexCount, SWIGTYPE_p_float vertexPtr, int strideInBytes, int faceAttribute) {
    cppPINVOKE.NewtonTreeCollisionAddFace(SWIGTYPE_p_NewtonCollision.getCPtr(treeCollision), vertexCount, SWIGTYPE_p_float.getCPtr(vertexPtr), strideInBytes, faceAttribute);
  }

  public static void NewtonTreeCollisionEndBuild(SWIGTYPE_p_NewtonCollision treeCollision, int optimize) {
    cppPINVOKE.NewtonTreeCollisionEndBuild(SWIGTYPE_p_NewtonCollision.getCPtr(treeCollision), optimize);
  }

  public static int NewtonTreeCollisionGetFaceAttribute(SWIGTYPE_p_NewtonCollision treeCollision, SWIGTYPE_p_int faceIndexArray, int indexCount) {
    int ret = cppPINVOKE.NewtonTreeCollisionGetFaceAttribute(SWIGTYPE_p_NewtonCollision.getCPtr(treeCollision), SWIGTYPE_p_int.getCPtr(faceIndexArray), indexCount);
    return ret;
  }

  public static void NewtonTreeCollisionSetFaceAttribute(SWIGTYPE_p_NewtonCollision treeCollision, SWIGTYPE_p_int faceIndexArray, int indexCount, int attribute) {
    cppPINVOKE.NewtonTreeCollisionSetFaceAttribute(SWIGTYPE_p_NewtonCollision.getCPtr(treeCollision), SWIGTYPE_p_int.getCPtr(faceIndexArray), indexCount, attribute);
  }

  public static void NewtonTreeCollisionForEachFace(SWIGTYPE_p_NewtonCollision treeCollision, SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_int_q_const__p_q_const__int_int__int forEachFaceCallback, SWIGTYPE_p_void context) {
    cppPINVOKE.NewtonTreeCollisionForEachFace(SWIGTYPE_p_NewtonCollision.getCPtr(treeCollision), SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_int_q_const__p_q_const__int_int__int.getCPtr(forEachFaceCallback), SWIGTYPE_p_void.getCPtr(context));
  }

  public static int NewtonTreeCollisionGetVertexListTriangleListInAABB(SWIGTYPE_p_NewtonCollision treeCollision, SWIGTYPE_p_float p0, SWIGTYPE_p_float p1, SWIGTYPE_p_p_float vertexArray, SWIGTYPE_p_int vertexCount, SWIGTYPE_p_int vertexStrideInBytes, SWIGTYPE_p_int indexList, int maxIndexCount, SWIGTYPE_p_int faceAttribute) {
    int ret = cppPINVOKE.NewtonTreeCollisionGetVertexListTriangleListInAABB(SWIGTYPE_p_NewtonCollision.getCPtr(treeCollision), SWIGTYPE_p_float.getCPtr(p0), SWIGTYPE_p_float.getCPtr(p1), SWIGTYPE_p_p_float.getCPtr(vertexArray), SWIGTYPE_p_int.getCPtr(vertexCount), SWIGTYPE_p_int.getCPtr(vertexStrideInBytes), SWIGTYPE_p_int.getCPtr(indexList), maxIndexCount, SWIGTYPE_p_int.getCPtr(faceAttribute));
    return ret;
  }

  public static void NewtonStaticCollisionSetDebugCallback(SWIGTYPE_p_NewtonCollision staticCollision, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int_int_q_const__p_q_const__float_int__void userCallback) {
    cppPINVOKE.NewtonStaticCollisionSetDebugCallback(SWIGTYPE_p_NewtonCollision.getCPtr(staticCollision), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int_int_q_const__p_q_const__float_int__void.getCPtr(userCallback));
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCollisionCreateInstance(SWIGTYPE_p_NewtonCollision collision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionCreateInstance(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static int NewtonCollisionGetType(SWIGTYPE_p_NewtonCollision collision) {
    int ret = cppPINVOKE.NewtonCollisionGetType(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    return ret;
  }

  public static int NewtonCollisionIsConvexShape(SWIGTYPE_p_NewtonCollision collision) {
    int ret = cppPINVOKE.NewtonCollisionIsConvexShape(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    return ret;
  }

  public static int NewtonCollisionIsStaticShape(SWIGTYPE_p_NewtonCollision collision) {
    int ret = cppPINVOKE.NewtonCollisionIsStaticShape(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    return ret;
  }

  public static void NewtonCollisionSetUserData(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonCollisionSetUserData(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_void.getCPtr(userData));
  }

  public static SWIGTYPE_p_void NewtonCollisionGetUserData(SWIGTYPE_p_NewtonCollision collision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionGetUserData(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonCollisionSetUserData1(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonCollisionSetUserData1(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_void.getCPtr(userData));
  }

  public static SWIGTYPE_p_void NewtonCollisionGetUserData1(SWIGTYPE_p_NewtonCollision collision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionGetUserData1(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonCollisionSetUserID(SWIGTYPE_p_NewtonCollision collision, uint id) {
    cppPINVOKE.NewtonCollisionSetUserID(SWIGTYPE_p_NewtonCollision.getCPtr(collision), id);
  }

  public static uint NewtonCollisionGetUserID(SWIGTYPE_p_NewtonCollision collision) {
    uint ret = cppPINVOKE.NewtonCollisionGetUserID(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    return ret;
  }

  public static SWIGTYPE_p_void NewtonCollisionGetSubCollisionHandle(SWIGTYPE_p_NewtonCollision collision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionGetSubCollisionHandle(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCollisionGetParentInstance(SWIGTYPE_p_NewtonCollision collision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionGetParentInstance(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static void NewtonCollisionSetMatrix(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonCollisionSetMatrix(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonCollisionGetMatrix(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonCollisionGetMatrix(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonCollisionSetScale(SWIGTYPE_p_NewtonCollision collision, float scaleX, float scaleY, float scaleZ) {
    cppPINVOKE.NewtonCollisionSetScale(SWIGTYPE_p_NewtonCollision.getCPtr(collision), scaleX, scaleY, scaleZ);
  }

  public static void NewtonCollisionGetScale(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float scaleX, SWIGTYPE_p_float scaleY, SWIGTYPE_p_float scaleZ) {
    cppPINVOKE.NewtonCollisionGetScale(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(scaleX), SWIGTYPE_p_float.getCPtr(scaleY), SWIGTYPE_p_float.getCPtr(scaleZ));
  }

  public static void NewtonDestroyCollision(SWIGTYPE_p_NewtonCollision collision) {
    cppPINVOKE.NewtonDestroyCollision(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
  }

  public static float NewtonCollisionGetSkinThickness(SWIGTYPE_p_NewtonCollision collision) {
    float ret = cppPINVOKE.NewtonCollisionGetSkinThickness(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    return ret;
  }

  public static int NewtonCollisionIntersectionTest(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonCollision collisionA, SWIGTYPE_p_float matrixA, SWIGTYPE_p_NewtonCollision collisionB, SWIGTYPE_p_float matrixB, int threadIndex) {
    int ret = cppPINVOKE.NewtonCollisionIntersectionTest(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonCollision.getCPtr(collisionA), SWIGTYPE_p_float.getCPtr(matrixA), SWIGTYPE_p_NewtonCollision.getCPtr(collisionB), SWIGTYPE_p_float.getCPtr(matrixB), threadIndex);
    return ret;
  }

  public static int NewtonCollisionPointDistance(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float point, SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float matrix, SWIGTYPE_p_float contact, SWIGTYPE_p_float normal, int threadIndex) {
    int ret = cppPINVOKE.NewtonCollisionPointDistance(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(point), SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_float.getCPtr(contact), SWIGTYPE_p_float.getCPtr(normal), threadIndex);
    return ret;
  }

  public static int NewtonCollisionClosestPoint(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonCollision collisionA, SWIGTYPE_p_float matrixA, SWIGTYPE_p_NewtonCollision collisionB, SWIGTYPE_p_float matrixB, SWIGTYPE_p_float contactA, SWIGTYPE_p_float contactB, SWIGTYPE_p_float normalAB, int threadIndex) {
    int ret = cppPINVOKE.NewtonCollisionClosestPoint(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonCollision.getCPtr(collisionA), SWIGTYPE_p_float.getCPtr(matrixA), SWIGTYPE_p_NewtonCollision.getCPtr(collisionB), SWIGTYPE_p_float.getCPtr(matrixB), SWIGTYPE_p_float.getCPtr(contactA), SWIGTYPE_p_float.getCPtr(contactB), SWIGTYPE_p_float.getCPtr(normalAB), threadIndex);
    return ret;
  }

  public static int NewtonCollisionCollide(SWIGTYPE_p_NewtonWorld newtonWorld, int maxSize, SWIGTYPE_p_NewtonCollision collisionA, SWIGTYPE_p_float matrixA, SWIGTYPE_p_NewtonCollision collisionB, SWIGTYPE_p_float matrixB, SWIGTYPE_p_float contacts, SWIGTYPE_p_float normals, SWIGTYPE_p_float penetration, SWIGTYPE_p_long_long attributeA, SWIGTYPE_p_long_long attributeB, int threadIndex) {
    int ret = cppPINVOKE.NewtonCollisionCollide(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), maxSize, SWIGTYPE_p_NewtonCollision.getCPtr(collisionA), SWIGTYPE_p_float.getCPtr(matrixA), SWIGTYPE_p_NewtonCollision.getCPtr(collisionB), SWIGTYPE_p_float.getCPtr(matrixB), SWIGTYPE_p_float.getCPtr(contacts), SWIGTYPE_p_float.getCPtr(normals), SWIGTYPE_p_float.getCPtr(penetration), SWIGTYPE_p_long_long.getCPtr(attributeA), SWIGTYPE_p_long_long.getCPtr(attributeB), threadIndex);
    return ret;
  }

  public static int NewtonCollisionCollideContinue(SWIGTYPE_p_NewtonWorld newtonWorld, int maxSize, float timestep, SWIGTYPE_p_NewtonCollision collisionA, SWIGTYPE_p_float matrixA, SWIGTYPE_p_float velocA, SWIGTYPE_p_float omegaA, SWIGTYPE_p_NewtonCollision collisionB, SWIGTYPE_p_float matrixB, SWIGTYPE_p_float velocB, SWIGTYPE_p_float omegaB, SWIGTYPE_p_float timeOfImpact, SWIGTYPE_p_float contacts, SWIGTYPE_p_float normals, SWIGTYPE_p_float penetration, SWIGTYPE_p_long_long attributeA, SWIGTYPE_p_long_long attributeB, int threadIndex) {
    int ret = cppPINVOKE.NewtonCollisionCollideContinue(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), maxSize, timestep, SWIGTYPE_p_NewtonCollision.getCPtr(collisionA), SWIGTYPE_p_float.getCPtr(matrixA), SWIGTYPE_p_float.getCPtr(velocA), SWIGTYPE_p_float.getCPtr(omegaA), SWIGTYPE_p_NewtonCollision.getCPtr(collisionB), SWIGTYPE_p_float.getCPtr(matrixB), SWIGTYPE_p_float.getCPtr(velocB), SWIGTYPE_p_float.getCPtr(omegaB), SWIGTYPE_p_float.getCPtr(timeOfImpact), SWIGTYPE_p_float.getCPtr(contacts), SWIGTYPE_p_float.getCPtr(normals), SWIGTYPE_p_float.getCPtr(penetration), SWIGTYPE_p_long_long.getCPtr(attributeA), SWIGTYPE_p_long_long.getCPtr(attributeB), threadIndex);
    return ret;
  }

  public static void NewtonCollisionSupportVertex(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float dir, SWIGTYPE_p_float vertex) {
    cppPINVOKE.NewtonCollisionSupportVertex(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(dir), SWIGTYPE_p_float.getCPtr(vertex));
  }

  public static float NewtonCollisionRayCast(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float p0, SWIGTYPE_p_float p1, SWIGTYPE_p_float normal, SWIGTYPE_p_long_long attribute) {
    float ret = cppPINVOKE.NewtonCollisionRayCast(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(p0), SWIGTYPE_p_float.getCPtr(p1), SWIGTYPE_p_float.getCPtr(normal), SWIGTYPE_p_long_long.getCPtr(attribute));
    return ret;
  }

  public static void NewtonCollisionCalculateAABB(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float matrix, SWIGTYPE_p_float p0, SWIGTYPE_p_float p1) {
    cppPINVOKE.NewtonCollisionCalculateAABB(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_float.getCPtr(p0), SWIGTYPE_p_float.getCPtr(p1));
  }

  public static void NewtonCollisionForEachPolygonDo(SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float matrix, SWIGTYPE_p_f_q_const__p_void_int_q_const__p_q_const__float_int__void callback, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonCollisionForEachPolygonDo(SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_f_q_const__p_void_int_q_const__p_q_const__float_int__void.getCPtr(callback), SWIGTYPE_p_void.getCPtr(userData));
  }

  public static SWIGTYPE_p_void NewtonCollisionAggregateCreate(SWIGTYPE_p_NewtonWorld world) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCollisionAggregateCreate(SWIGTYPE_p_NewtonWorld.getCPtr(world));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonCollisionAggregateDestroy(SWIGTYPE_p_void aggregate) {
    cppPINVOKE.NewtonCollisionAggregateDestroy(SWIGTYPE_p_void.getCPtr(aggregate));
  }

  public static void NewtonCollisionAggregateAddBody(SWIGTYPE_p_void aggregate, SWIGTYPE_p_NewtonBody body) {
    cppPINVOKE.NewtonCollisionAggregateAddBody(SWIGTYPE_p_void.getCPtr(aggregate), SWIGTYPE_p_NewtonBody.getCPtr(body));
  }

  public static void NewtonCollisionAggregateRemoveBody(SWIGTYPE_p_void aggregate, SWIGTYPE_p_NewtonBody body) {
    cppPINVOKE.NewtonCollisionAggregateRemoveBody(SWIGTYPE_p_void.getCPtr(aggregate), SWIGTYPE_p_NewtonBody.getCPtr(body));
  }

  public static int NewtonCollisionAggregateGetSelfCollision(SWIGTYPE_p_void aggregate) {
    int ret = cppPINVOKE.NewtonCollisionAggregateGetSelfCollision(SWIGTYPE_p_void.getCPtr(aggregate));
    return ret;
  }

  public static void NewtonCollisionAggregateSetSelfCollision(SWIGTYPE_p_void aggregate, int state) {
    cppPINVOKE.NewtonCollisionAggregateSetSelfCollision(SWIGTYPE_p_void.getCPtr(aggregate), state);
  }

  public static void NewtonSetEulerAngle(SWIGTYPE_p_float eulersAngles, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonSetEulerAngle(SWIGTYPE_p_float.getCPtr(eulersAngles), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonGetEulerAngle(SWIGTYPE_p_float matrix, SWIGTYPE_p_float eulersAngles0, SWIGTYPE_p_float eulersAngles1) {
    cppPINVOKE.NewtonGetEulerAngle(SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_float.getCPtr(eulersAngles0), SWIGTYPE_p_float.getCPtr(eulersAngles1));
  }

  public static float NewtonCalculateSpringDamperAcceleration(float dt, float ks, float x, float kd, float s) {
    float ret = cppPINVOKE.NewtonCalculateSpringDamperAcceleration(dt, ks, x, kd, s);
    return ret;
  }

  public static SWIGTYPE_p_NewtonBody NewtonCreateDynamicBody(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float matrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateDynamicBody(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(matrix));
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonBody NewtonCreateKinematicBody(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonCollision collision, SWIGTYPE_p_float matrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateKinematicBody(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonCollision.getCPtr(collision), SWIGTYPE_p_float.getCPtr(matrix));
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonBody NewtonCreateDeformableBody(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonCollision deformableMesh, SWIGTYPE_p_float matrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateDeformableBody(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), SWIGTYPE_p_float.getCPtr(matrix));
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static void NewtonDestroyBody(SWIGTYPE_p_NewtonBody body) {
    cppPINVOKE.NewtonDestroyBody(SWIGTYPE_p_NewtonBody.getCPtr(body));
  }

  public static int NewtonBodyGetSimulationState(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetSimulationState(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodySetSimulationState(SWIGTYPE_p_NewtonBody bodyPtr, int state) {
    cppPINVOKE.NewtonBodySetSimulationState(SWIGTYPE_p_NewtonBody.getCPtr(bodyPtr), state);
  }

  public static int NewtonBodyGetType(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetType(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static int NewtonBodyGetCollidable(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetCollidable(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodySetCollidable(SWIGTYPE_p_NewtonBody body, int collidableState) {
    cppPINVOKE.NewtonBodySetCollidable(SWIGTYPE_p_NewtonBody.getCPtr(body), collidableState);
  }

  public static void NewtonBodyAddForce(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float force) {
    cppPINVOKE.NewtonBodyAddForce(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(force));
  }

  public static void NewtonBodyAddTorque(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float torque) {
    cppPINVOKE.NewtonBodyAddTorque(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(torque));
  }

  public static void NewtonBodyCalculateInverseDynamicsForce(SWIGTYPE_p_NewtonBody body, float timestep, SWIGTYPE_p_float desiredVeloc, SWIGTYPE_p_float forceOut) {
    cppPINVOKE.NewtonBodyCalculateInverseDynamicsForce(SWIGTYPE_p_NewtonBody.getCPtr(body), timestep, SWIGTYPE_p_float.getCPtr(desiredVeloc), SWIGTYPE_p_float.getCPtr(forceOut));
  }

  public static void NewtonBodySetCentreOfMass(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float com) {
    cppPINVOKE.NewtonBodySetCentreOfMass(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(com));
  }

  public static void NewtonBodySetMassMatrix(SWIGTYPE_p_NewtonBody body, float mass, float Ixx, float Iyy, float Izz) {
    cppPINVOKE.NewtonBodySetMassMatrix(SWIGTYPE_p_NewtonBody.getCPtr(body), mass, Ixx, Iyy, Izz);
  }

  public static void NewtonBodySetFullMassMatrix(SWIGTYPE_p_NewtonBody body, float mass, SWIGTYPE_p_float inertiaMatrix) {
    cppPINVOKE.NewtonBodySetFullMassMatrix(SWIGTYPE_p_NewtonBody.getCPtr(body), mass, SWIGTYPE_p_float.getCPtr(inertiaMatrix));
  }

  public static void NewtonBodySetMassProperties(SWIGTYPE_p_NewtonBody body, float mass, SWIGTYPE_p_NewtonCollision collision) {
    cppPINVOKE.NewtonBodySetMassProperties(SWIGTYPE_p_NewtonBody.getCPtr(body), mass, SWIGTYPE_p_NewtonCollision.getCPtr(collision));
  }

  public static void NewtonBodySetMatrix(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonBodySetMatrix(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonBodySetMatrixNoSleep(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonBodySetMatrixNoSleep(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonBodySetMatrixRecursive(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonBodySetMatrixRecursive(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonBodySetMaterialGroupID(SWIGTYPE_p_NewtonBody body, int id) {
    cppPINVOKE.NewtonBodySetMaterialGroupID(SWIGTYPE_p_NewtonBody.getCPtr(body), id);
  }

  public static void NewtonBodySetContinuousCollisionMode(SWIGTYPE_p_NewtonBody body, uint state) {
    cppPINVOKE.NewtonBodySetContinuousCollisionMode(SWIGTYPE_p_NewtonBody.getCPtr(body), state);
  }

  public static void NewtonBodySetJointRecursiveCollision(SWIGTYPE_p_NewtonBody body, uint state) {
    cppPINVOKE.NewtonBodySetJointRecursiveCollision(SWIGTYPE_p_NewtonBody.getCPtr(body), state);
  }

  public static void NewtonBodySetOmega(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float omega) {
    cppPINVOKE.NewtonBodySetOmega(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(omega));
  }

  public static void NewtonBodySetOmegaNoSleep(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float omega) {
    cppPINVOKE.NewtonBodySetOmegaNoSleep(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(omega));
  }

  public static void NewtonBodySetVelocity(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float velocity) {
    cppPINVOKE.NewtonBodySetVelocity(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(velocity));
  }

  public static void NewtonBodySetVelocityNoSleep(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float velocity) {
    cppPINVOKE.NewtonBodySetVelocityNoSleep(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(velocity));
  }

  public static void NewtonBodySetForce(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float force) {
    cppPINVOKE.NewtonBodySetForce(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(force));
  }

  public static void NewtonBodySetTorque(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float torque) {
    cppPINVOKE.NewtonBodySetTorque(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(torque));
  }

  public static void NewtonBodySetLinearDamping(SWIGTYPE_p_NewtonBody body, float linearDamp) {
    cppPINVOKE.NewtonBodySetLinearDamping(SWIGTYPE_p_NewtonBody.getCPtr(body), linearDamp);
  }

  public static void NewtonBodySetAngularDamping(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float angularDamp) {
    cppPINVOKE.NewtonBodySetAngularDamping(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(angularDamp));
  }

  public static void NewtonBodySetCollision(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_NewtonCollision collision) {
    cppPINVOKE.NewtonBodySetCollision(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_NewtonCollision.getCPtr(collision));
  }

  public static void NewtonBodySetCollisionScale(SWIGTYPE_p_NewtonBody body, float scaleX, float scaleY, float scaleZ) {
    cppPINVOKE.NewtonBodySetCollisionScale(SWIGTYPE_p_NewtonBody.getCPtr(body), scaleX, scaleY, scaleZ);
  }

  public static float NewtonBodyGetMaxRotationPerStep(SWIGTYPE_p_NewtonBody body) {
    float ret = cppPINVOKE.NewtonBodyGetMaxRotationPerStep(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodySetMaxRotationPerStep(SWIGTYPE_p_NewtonBody body, float angleInRadians) {
    cppPINVOKE.NewtonBodySetMaxRotationPerStep(SWIGTYPE_p_NewtonBody.getCPtr(body), angleInRadians);
  }

  public static int NewtonBodyGetSleepState(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetSleepState(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodySetSleepState(SWIGTYPE_p_NewtonBody body, int state) {
    cppPINVOKE.NewtonBodySetSleepState(SWIGTYPE_p_NewtonBody.getCPtr(body), state);
  }

  public static int NewtonBodyGetAutoSleep(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetAutoSleep(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodySetAutoSleep(SWIGTYPE_p_NewtonBody body, int state) {
    cppPINVOKE.NewtonBodySetAutoSleep(SWIGTYPE_p_NewtonBody.getCPtr(body), state);
  }

  public static int NewtonBodyGetFreezeState(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetFreezeState(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodySetFreezeState(SWIGTYPE_p_NewtonBody body, int state) {
    cppPINVOKE.NewtonBodySetFreezeState(SWIGTYPE_p_NewtonBody.getCPtr(body), state);
  }

  public static void NewtonBodySetDestructorCallback(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void callback) {
    cppPINVOKE.NewtonBodySetDestructorCallback(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void.getCPtr(callback));
  }

  public static SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void NewtonBodyGetDestructorCallback(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetDestructorCallback(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void(cPtr, false);
    return ret;
  }

  public static void NewtonBodySetTransformCallback(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void callback) {
    cppPINVOKE.NewtonBodySetTransformCallback(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void.getCPtr(callback));
  }

  public static SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void NewtonBodyGetTransformCallback(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetTransformCallback(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void(cPtr, false);
    return ret;
  }

  public static void NewtonBodySetForceAndTorqueCallback(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void callback) {
    cppPINVOKE.NewtonBodySetForceAndTorqueCallback(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void.getCPtr(callback));
  }

  public static SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void NewtonBodyGetForceAndTorqueCallback(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetForceAndTorqueCallback(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void(cPtr, false);
    return ret;
  }

  public static int NewtonBodyGetID(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetID(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodySetUserData(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonBodySetUserData(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_void.getCPtr(userData));
  }

  public static SWIGTYPE_p_void NewtonBodyGetUserData(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetUserData(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonWorld NewtonBodyGetWorld(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetWorld(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_NewtonWorld ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonWorld(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonBodyGetCollision(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetCollision(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static int NewtonBodyGetMaterialGroupID(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetMaterialGroupID(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static int NewtonBodyGetContinuousCollisionMode(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetContinuousCollisionMode(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static int NewtonBodyGetJointRecursiveCollision(SWIGTYPE_p_NewtonBody body) {
    int ret = cppPINVOKE.NewtonBodyGetJointRecursiveCollision(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodyGetPosition(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float pos) {
    cppPINVOKE.NewtonBodyGetPosition(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(pos));
  }

  public static void NewtonBodyGetMatrix(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonBodyGetMatrix(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonBodyGetRotation(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float rotation) {
    cppPINVOKE.NewtonBodyGetRotation(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(rotation));
  }

  public static void NewtonBodyGetMassMatrix(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float mass, SWIGTYPE_p_float Ixx, SWIGTYPE_p_float Iyy, SWIGTYPE_p_float Izz) {
    cppPINVOKE.NewtonBodyGetMassMatrix(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(mass), SWIGTYPE_p_float.getCPtr(Ixx), SWIGTYPE_p_float.getCPtr(Iyy), SWIGTYPE_p_float.getCPtr(Izz));
  }

  public static void NewtonBodyGetInvMass(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float invMass, SWIGTYPE_p_float invIxx, SWIGTYPE_p_float invIyy, SWIGTYPE_p_float invIzz) {
    cppPINVOKE.NewtonBodyGetInvMass(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(invMass), SWIGTYPE_p_float.getCPtr(invIxx), SWIGTYPE_p_float.getCPtr(invIyy), SWIGTYPE_p_float.getCPtr(invIzz));
  }

  public static void NewtonBodyGetInertiaMatrix(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float inertiaMatrix) {
    cppPINVOKE.NewtonBodyGetInertiaMatrix(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(inertiaMatrix));
  }

  public static void NewtonBodyGetInvInertiaMatrix(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float invInertiaMatrix) {
    cppPINVOKE.NewtonBodyGetInvInertiaMatrix(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(invInertiaMatrix));
  }

  public static void NewtonBodyGetOmega(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float vector) {
    cppPINVOKE.NewtonBodyGetOmega(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(vector));
  }

  public static void NewtonBodyGetVelocity(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float vector) {
    cppPINVOKE.NewtonBodyGetVelocity(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(vector));
  }

  public static void NewtonBodyGetForce(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float vector) {
    cppPINVOKE.NewtonBodyGetForce(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(vector));
  }

  public static void NewtonBodyGetTorque(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float vector) {
    cppPINVOKE.NewtonBodyGetTorque(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(vector));
  }

  public static void NewtonBodyGetForceAcc(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float vector) {
    cppPINVOKE.NewtonBodyGetForceAcc(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(vector));
  }

  public static void NewtonBodyGetTorqueAcc(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float vector) {
    cppPINVOKE.NewtonBodyGetTorqueAcc(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(vector));
  }

  public static void NewtonBodyGetCentreOfMass(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float com) {
    cppPINVOKE.NewtonBodyGetCentreOfMass(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(com));
  }

  public static void NewtonBodyGetPointVelocity(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float point, SWIGTYPE_p_float velocOut) {
    cppPINVOKE.NewtonBodyGetPointVelocity(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(point), SWIGTYPE_p_float.getCPtr(velocOut));
  }

  public static void NewtonBodyAddImpulse(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float pointDeltaVeloc, SWIGTYPE_p_float pointPosit) {
    cppPINVOKE.NewtonBodyAddImpulse(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(pointDeltaVeloc), SWIGTYPE_p_float.getCPtr(pointPosit));
  }

  public static void NewtonBodyApplyImpulseArray(SWIGTYPE_p_NewtonBody body, int impuleCount, int strideInByte, SWIGTYPE_p_float impulseArray, SWIGTYPE_p_float pointArray) {
    cppPINVOKE.NewtonBodyApplyImpulseArray(SWIGTYPE_p_NewtonBody.getCPtr(body), impuleCount, strideInByte, SWIGTYPE_p_float.getCPtr(impulseArray), SWIGTYPE_p_float.getCPtr(pointArray));
  }

  public static void NewtonBodyApplyImpulsePair(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float linearImpulse, SWIGTYPE_p_float angularImpulse) {
    cppPINVOKE.NewtonBodyApplyImpulsePair(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(linearImpulse), SWIGTYPE_p_float.getCPtr(angularImpulse));
  }

  public static void NewtonBodyIntegrateVelocity(SWIGTYPE_p_NewtonBody body, float timestep) {
    cppPINVOKE.NewtonBodyIntegrateVelocity(SWIGTYPE_p_NewtonBody.getCPtr(body), timestep);
  }

  public static float NewtonBodyGetLinearDamping(SWIGTYPE_p_NewtonBody body) {
    float ret = cppPINVOKE.NewtonBodyGetLinearDamping(SWIGTYPE_p_NewtonBody.getCPtr(body));
    return ret;
  }

  public static void NewtonBodyGetAngularDamping(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float vector) {
    cppPINVOKE.NewtonBodyGetAngularDamping(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(vector));
  }

  public static void NewtonBodyGetAABB(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_float p0, SWIGTYPE_p_float p1) {
    cppPINVOKE.NewtonBodyGetAABB(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_float.getCPtr(p0), SWIGTYPE_p_float.getCPtr(p1));
  }

  public static SWIGTYPE_p_NewtonJoint NewtonBodyGetFirstJoint(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetFirstJoint(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonBodyGetNextJoint(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_NewtonJoint joint) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetNextJoint(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonBodyGetFirstContactJoint(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetFirstContactJoint(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonBodyGetNextContactJoint(SWIGTYPE_p_NewtonBody body, SWIGTYPE_p_NewtonJoint contactJoint) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetNextContactJoint(SWIGTYPE_p_NewtonBody.getCPtr(body), SWIGTYPE_p_NewtonJoint.getCPtr(contactJoint));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonSkeletonContainer NewtonBodyGetSkeleton(SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonBodyGetSkeleton(SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_NewtonSkeletonContainer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonSkeletonContainer(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonContactJointGetFirstContact(SWIGTYPE_p_NewtonJoint contactJoint) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonContactJointGetFirstContact(SWIGTYPE_p_NewtonJoint.getCPtr(contactJoint));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonContactJointGetNextContact(SWIGTYPE_p_NewtonJoint contactJoint, SWIGTYPE_p_void contact) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonContactJointGetNextContact(SWIGTYPE_p_NewtonJoint.getCPtr(contactJoint), SWIGTYPE_p_void.getCPtr(contact));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static int NewtonContactJointGetContactCount(SWIGTYPE_p_NewtonJoint contactJoint) {
    int ret = cppPINVOKE.NewtonContactJointGetContactCount(SWIGTYPE_p_NewtonJoint.getCPtr(contactJoint));
    return ret;
  }

  public static void NewtonContactJointRemoveContact(SWIGTYPE_p_NewtonJoint contactJoint, SWIGTYPE_p_void contact) {
    cppPINVOKE.NewtonContactJointRemoveContact(SWIGTYPE_p_NewtonJoint.getCPtr(contactJoint), SWIGTYPE_p_void.getCPtr(contact));
  }

  public static float NewtonContactJointGetClosestDistance(SWIGTYPE_p_NewtonJoint contactJoint) {
    float ret = cppPINVOKE.NewtonContactJointGetClosestDistance(SWIGTYPE_p_NewtonJoint.getCPtr(contactJoint));
    return ret;
  }

  public static SWIGTYPE_p_NewtonMaterial NewtonContactGetMaterial(SWIGTYPE_p_void contact) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonContactGetMaterial(SWIGTYPE_p_void.getCPtr(contact));
    SWIGTYPE_p_NewtonMaterial ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMaterial(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonContactGetCollision0(SWIGTYPE_p_void contact) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonContactGetCollision0(SWIGTYPE_p_void.getCPtr(contact));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonContactGetCollision1(SWIGTYPE_p_void contact) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonContactGetCollision1(SWIGTYPE_p_void.getCPtr(contact));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonContactGetCollisionID0(SWIGTYPE_p_void contact) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonContactGetCollisionID0(SWIGTYPE_p_void.getCPtr(contact));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonContactGetCollisionID1(SWIGTYPE_p_void contact) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonContactGetCollisionID1(SWIGTYPE_p_void.getCPtr(contact));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonJointGetUserData(SWIGTYPE_p_NewtonJoint joint) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonJointGetUserData(SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonJointSetUserData(SWIGTYPE_p_NewtonJoint joint, SWIGTYPE_p_void userData) {
    cppPINVOKE.NewtonJointSetUserData(SWIGTYPE_p_NewtonJoint.getCPtr(joint), SWIGTYPE_p_void.getCPtr(userData));
  }

  public static SWIGTYPE_p_NewtonBody NewtonJointGetBody0(SWIGTYPE_p_NewtonJoint joint) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonJointGetBody0(SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonBody NewtonJointGetBody1(SWIGTYPE_p_NewtonJoint joint) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonJointGetBody1(SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static void NewtonJointGetInfo(SWIGTYPE_p_NewtonJoint joint, NewtonJointRecord info) {
    cppPINVOKE.NewtonJointGetInfo(SWIGTYPE_p_NewtonJoint.getCPtr(joint), NewtonJointRecord.getCPtr(info));
  }

  public static int NewtonJointGetCollisionState(SWIGTYPE_p_NewtonJoint joint) {
    int ret = cppPINVOKE.NewtonJointGetCollisionState(SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    return ret;
  }

  public static void NewtonJointSetCollisionState(SWIGTYPE_p_NewtonJoint joint, int state) {
    cppPINVOKE.NewtonJointSetCollisionState(SWIGTYPE_p_NewtonJoint.getCPtr(joint), state);
  }

  public static float NewtonJointGetStiffness(SWIGTYPE_p_NewtonJoint joint) {
    float ret = cppPINVOKE.NewtonJointGetStiffness(SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    return ret;
  }

  public static void NewtonJointSetStiffness(SWIGTYPE_p_NewtonJoint joint, float state) {
    cppPINVOKE.NewtonJointSetStiffness(SWIGTYPE_p_NewtonJoint.getCPtr(joint), state);
  }

  public static void NewtonDestroyJoint(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonJoint joint) {
    cppPINVOKE.NewtonDestroyJoint(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonJoint.getCPtr(joint));
  }

  public static void NewtonJointSetDestructor(SWIGTYPE_p_NewtonJoint joint, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint__void destructor) {
    cppPINVOKE.NewtonJointSetDestructor(SWIGTYPE_p_NewtonJoint.getCPtr(joint), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint__void.getCPtr(destructor));
  }

  public static int NewtonJointIsActive(SWIGTYPE_p_NewtonJoint joint) {
    int ret = cppPINVOKE.NewtonJointIsActive(SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateClothPatch(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonMesh mesh, int shapeID, NewtonClothPatchMaterial structuralMaterial, NewtonClothPatchMaterial bendMaterial) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateClothPatch(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonMesh.getCPtr(mesh), shapeID, NewtonClothPatchMaterial.getCPtr(structuralMaterial), NewtonClothPatchMaterial.getCPtr(bendMaterial));
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonCollision NewtonCreateDeformableMesh(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_NewtonMesh mesh, int shapeID) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonCreateDeformableMesh(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_NewtonMesh.getCPtr(mesh), shapeID);
    SWIGTYPE_p_NewtonCollision ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonCollision(cPtr, false);
    return ret;
  }

  public static void NewtonDeformableMeshCreateClusters(SWIGTYPE_p_NewtonCollision deformableMesh, int clusterCount, float overlapingWidth) {
    cppPINVOKE.NewtonDeformableMeshCreateClusters(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), clusterCount, overlapingWidth);
  }

  public static void NewtonDeformableMeshSetDebugCallback(SWIGTYPE_p_NewtonCollision deformableMesh, SWIGTYPE_p_f_q_const__p_void_int_q_const__p_q_const__float_int__void callback) {
    cppPINVOKE.NewtonDeformableMeshSetDebugCallback(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), SWIGTYPE_p_f_q_const__p_void_int_q_const__p_q_const__float_int__void.getCPtr(callback));
  }

  public static int NewtonDeformableMeshGetParticleCount(SWIGTYPE_p_NewtonCollision deformableMesh) {
    int ret = cppPINVOKE.NewtonDeformableMeshGetParticleCount(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh));
    return ret;
  }

  public static void NewtonDeformableMeshGetParticlePosition(SWIGTYPE_p_NewtonCollision deformableMesh, int particleIndex, SWIGTYPE_p_float posit) {
    cppPINVOKE.NewtonDeformableMeshGetParticlePosition(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), particleIndex, SWIGTYPE_p_float.getCPtr(posit));
  }

  public static void NewtonDeformableMeshBeginConfiguration(SWIGTYPE_p_NewtonCollision deformableMesh) {
    cppPINVOKE.NewtonDeformableMeshBeginConfiguration(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh));
  }

  public static void NewtonDeformableMeshUnconstraintParticle(SWIGTYPE_p_NewtonCollision deformableMesh, int particleIndex) {
    cppPINVOKE.NewtonDeformableMeshUnconstraintParticle(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), particleIndex);
  }

  public static void NewtonDeformableMeshConstraintParticle(SWIGTYPE_p_NewtonCollision deformableMesh, int particleIndex, SWIGTYPE_p_float posit, SWIGTYPE_p_NewtonBody body) {
    cppPINVOKE.NewtonDeformableMeshConstraintParticle(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), particleIndex, SWIGTYPE_p_float.getCPtr(posit), SWIGTYPE_p_NewtonBody.getCPtr(body));
  }

  public static void NewtonDeformableMeshEndConfiguration(SWIGTYPE_p_NewtonCollision deformableMesh) {
    cppPINVOKE.NewtonDeformableMeshEndConfiguration(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh));
  }

  public static void NewtonDeformableMeshSetSkinThickness(SWIGTYPE_p_NewtonCollision deformableMesh, float skinThickness) {
    cppPINVOKE.NewtonDeformableMeshSetSkinThickness(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), skinThickness);
  }

  public static void NewtonDeformableMeshUpdateRenderNormals(SWIGTYPE_p_NewtonCollision deformableMesh) {
    cppPINVOKE.NewtonDeformableMeshUpdateRenderNormals(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh));
  }

  public static int NewtonDeformableMeshGetVertexCount(SWIGTYPE_p_NewtonCollision deformableMesh) {
    int ret = cppPINVOKE.NewtonDeformableMeshGetVertexCount(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh));
    return ret;
  }

  public static void NewtonDeformableMeshGetVertexStreams(SWIGTYPE_p_NewtonCollision deformableMesh, int vertexStrideInByte, SWIGTYPE_p_float vertex, int normalStrideInByte, SWIGTYPE_p_float normal, int uvStrideInByte0, SWIGTYPE_p_float uv0) {
    cppPINVOKE.NewtonDeformableMeshGetVertexStreams(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), vertexStrideInByte, SWIGTYPE_p_float.getCPtr(vertex), normalStrideInByte, SWIGTYPE_p_float.getCPtr(normal), uvStrideInByte0, SWIGTYPE_p_float.getCPtr(uv0));
  }

  public static SWIGTYPE_p_NewtonDeformableMeshSegment NewtonDeformableMeshGetFirstSegment(SWIGTYPE_p_NewtonCollision deformableMesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonDeformableMeshGetFirstSegment(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh));
    SWIGTYPE_p_NewtonDeformableMeshSegment ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonDeformableMeshSegment(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonDeformableMeshSegment NewtonDeformableMeshGetNextSegment(SWIGTYPE_p_NewtonCollision deformableMesh, SWIGTYPE_p_NewtonDeformableMeshSegment segment) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonDeformableMeshGetNextSegment(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), SWIGTYPE_p_NewtonDeformableMeshSegment.getCPtr(segment));
    SWIGTYPE_p_NewtonDeformableMeshSegment ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonDeformableMeshSegment(cPtr, false);
    return ret;
  }

  public static int NewtonDeformableMeshSegmentGetMaterialID(SWIGTYPE_p_NewtonCollision deformableMesh, SWIGTYPE_p_NewtonDeformableMeshSegment segment) {
    int ret = cppPINVOKE.NewtonDeformableMeshSegmentGetMaterialID(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), SWIGTYPE_p_NewtonDeformableMeshSegment.getCPtr(segment));
    return ret;
  }

  public static int NewtonDeformableMeshSegmentGetIndexCount(SWIGTYPE_p_NewtonCollision deformableMesh, SWIGTYPE_p_NewtonDeformableMeshSegment segment) {
    int ret = cppPINVOKE.NewtonDeformableMeshSegmentGetIndexCount(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), SWIGTYPE_p_NewtonDeformableMeshSegment.getCPtr(segment));
    return ret;
  }

  public static SWIGTYPE_p_int NewtonDeformableMeshSegmentGetIndexList(SWIGTYPE_p_NewtonCollision deformableMesh, SWIGTYPE_p_NewtonDeformableMeshSegment segment) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonDeformableMeshSegmentGetIndexList(SWIGTYPE_p_NewtonCollision.getCPtr(deformableMesh), SWIGTYPE_p_NewtonDeformableMeshSegment.getCPtr(segment));
    SWIGTYPE_p_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonConstraintCreateBall(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float pivotPoint, SWIGTYPE_p_NewtonBody childBody, SWIGTYPE_p_NewtonBody parentBody) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonConstraintCreateBall(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(pivotPoint), SWIGTYPE_p_NewtonBody.getCPtr(childBody), SWIGTYPE_p_NewtonBody.getCPtr(parentBody));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static void NewtonBallSetUserCallback(SWIGTYPE_p_NewtonJoint ball, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float__void callback) {
    cppPINVOKE.NewtonBallSetUserCallback(SWIGTYPE_p_NewtonJoint.getCPtr(ball), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float__void.getCPtr(callback));
  }

  public static void NewtonBallGetJointAngle(SWIGTYPE_p_NewtonJoint ball, SWIGTYPE_p_float angle) {
    cppPINVOKE.NewtonBallGetJointAngle(SWIGTYPE_p_NewtonJoint.getCPtr(ball), SWIGTYPE_p_float.getCPtr(angle));
  }

  public static void NewtonBallGetJointOmega(SWIGTYPE_p_NewtonJoint ball, SWIGTYPE_p_float omega) {
    cppPINVOKE.NewtonBallGetJointOmega(SWIGTYPE_p_NewtonJoint.getCPtr(ball), SWIGTYPE_p_float.getCPtr(omega));
  }

  public static void NewtonBallGetJointForce(SWIGTYPE_p_NewtonJoint ball, SWIGTYPE_p_float force) {
    cppPINVOKE.NewtonBallGetJointForce(SWIGTYPE_p_NewtonJoint.getCPtr(ball), SWIGTYPE_p_float.getCPtr(force));
  }

  public static void NewtonBallSetConeLimits(SWIGTYPE_p_NewtonJoint ball, SWIGTYPE_p_float pin, float maxConeAngle, float maxTwistAngle) {
    cppPINVOKE.NewtonBallSetConeLimits(SWIGTYPE_p_NewtonJoint.getCPtr(ball), SWIGTYPE_p_float.getCPtr(pin), maxConeAngle, maxTwistAngle);
  }

  public static SWIGTYPE_p_NewtonJoint NewtonConstraintCreateHinge(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float pivotPoint, SWIGTYPE_p_float pinDir, SWIGTYPE_p_NewtonBody childBody, SWIGTYPE_p_NewtonBody parentBody) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonConstraintCreateHinge(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(pivotPoint), SWIGTYPE_p_float.getCPtr(pinDir), SWIGTYPE_p_NewtonBody.getCPtr(childBody), SWIGTYPE_p_NewtonBody.getCPtr(parentBody));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static void NewtonHingeSetUserCallback(SWIGTYPE_p_NewtonJoint hinge, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int callback) {
    cppPINVOKE.NewtonHingeSetUserCallback(SWIGTYPE_p_NewtonJoint.getCPtr(hinge), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int.getCPtr(callback));
  }

  public static float NewtonHingeGetJointAngle(SWIGTYPE_p_NewtonJoint hinge) {
    float ret = cppPINVOKE.NewtonHingeGetJointAngle(SWIGTYPE_p_NewtonJoint.getCPtr(hinge));
    return ret;
  }

  public static float NewtonHingeGetJointOmega(SWIGTYPE_p_NewtonJoint hinge) {
    float ret = cppPINVOKE.NewtonHingeGetJointOmega(SWIGTYPE_p_NewtonJoint.getCPtr(hinge));
    return ret;
  }

  public static void NewtonHingeGetJointForce(SWIGTYPE_p_NewtonJoint hinge, SWIGTYPE_p_float force) {
    cppPINVOKE.NewtonHingeGetJointForce(SWIGTYPE_p_NewtonJoint.getCPtr(hinge), SWIGTYPE_p_float.getCPtr(force));
  }

  public static float NewtonHingeCalculateStopAlpha(SWIGTYPE_p_NewtonJoint hinge, NewtonHingeSliderUpdateDesc desc, float angle) {
    float ret = cppPINVOKE.NewtonHingeCalculateStopAlpha(SWIGTYPE_p_NewtonJoint.getCPtr(hinge), NewtonHingeSliderUpdateDesc.getCPtr(desc), angle);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonConstraintCreateSlider(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float pivotPoint, SWIGTYPE_p_float pinDir, SWIGTYPE_p_NewtonBody childBody, SWIGTYPE_p_NewtonBody parentBody) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonConstraintCreateSlider(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(pivotPoint), SWIGTYPE_p_float.getCPtr(pinDir), SWIGTYPE_p_NewtonBody.getCPtr(childBody), SWIGTYPE_p_NewtonBody.getCPtr(parentBody));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static void NewtonSliderSetUserCallback(SWIGTYPE_p_NewtonJoint slider, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int callback) {
    cppPINVOKE.NewtonSliderSetUserCallback(SWIGTYPE_p_NewtonJoint.getCPtr(slider), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int.getCPtr(callback));
  }

  public static float NewtonSliderGetJointPosit(SWIGTYPE_p_NewtonJoint slider) {
    float ret = cppPINVOKE.NewtonSliderGetJointPosit(SWIGTYPE_p_NewtonJoint.getCPtr(slider));
    return ret;
  }

  public static float NewtonSliderGetJointVeloc(SWIGTYPE_p_NewtonJoint slider) {
    float ret = cppPINVOKE.NewtonSliderGetJointVeloc(SWIGTYPE_p_NewtonJoint.getCPtr(slider));
    return ret;
  }

  public static void NewtonSliderGetJointForce(SWIGTYPE_p_NewtonJoint slider, SWIGTYPE_p_float force) {
    cppPINVOKE.NewtonSliderGetJointForce(SWIGTYPE_p_NewtonJoint.getCPtr(slider), SWIGTYPE_p_float.getCPtr(force));
  }

  public static float NewtonSliderCalculateStopAccel(SWIGTYPE_p_NewtonJoint slider, NewtonHingeSliderUpdateDesc desc, float position) {
    float ret = cppPINVOKE.NewtonSliderCalculateStopAccel(SWIGTYPE_p_NewtonJoint.getCPtr(slider), NewtonHingeSliderUpdateDesc.getCPtr(desc), position);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonConstraintCreateCorkscrew(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float pivotPoint, SWIGTYPE_p_float pinDir, SWIGTYPE_p_NewtonBody childBody, SWIGTYPE_p_NewtonBody parentBody) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonConstraintCreateCorkscrew(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(pivotPoint), SWIGTYPE_p_float.getCPtr(pinDir), SWIGTYPE_p_NewtonBody.getCPtr(childBody), SWIGTYPE_p_NewtonBody.getCPtr(parentBody));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static void NewtonCorkscrewSetUserCallback(SWIGTYPE_p_NewtonJoint corkscrew, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int callback) {
    cppPINVOKE.NewtonCorkscrewSetUserCallback(SWIGTYPE_p_NewtonJoint.getCPtr(corkscrew), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int.getCPtr(callback));
  }

  public static float NewtonCorkscrewGetJointPosit(SWIGTYPE_p_NewtonJoint corkscrew) {
    float ret = cppPINVOKE.NewtonCorkscrewGetJointPosit(SWIGTYPE_p_NewtonJoint.getCPtr(corkscrew));
    return ret;
  }

  public static float NewtonCorkscrewGetJointAngle(SWIGTYPE_p_NewtonJoint corkscrew) {
    float ret = cppPINVOKE.NewtonCorkscrewGetJointAngle(SWIGTYPE_p_NewtonJoint.getCPtr(corkscrew));
    return ret;
  }

  public static float NewtonCorkscrewGetJointVeloc(SWIGTYPE_p_NewtonJoint corkscrew) {
    float ret = cppPINVOKE.NewtonCorkscrewGetJointVeloc(SWIGTYPE_p_NewtonJoint.getCPtr(corkscrew));
    return ret;
  }

  public static float NewtonCorkscrewGetJointOmega(SWIGTYPE_p_NewtonJoint corkscrew) {
    float ret = cppPINVOKE.NewtonCorkscrewGetJointOmega(SWIGTYPE_p_NewtonJoint.getCPtr(corkscrew));
    return ret;
  }

  public static void NewtonCorkscrewGetJointForce(SWIGTYPE_p_NewtonJoint corkscrew, SWIGTYPE_p_float force) {
    cppPINVOKE.NewtonCorkscrewGetJointForce(SWIGTYPE_p_NewtonJoint.getCPtr(corkscrew), SWIGTYPE_p_float.getCPtr(force));
  }

  public static float NewtonCorkscrewCalculateStopAlpha(SWIGTYPE_p_NewtonJoint corkscrew, NewtonHingeSliderUpdateDesc desc, float angle) {
    float ret = cppPINVOKE.NewtonCorkscrewCalculateStopAlpha(SWIGTYPE_p_NewtonJoint.getCPtr(corkscrew), NewtonHingeSliderUpdateDesc.getCPtr(desc), angle);
    return ret;
  }

  public static float NewtonCorkscrewCalculateStopAccel(SWIGTYPE_p_NewtonJoint corkscrew, NewtonHingeSliderUpdateDesc desc, float position) {
    float ret = cppPINVOKE.NewtonCorkscrewCalculateStopAccel(SWIGTYPE_p_NewtonJoint.getCPtr(corkscrew), NewtonHingeSliderUpdateDesc.getCPtr(desc), position);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonConstraintCreateUniversal(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float pivotPoint, SWIGTYPE_p_float pinDir0, SWIGTYPE_p_float pinDir1, SWIGTYPE_p_NewtonBody childBody, SWIGTYPE_p_NewtonBody parentBody) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonConstraintCreateUniversal(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(pivotPoint), SWIGTYPE_p_float.getCPtr(pinDir0), SWIGTYPE_p_float.getCPtr(pinDir1), SWIGTYPE_p_NewtonBody.getCPtr(childBody), SWIGTYPE_p_NewtonBody.getCPtr(parentBody));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static void NewtonUniversalSetUserCallback(SWIGTYPE_p_NewtonJoint universal, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int callback) {
    cppPINVOKE.NewtonUniversalSetUserCallback(SWIGTYPE_p_NewtonJoint.getCPtr(universal), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int.getCPtr(callback));
  }

  public static float NewtonUniversalGetJointAngle0(SWIGTYPE_p_NewtonJoint universal) {
    float ret = cppPINVOKE.NewtonUniversalGetJointAngle0(SWIGTYPE_p_NewtonJoint.getCPtr(universal));
    return ret;
  }

  public static float NewtonUniversalGetJointAngle1(SWIGTYPE_p_NewtonJoint universal) {
    float ret = cppPINVOKE.NewtonUniversalGetJointAngle1(SWIGTYPE_p_NewtonJoint.getCPtr(universal));
    return ret;
  }

  public static float NewtonUniversalGetJointOmega0(SWIGTYPE_p_NewtonJoint universal) {
    float ret = cppPINVOKE.NewtonUniversalGetJointOmega0(SWIGTYPE_p_NewtonJoint.getCPtr(universal));
    return ret;
  }

  public static float NewtonUniversalGetJointOmega1(SWIGTYPE_p_NewtonJoint universal) {
    float ret = cppPINVOKE.NewtonUniversalGetJointOmega1(SWIGTYPE_p_NewtonJoint.getCPtr(universal));
    return ret;
  }

  public static void NewtonUniversalGetJointForce(SWIGTYPE_p_NewtonJoint universal, SWIGTYPE_p_float force) {
    cppPINVOKE.NewtonUniversalGetJointForce(SWIGTYPE_p_NewtonJoint.getCPtr(universal), SWIGTYPE_p_float.getCPtr(force));
  }

  public static float NewtonUniversalCalculateStopAlpha0(SWIGTYPE_p_NewtonJoint universal, NewtonHingeSliderUpdateDesc desc, float angle) {
    float ret = cppPINVOKE.NewtonUniversalCalculateStopAlpha0(SWIGTYPE_p_NewtonJoint.getCPtr(universal), NewtonHingeSliderUpdateDesc.getCPtr(desc), angle);
    return ret;
  }

  public static float NewtonUniversalCalculateStopAlpha1(SWIGTYPE_p_NewtonJoint universal, NewtonHingeSliderUpdateDesc desc, float angle) {
    float ret = cppPINVOKE.NewtonUniversalCalculateStopAlpha1(SWIGTYPE_p_NewtonJoint.getCPtr(universal), NewtonHingeSliderUpdateDesc.getCPtr(desc), angle);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonConstraintCreateUpVector(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_float pinDir, SWIGTYPE_p_NewtonBody body) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonConstraintCreateUpVector(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_float.getCPtr(pinDir), SWIGTYPE_p_NewtonBody.getCPtr(body));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static void NewtonUpVectorGetPin(SWIGTYPE_p_NewtonJoint upVector, SWIGTYPE_p_float pin) {
    cppPINVOKE.NewtonUpVectorGetPin(SWIGTYPE_p_NewtonJoint.getCPtr(upVector), SWIGTYPE_p_float.getCPtr(pin));
  }

  public static void NewtonUpVectorSetPin(SWIGTYPE_p_NewtonJoint upVector, SWIGTYPE_p_float pin) {
    cppPINVOKE.NewtonUpVectorSetPin(SWIGTYPE_p_NewtonJoint.getCPtr(upVector), SWIGTYPE_p_float.getCPtr(pin));
  }

  public static SWIGTYPE_p_NewtonJoint NewtonConstraintCreateUserJoint(SWIGTYPE_p_NewtonWorld newtonWorld, int maxDOF, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void callback, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonJointRecord__void getInfo, SWIGTYPE_p_NewtonBody childBody, SWIGTYPE_p_NewtonBody parentBody) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonConstraintCreateUserJoint(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), maxDOF, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void.getCPtr(callback), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonJointRecord__void.getCPtr(getInfo), SWIGTYPE_p_NewtonBody.getCPtr(childBody), SWIGTYPE_p_NewtonBody.getCPtr(parentBody));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static void NewtonUserJointSetFeedbackCollectorCallback(SWIGTYPE_p_NewtonJoint joint, SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void getFeedback) {
    cppPINVOKE.NewtonUserJointSetFeedbackCollectorCallback(SWIGTYPE_p_NewtonJoint.getCPtr(joint), SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void.getCPtr(getFeedback));
  }

  public static void NewtonUserJointAddLinearRow(SWIGTYPE_p_NewtonJoint joint, SWIGTYPE_p_float pivot0, SWIGTYPE_p_float pivot1, SWIGTYPE_p_float dir) {
    cppPINVOKE.NewtonUserJointAddLinearRow(SWIGTYPE_p_NewtonJoint.getCPtr(joint), SWIGTYPE_p_float.getCPtr(pivot0), SWIGTYPE_p_float.getCPtr(pivot1), SWIGTYPE_p_float.getCPtr(dir));
  }

  public static void NewtonUserJointAddAngularRow(SWIGTYPE_p_NewtonJoint joint, float relativeAngle, SWIGTYPE_p_float dir) {
    cppPINVOKE.NewtonUserJointAddAngularRow(SWIGTYPE_p_NewtonJoint.getCPtr(joint), relativeAngle, SWIGTYPE_p_float.getCPtr(dir));
  }

  public static void NewtonUserJointAddGeneralRow(SWIGTYPE_p_NewtonJoint joint, SWIGTYPE_p_float jacobian0, SWIGTYPE_p_float jacobian1) {
    cppPINVOKE.NewtonUserJointAddGeneralRow(SWIGTYPE_p_NewtonJoint.getCPtr(joint), SWIGTYPE_p_float.getCPtr(jacobian0), SWIGTYPE_p_float.getCPtr(jacobian1));
  }

  public static void NewtonUserJointSetRowMinimumFriction(SWIGTYPE_p_NewtonJoint joint, float friction) {
    cppPINVOKE.NewtonUserJointSetRowMinimumFriction(SWIGTYPE_p_NewtonJoint.getCPtr(joint), friction);
  }

  public static void NewtonUserJointSetRowMaximumFriction(SWIGTYPE_p_NewtonJoint joint, float friction) {
    cppPINVOKE.NewtonUserJointSetRowMaximumFriction(SWIGTYPE_p_NewtonJoint.getCPtr(joint), friction);
  }

  public static float NewtonUserCalculateRowZeroAccelaration(SWIGTYPE_p_NewtonJoint joint) {
    float ret = cppPINVOKE.NewtonUserCalculateRowZeroAccelaration(SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    return ret;
  }

  public static void NewtonUserJointSetRowAcceleration(SWIGTYPE_p_NewtonJoint joint, float acceleration) {
    cppPINVOKE.NewtonUserJointSetRowAcceleration(SWIGTYPE_p_NewtonJoint.getCPtr(joint), acceleration);
  }

  public static void NewtonUserJointSetRowSpringDamperAcceleration(SWIGTYPE_p_NewtonJoint joint, float spring, float damper) {
    cppPINVOKE.NewtonUserJointSetRowSpringDamperAcceleration(SWIGTYPE_p_NewtonJoint.getCPtr(joint), spring, damper);
  }

  public static void NewtonUserJointSetRowStiffness(SWIGTYPE_p_NewtonJoint joint, float stiffness) {
    cppPINVOKE.NewtonUserJointSetRowStiffness(SWIGTYPE_p_NewtonJoint.getCPtr(joint), stiffness);
  }

  public static int NewtonUserJoinRowsCount(SWIGTYPE_p_NewtonJoint joint) {
    int ret = cppPINVOKE.NewtonUserJoinRowsCount(SWIGTYPE_p_NewtonJoint.getCPtr(joint));
    return ret;
  }

  public static void NewtonUserJointGetGeneralRow(SWIGTYPE_p_NewtonJoint joint, int index, SWIGTYPE_p_float jacobian0, SWIGTYPE_p_float jacobian1) {
    cppPINVOKE.NewtonUserJointGetGeneralRow(SWIGTYPE_p_NewtonJoint.getCPtr(joint), index, SWIGTYPE_p_float.getCPtr(jacobian0), SWIGTYPE_p_float.getCPtr(jacobian1));
  }

  public static float NewtonUserJointGetRowForce(SWIGTYPE_p_NewtonJoint joint, int row) {
    float ret = cppPINVOKE.NewtonUserJointGetRowForce(SWIGTYPE_p_NewtonJoint.getCPtr(joint), row);
    return ret;
  }

  public static SWIGTYPE_p_NewtonSkeletonContainer NewtonSkeletonContainerCreate(SWIGTYPE_p_NewtonWorld world, SWIGTYPE_p_NewtonBody rootBone, SWIGTYPE_p_f_q_const__p_q_const__NewtonSkeletonContainer__void onDestroyCallback) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonContainerCreate(SWIGTYPE_p_NewtonWorld.getCPtr(world), SWIGTYPE_p_NewtonBody.getCPtr(rootBone), SWIGTYPE_p_f_q_const__p_q_const__NewtonSkeletonContainer__void.getCPtr(onDestroyCallback));
    SWIGTYPE_p_NewtonSkeletonContainer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonSkeletonContainer(cPtr, false);
    return ret;
  }

  public static void NewtonSkeletonContainerDelete(SWIGTYPE_p_NewtonSkeletonContainer skeleton) {
    cppPINVOKE.NewtonSkeletonContainerDelete(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton));
  }

  public static int NewtonSkeletonGetSolverMode(SWIGTYPE_p_NewtonSkeletonContainer skeleton) {
    int ret = cppPINVOKE.NewtonSkeletonGetSolverMode(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton));
    return ret;
  }

  public static void NewtonSkeletonSetSolverMode(SWIGTYPE_p_NewtonSkeletonContainer skeleton, int hardJointMotors) {
    cppPINVOKE.NewtonSkeletonSetSolverMode(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton), hardJointMotors);
  }

  public static void NewtonSkeletonContainerAttachJointArray(SWIGTYPE_p_NewtonSkeletonContainer skeleton, int jointCount, SWIGTYPE_p_p_NewtonJoint jointArray) {
    cppPINVOKE.NewtonSkeletonContainerAttachJointArray(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton), jointCount, SWIGTYPE_p_p_NewtonJoint.getCPtr(jointArray));
  }

  public static SWIGTYPE_p_void NewtonSkeletonContainerAttachBone(SWIGTYPE_p_NewtonSkeletonContainer skeleton, SWIGTYPE_p_NewtonBody childBone, SWIGTYPE_p_NewtonBody parentBone) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonContainerAttachBone(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton), SWIGTYPE_p_NewtonBody.getCPtr(childBone), SWIGTYPE_p_NewtonBody.getCPtr(parentBone));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonSkeletonContainerFinalize(SWIGTYPE_p_NewtonSkeletonContainer skeleton) {
    cppPINVOKE.NewtonSkeletonContainerFinalize(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton));
  }

  public static SWIGTYPE_p_void NewtonSkeletonContainerGetRoot(SWIGTYPE_p_NewtonSkeletonContainer skeleton) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonContainerGetRoot(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonSkeletonContainerGetParent(SWIGTYPE_p_NewtonSkeletonContainer skeleton, SWIGTYPE_p_void node) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonContainerGetParent(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton), SWIGTYPE_p_void.getCPtr(node));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonSkeletonContainerFirstChild(SWIGTYPE_p_NewtonSkeletonContainer skeleton, SWIGTYPE_p_void parent) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonContainerFirstChild(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton), SWIGTYPE_p_void.getCPtr(parent));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonSkeletonContainerNextSibling(SWIGTYPE_p_NewtonSkeletonContainer skeleton, SWIGTYPE_p_void sibling) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonContainerNextSibling(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton), SWIGTYPE_p_void.getCPtr(sibling));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonBody NewtonSkeletonContainerGetBodyFromNode(SWIGTYPE_p_NewtonSkeletonContainer skeleton, SWIGTYPE_p_void node) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonContainerGetBodyFromNode(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton), SWIGTYPE_p_void.getCPtr(node));
    SWIGTYPE_p_NewtonBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonBody(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonJoint NewtonSkeletonContainerGetParentJointFromNode(SWIGTYPE_p_NewtonSkeletonContainer skeleton, SWIGTYPE_p_void node) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonSkeletonContainerGetParentJointFromNode(SWIGTYPE_p_NewtonSkeletonContainer.getCPtr(skeleton), SWIGTYPE_p_void.getCPtr(node));
    SWIGTYPE_p_NewtonJoint ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonJoint(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreate(SWIGTYPE_p_NewtonWorld newtonWorld) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreate(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateFromMesh(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateFromMesh(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateFromCollision(SWIGTYPE_p_NewtonCollision collision) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateFromCollision(SWIGTYPE_p_NewtonCollision.getCPtr(collision));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateConvexHull(SWIGTYPE_p_NewtonWorld newtonWorld, int pointCount, SWIGTYPE_p_float vertexCloud, int strideInBytes, float tolerance) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateConvexHull(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), pointCount, SWIGTYPE_p_float.getCPtr(vertexCloud), strideInBytes, tolerance);
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateDelaunayTetrahedralization(SWIGTYPE_p_NewtonWorld newtonWorld, int pointCount, SWIGTYPE_p_float vertexCloud, int strideInBytes, int materialID, SWIGTYPE_p_float textureMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateDelaunayTetrahedralization(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), pointCount, SWIGTYPE_p_float.getCPtr(vertexCloud), strideInBytes, materialID, SWIGTYPE_p_float.getCPtr(textureMatrix));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateVoronoiConvexDecomposition(SWIGTYPE_p_NewtonWorld newtonWorld, int pointCount, SWIGTYPE_p_float vertexCloud, int strideInBytes, int materialID, SWIGTYPE_p_float textureMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateVoronoiConvexDecomposition(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), pointCount, SWIGTYPE_p_float.getCPtr(vertexCloud), strideInBytes, materialID, SWIGTYPE_p_float.getCPtr(textureMatrix));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateFromSerialization(SWIGTYPE_p_NewtonWorld newtonWorld, SWIGTYPE_p_f_q_const__p_void_q_const__p_void_int__void deserializeFunction, SWIGTYPE_p_void serializeHandle) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateFromSerialization(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), SWIGTYPE_p_f_q_const__p_void_q_const__p_void_int__void.getCPtr(deserializeFunction), SWIGTYPE_p_void.getCPtr(serializeHandle));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static void NewtonMeshDestroy(SWIGTYPE_p_NewtonMesh mesh) {
    cppPINVOKE.NewtonMeshDestroy(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
  }

  public static void NewtonMeshSerialize(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__void_int__void serializeFunction, SWIGTYPE_p_void serializeHandle) {
    cppPINVOKE.NewtonMeshSerialize(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__void_int__void.getCPtr(serializeFunction), SWIGTYPE_p_void.getCPtr(serializeHandle));
  }

  public static void NewtonMeshSaveOFF(SWIGTYPE_p_NewtonMesh mesh, string filename) {
    cppPINVOKE.NewtonMeshSaveOFF(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), filename);
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshLoadOFF(SWIGTYPE_p_NewtonWorld newtonWorld, string filename) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshLoadOFF(SWIGTYPE_p_NewtonWorld.getCPtr(newtonWorld), filename);
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static void NewtonMeshApplyTransform(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_float matrix) {
    cppPINVOKE.NewtonMeshApplyTransform(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_float.getCPtr(matrix));
  }

  public static void NewtonMeshCalculateOOBB(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_float matrix, SWIGTYPE_p_float x, SWIGTYPE_p_float y, SWIGTYPE_p_float z) {
    cppPINVOKE.NewtonMeshCalculateOOBB(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_float.getCPtr(matrix), SWIGTYPE_p_float.getCPtr(x), SWIGTYPE_p_float.getCPtr(y), SWIGTYPE_p_float.getCPtr(z));
  }

  public static void NewtonMeshCalculateVertexNormals(SWIGTYPE_p_NewtonMesh mesh, float angleInRadians) {
    cppPINVOKE.NewtonMeshCalculateVertexNormals(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), angleInRadians);
  }

  public static void NewtonMeshApplySphericalMapping(SWIGTYPE_p_NewtonMesh mesh, int material) {
    cppPINVOKE.NewtonMeshApplySphericalMapping(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), material);
  }

  public static void NewtonMeshApplyCylindricalMapping(SWIGTYPE_p_NewtonMesh mesh, int cylinderMaterial, int capMaterial) {
    cppPINVOKE.NewtonMeshApplyCylindricalMapping(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), cylinderMaterial, capMaterial);
  }

  public static void NewtonMeshApplyBoxMapping(SWIGTYPE_p_NewtonMesh mesh, int frontMaterial, int sideMaterial, int topMaterial) {
    cppPINVOKE.NewtonMeshApplyBoxMapping(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), frontMaterial, sideMaterial, topMaterial);
  }

  public static void NewtonMeshApplyAngleBasedMapping(SWIGTYPE_p_NewtonMesh mesh, int material, SWIGTYPE_p_f_float_q_const__p_void__bool reportPrograssCallback, SWIGTYPE_p_void reportPrgressUserData) {
    cppPINVOKE.NewtonMeshApplyAngleBasedMapping(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), material, SWIGTYPE_p_f_float_q_const__p_void__bool.getCPtr(reportPrograssCallback), SWIGTYPE_p_void.getCPtr(reportPrgressUserData));
  }

  public static int NewtonMeshIsOpenMesh(SWIGTYPE_p_NewtonMesh mesh) {
    int ret = cppPINVOKE.NewtonMeshIsOpenMesh(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    return ret;
  }

  public static void NewtonMeshFixTJoints(SWIGTYPE_p_NewtonMesh mesh) {
    cppPINVOKE.NewtonMeshFixTJoints(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
  }

  public static void NewtonMeshPolygonize(SWIGTYPE_p_NewtonMesh mesh) {
    cppPINVOKE.NewtonMeshPolygonize(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
  }

  public static void NewtonMeshTriangulate(SWIGTYPE_p_NewtonMesh mesh) {
    cppPINVOKE.NewtonMeshTriangulate(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshUnion(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_NewtonMesh clipper, SWIGTYPE_p_float clipperMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshUnion(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_NewtonMesh.getCPtr(clipper), SWIGTYPE_p_float.getCPtr(clipperMatrix));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshDifference(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_NewtonMesh clipper, SWIGTYPE_p_float clipperMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshDifference(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_NewtonMesh.getCPtr(clipper), SWIGTYPE_p_float.getCPtr(clipperMatrix));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshIntersection(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_NewtonMesh clipper, SWIGTYPE_p_float clipperMatrix) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshIntersection(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_NewtonMesh.getCPtr(clipper), SWIGTYPE_p_float.getCPtr(clipperMatrix));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static void NewtonMeshClip(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_NewtonMesh clipper, SWIGTYPE_p_float clipperMatrix, SWIGTYPE_p_p_NewtonMesh topMesh, SWIGTYPE_p_p_NewtonMesh bottomMesh) {
    cppPINVOKE.NewtonMeshClip(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_NewtonMesh.getCPtr(clipper), SWIGTYPE_p_float.getCPtr(clipperMatrix), SWIGTYPE_p_p_NewtonMesh.getCPtr(topMesh), SWIGTYPE_p_p_NewtonMesh.getCPtr(bottomMesh));
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshConvexMeshIntersection(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_NewtonMesh convexMesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshConvexMeshIntersection(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_NewtonMesh.getCPtr(convexMesh));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshSimplify(SWIGTYPE_p_NewtonMesh mesh, int maxVertexCount, SWIGTYPE_p_f_float_q_const__p_void__bool reportPrograssCallback, SWIGTYPE_p_void reportPrgressUserData) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshSimplify(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), maxVertexCount, SWIGTYPE_p_f_float_q_const__p_void__bool.getCPtr(reportPrograssCallback), SWIGTYPE_p_void.getCPtr(reportPrgressUserData));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshApproximateConvexDecomposition(SWIGTYPE_p_NewtonMesh mesh, float maxConcavity, float backFaceDistanceFactor, int maxCount, int maxVertexPerHull, SWIGTYPE_p_f_float_q_const__p_void__bool reportProgressCallback, SWIGTYPE_p_void reportProgressUserData) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshApproximateConvexDecomposition(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), maxConcavity, backFaceDistanceFactor, maxCount, maxVertexPerHull, SWIGTYPE_p_f_float_q_const__p_void__bool.getCPtr(reportProgressCallback), SWIGTYPE_p_void.getCPtr(reportProgressUserData));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static void NewtonRemoveUnusedVertices(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_int vertexRemapTable) {
    cppPINVOKE.NewtonRemoveUnusedVertices(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_int.getCPtr(vertexRemapTable));
  }

  public static void NewtonMeshBeginFace(SWIGTYPE_p_NewtonMesh mesh) {
    cppPINVOKE.NewtonMeshBeginFace(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
  }

  public static void NewtonMeshAddFace(SWIGTYPE_p_NewtonMesh mesh, int vertexCount, SWIGTYPE_p_float vertex, int strideInBytes, int materialIndex) {
    cppPINVOKE.NewtonMeshAddFace(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), vertexCount, SWIGTYPE_p_float.getCPtr(vertex), strideInBytes, materialIndex);
  }

  public static void NewtonMeshEndFace(SWIGTYPE_p_NewtonMesh mesh) {
    cppPINVOKE.NewtonMeshEndFace(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
  }

  public static void NewtonMeshBuildFromVertexListIndexList(SWIGTYPE_p_NewtonMesh mesh, int faceCount, SWIGTYPE_p_int faceIndexCount, SWIGTYPE_p_int faceMaterialIndex, SWIGTYPE_p_float vertex, int vertexStrideInBytes, SWIGTYPE_p_int vertexIndex, SWIGTYPE_p_float normal, int normalStrideInBytes, SWIGTYPE_p_int normalIndex, SWIGTYPE_p_float uv0, int uv0StrideInBytes, SWIGTYPE_p_int uv0Index, SWIGTYPE_p_float uv1, int uv1StrideInBytes, SWIGTYPE_p_int uv1Index) {
    cppPINVOKE.NewtonMeshBuildFromVertexListIndexList(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), faceCount, SWIGTYPE_p_int.getCPtr(faceIndexCount), SWIGTYPE_p_int.getCPtr(faceMaterialIndex), SWIGTYPE_p_float.getCPtr(vertex), vertexStrideInBytes, SWIGTYPE_p_int.getCPtr(vertexIndex), SWIGTYPE_p_float.getCPtr(normal), normalStrideInBytes, SWIGTYPE_p_int.getCPtr(normalIndex), SWIGTYPE_p_float.getCPtr(uv0), uv0StrideInBytes, SWIGTYPE_p_int.getCPtr(uv0Index), SWIGTYPE_p_float.getCPtr(uv1), uv1StrideInBytes, SWIGTYPE_p_int.getCPtr(uv1Index));
  }

  public static void NewtonMeshGetVertexStreams(SWIGTYPE_p_NewtonMesh mesh, int vertexStrideInByte, SWIGTYPE_p_float vertex, int normalStrideInByte, SWIGTYPE_p_float normal, int uvStrideInByte0, SWIGTYPE_p_float uv0, int uvStrideInByte1, SWIGTYPE_p_float uv1) {
    cppPINVOKE.NewtonMeshGetVertexStreams(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), vertexStrideInByte, SWIGTYPE_p_float.getCPtr(vertex), normalStrideInByte, SWIGTYPE_p_float.getCPtr(normal), uvStrideInByte0, SWIGTYPE_p_float.getCPtr(uv0), uvStrideInByte1, SWIGTYPE_p_float.getCPtr(uv1));
  }

  public static void NewtonMeshGetIndirectVertexStreams(SWIGTYPE_p_NewtonMesh mesh, int vertexStrideInByte, SWIGTYPE_p_float vertex, SWIGTYPE_p_int vertexIndices, SWIGTYPE_p_int vertexCount, int normalStrideInByte, SWIGTYPE_p_float normal, SWIGTYPE_p_int normalIndices, SWIGTYPE_p_int normalCount, int uvStrideInByte0, SWIGTYPE_p_float uv0, SWIGTYPE_p_int uvIndices0, SWIGTYPE_p_int uvCount0, int uvStrideInByte1, SWIGTYPE_p_float uv1, SWIGTYPE_p_int uvIndices1, SWIGTYPE_p_int uvCount1) {
    cppPINVOKE.NewtonMeshGetIndirectVertexStreams(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), vertexStrideInByte, SWIGTYPE_p_float.getCPtr(vertex), SWIGTYPE_p_int.getCPtr(vertexIndices), SWIGTYPE_p_int.getCPtr(vertexCount), normalStrideInByte, SWIGTYPE_p_float.getCPtr(normal), SWIGTYPE_p_int.getCPtr(normalIndices), SWIGTYPE_p_int.getCPtr(normalCount), uvStrideInByte0, SWIGTYPE_p_float.getCPtr(uv0), SWIGTYPE_p_int.getCPtr(uvIndices0), SWIGTYPE_p_int.getCPtr(uvCount0), uvStrideInByte1, SWIGTYPE_p_float.getCPtr(uv1), SWIGTYPE_p_int.getCPtr(uvIndices1), SWIGTYPE_p_int.getCPtr(uvCount1));
  }

  public static SWIGTYPE_p_void NewtonMeshBeginHandle(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshBeginHandle(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonMeshEndHandle(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void handle) {
    cppPINVOKE.NewtonMeshEndHandle(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(handle));
  }

  public static int NewtonMeshFirstMaterial(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void handle) {
    int ret = cppPINVOKE.NewtonMeshFirstMaterial(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(handle));
    return ret;
  }

  public static int NewtonMeshNextMaterial(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void handle, int materialId) {
    int ret = cppPINVOKE.NewtonMeshNextMaterial(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(handle), materialId);
    return ret;
  }

  public static int NewtonMeshMaterialGetMaterial(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void handle, int materialId) {
    int ret = cppPINVOKE.NewtonMeshMaterialGetMaterial(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(handle), materialId);
    return ret;
  }

  public static int NewtonMeshMaterialGetIndexCount(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void handle, int materialId) {
    int ret = cppPINVOKE.NewtonMeshMaterialGetIndexCount(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(handle), materialId);
    return ret;
  }

  public static void NewtonMeshMaterialGetIndexStream(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void handle, int materialId, SWIGTYPE_p_int index) {
    cppPINVOKE.NewtonMeshMaterialGetIndexStream(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(handle), materialId, SWIGTYPE_p_int.getCPtr(index));
  }

  public static void NewtonMeshMaterialGetIndexStreamShort(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void handle, int materialId, SWIGTYPE_p_short index) {
    cppPINVOKE.NewtonMeshMaterialGetIndexStreamShort(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(handle), materialId, SWIGTYPE_p_short.getCPtr(index));
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateFirstSingleSegment(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateFirstSingleSegment(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateNextSingleSegment(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_NewtonMesh segment) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateNextSingleSegment(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_NewtonMesh.getCPtr(segment));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateFirstLayer(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateFirstLayer(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_NewtonMesh NewtonMeshCreateNextLayer(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_NewtonMesh segment) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshCreateNextLayer(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_NewtonMesh.getCPtr(segment));
    SWIGTYPE_p_NewtonMesh ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_NewtonMesh(cPtr, false);
    return ret;
  }

  public static int NewtonMeshGetTotalFaceCount(SWIGTYPE_p_NewtonMesh mesh) {
    int ret = cppPINVOKE.NewtonMeshGetTotalFaceCount(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    return ret;
  }

  public static int NewtonMeshGetTotalIndexCount(SWIGTYPE_p_NewtonMesh mesh) {
    int ret = cppPINVOKE.NewtonMeshGetTotalIndexCount(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    return ret;
  }

  public static void NewtonMeshGetFaces(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_int faceIndexCount, SWIGTYPE_p_int faceMaterial, SWIGTYPE_p_p_void faceIndices) {
    cppPINVOKE.NewtonMeshGetFaces(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_int.getCPtr(faceIndexCount), SWIGTYPE_p_int.getCPtr(faceMaterial), SWIGTYPE_p_p_void.getCPtr(faceIndices));
  }

  public static int NewtonMeshGetPointCount(SWIGTYPE_p_NewtonMesh mesh) {
    int ret = cppPINVOKE.NewtonMeshGetPointCount(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    return ret;
  }

  public static int NewtonMeshGetPointStrideInByte(SWIGTYPE_p_NewtonMesh mesh) {
    int ret = cppPINVOKE.NewtonMeshGetPointStrideInByte(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    return ret;
  }

  public static SWIGTYPE_p_double NewtonMeshGetPointArray(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetPointArray(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_double NewtonMeshGetNormalArray(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetNormalArray(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_double NewtonMeshGetUV0Array(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetUV0Array(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_double NewtonMeshGetUV1Array(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetUV1Array(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public static int NewtonMeshGetVertexCount(SWIGTYPE_p_NewtonMesh mesh) {
    int ret = cppPINVOKE.NewtonMeshGetVertexCount(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    return ret;
  }

  public static int NewtonMeshGetVertexStrideInByte(SWIGTYPE_p_NewtonMesh mesh) {
    int ret = cppPINVOKE.NewtonMeshGetVertexStrideInByte(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    return ret;
  }

  public static SWIGTYPE_p_double NewtonMeshGetVertexArray(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetVertexArray(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonMeshGetFirstVertex(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetFirstVertex(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonMeshGetNextVertex(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void vertex) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetNextVertex(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(vertex));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static int NewtonMeshGetVertexIndex(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void vertex) {
    int ret = cppPINVOKE.NewtonMeshGetVertexIndex(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(vertex));
    return ret;
  }

  public static SWIGTYPE_p_void NewtonMeshGetFirstPoint(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetFirstPoint(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonMeshGetNextPoint(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void point) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetNextPoint(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(point));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static int NewtonMeshGetPointIndex(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void point) {
    int ret = cppPINVOKE.NewtonMeshGetPointIndex(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(point));
    return ret;
  }

  public static int NewtonMeshGetVertexIndexFromPoint(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void point) {
    int ret = cppPINVOKE.NewtonMeshGetVertexIndexFromPoint(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(point));
    return ret;
  }

  public static SWIGTYPE_p_void NewtonMeshGetFirstEdge(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetFirstEdge(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonMeshGetNextEdge(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void edge) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetNextEdge(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(edge));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static void NewtonMeshGetEdgeIndices(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void edge, SWIGTYPE_p_int v0, SWIGTYPE_p_int v1) {
    cppPINVOKE.NewtonMeshGetEdgeIndices(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(edge), SWIGTYPE_p_int.getCPtr(v0), SWIGTYPE_p_int.getCPtr(v1));
  }

  public static SWIGTYPE_p_void NewtonMeshGetFirstFace(SWIGTYPE_p_NewtonMesh mesh) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetFirstFace(SWIGTYPE_p_NewtonMesh.getCPtr(mesh));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_void NewtonMeshGetNextFace(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void face) {
    global::System.IntPtr cPtr = cppPINVOKE.NewtonMeshGetNextFace(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(face));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static int NewtonMeshIsFaceOpen(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void face) {
    int ret = cppPINVOKE.NewtonMeshIsFaceOpen(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(face));
    return ret;
  }

  public static int NewtonMeshGetFaceMaterial(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void face) {
    int ret = cppPINVOKE.NewtonMeshGetFaceMaterial(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(face));
    return ret;
  }

  public static int NewtonMeshGetFaceIndexCount(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void face) {
    int ret = cppPINVOKE.NewtonMeshGetFaceIndexCount(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(face));
    return ret;
  }

  public static void NewtonMeshGetFaceIndices(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void face, SWIGTYPE_p_int indices) {
    cppPINVOKE.NewtonMeshGetFaceIndices(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(face), SWIGTYPE_p_int.getCPtr(indices));
  }

  public static void NewtonMeshGetFacePointIndices(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void face, SWIGTYPE_p_int indices) {
    cppPINVOKE.NewtonMeshGetFacePointIndices(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(face), SWIGTYPE_p_int.getCPtr(indices));
  }

  public static void NewtonMeshCalculateFaceNormal(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void face, SWIGTYPE_p_double normal) {
    cppPINVOKE.NewtonMeshCalculateFaceNormal(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(face), SWIGTYPE_p_double.getCPtr(normal));
  }

  public static void NewtonMeshSetFaceMaterial(SWIGTYPE_p_NewtonMesh mesh, SWIGTYPE_p_void face, int matId) {
    cppPINVOKE.NewtonMeshSetFaceMaterial(SWIGTYPE_p_NewtonMesh.getCPtr(mesh), SWIGTYPE_p_void.getCPtr(face), matId);
  }

  public static readonly int NEWTON_MAJOR_VERSION = cppPINVOKE.NEWTON_MAJOR_VERSION_get();
  public static readonly int NEWTON_MINOR_VERSION = cppPINVOKE.NEWTON_MINOR_VERSION_get();
  public static readonly int NEWTON_BROADPHASE_DEFAULT = cppPINVOKE.NEWTON_BROADPHASE_DEFAULT_get();
  public static readonly int NEWTON_BROADPHASE_PERSINTENT = cppPINVOKE.NEWTON_BROADPHASE_PERSINTENT_get();
  public static readonly int NEWTON_DYNAMIC_BODY = cppPINVOKE.NEWTON_DYNAMIC_BODY_get();
  public static readonly int NEWTON_KINEMATIC_BODY = cppPINVOKE.NEWTON_KINEMATIC_BODY_get();
  public static readonly int NEWTON_DEFORMABLE_BODY = cppPINVOKE.NEWTON_DEFORMABLE_BODY_get();
  public static readonly int SERIALIZE_ID_SPHERE = cppPINVOKE.SERIALIZE_ID_SPHERE_get();
  public static readonly int SERIALIZE_ID_CAPSULE = cppPINVOKE.SERIALIZE_ID_CAPSULE_get();
  public static readonly int SERIALIZE_ID_CYLINDER = cppPINVOKE.SERIALIZE_ID_CYLINDER_get();
  public static readonly int SERIALIZE_ID_CHAMFERCYLINDER = cppPINVOKE.SERIALIZE_ID_CHAMFERCYLINDER_get();
  public static readonly int SERIALIZE_ID_BOX = cppPINVOKE.SERIALIZE_ID_BOX_get();
  public static readonly int SERIALIZE_ID_CONE = cppPINVOKE.SERIALIZE_ID_CONE_get();
  public static readonly int SERIALIZE_ID_CONVEXHULL = cppPINVOKE.SERIALIZE_ID_CONVEXHULL_get();
  public static readonly int SERIALIZE_ID_NULL = cppPINVOKE.SERIALIZE_ID_NULL_get();
  public static readonly int SERIALIZE_ID_COMPOUND = cppPINVOKE.SERIALIZE_ID_COMPOUND_get();
  public static readonly int SERIALIZE_ID_TREE = cppPINVOKE.SERIALIZE_ID_TREE_get();
  public static readonly int SERIALIZE_ID_HEIGHTFIELD = cppPINVOKE.SERIALIZE_ID_HEIGHTFIELD_get();
  public static readonly int SERIALIZE_ID_CLOTH_PATCH = cppPINVOKE.SERIALIZE_ID_CLOTH_PATCH_get();
  public static readonly int SERIALIZE_ID_DEFORMABLE_SOLID = cppPINVOKE.SERIALIZE_ID_DEFORMABLE_SOLID_get();
  public static readonly int SERIALIZE_ID_USERMESH = cppPINVOKE.SERIALIZE_ID_USERMESH_get();
  public static readonly int SERIALIZE_ID_SCENE = cppPINVOKE.SERIALIZE_ID_SCENE_get();
  public static readonly int SERIALIZE_ID_FRACTURED_COMPOUND = cppPINVOKE.SERIALIZE_ID_FRACTURED_COMPOUND_get();
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_float_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonFracturedCompoundMeshPart {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonFracturedCompoundMeshPart(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonFracturedCompoundMeshPart() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonFracturedCompoundMeshPart obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_NewtonBody__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_NewtonBody__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_NewtonBody__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_NewtonBody__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_NewtonFracturedCompoundMeshPart_q_const__p_q_const__NewtonCollision__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_int__p_void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_int__p_void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_int__p_void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_int__p_void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_NewtonBody_q_const__p_void_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_p_void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_double {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_double(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_double() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_double obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int__int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int__int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int__int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int__int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_int__int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_int__int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_int__int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_q_const__p_q_const__NewtonBody_q_const__p_q_const__void_int__int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_NewtonUserContactPoint_int_int__int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_NewtonUserContactPoint_int_int__int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_NewtonUserContactPoint_int_int__int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonMaterial_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_NewtonUserContactPoint_int_int__int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonBody {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonBody(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonBody() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonBody obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonWorld {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonWorld(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonWorld() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonWorld obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_float_q_const__p_void__bool {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_float_q_const__p_void__bool(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_float_q_const__p_void__bool() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_float_q_const__p_void__bool obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float__int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float__int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float__int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float__int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float_q_const__p_p_q_const__float_q_const__p_int_q_const__p_int_q_const__p_q_const__int_int_q_const__p_q_const__int__int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float_q_const__p_p_q_const__float_q_const__p_int_q_const__p_int_q_const__p_q_const__int_int_q_const__p_q_const__int__int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float_q_const__p_p_q_const__float_q_const__p_int_q_const__p_int_q_const__p_q_const__int_int_q_const__p_q_const__int__int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_q_const__p_q_const__float_q_const__p_p_q_const__float_q_const__p_int_q_const__p_int_q_const__p_q_const__int_int_q_const__p_q_const__int__int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_int_q_const__p_q_const__int_int__int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_int_q_const__p_q_const__int_int__int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_int_q_const__p_q_const__int_int__int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__float_int_q_const__p_q_const__int_int__int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionCollideDesc_q_const__p_q_const__void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionCollideDesc_q_const__p_q_const__void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionCollideDesc_q_const__p_q_const__void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionCollideDesc_q_const__p_q_const__void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonSkeletonContainer__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonSkeletonContainer__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonSkeletonContainer__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonSkeletonContainer__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_q_const__NewtonCollision__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_q_const__NewtonCollision__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_q_const__NewtonCollision__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_q_const__NewtonCollision__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_NewtonCollision_q_const__p_q_const__NewtonCollision__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_NewtonCollision_q_const__p_q_const__NewtonCollision__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_NewtonCollision_q_const__p_q_const__NewtonCollision__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_NewtonCollision_q_const__p_q_const__NewtonCollision__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_float__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_float__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_float__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_float__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_q_const__p_void_q_const__p_NewtonBody__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonHingeSliderUpdateDesc__unsigned_int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonJointRecord__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonJointRecord__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonJointRecord__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_q_const__p_NewtonJointRecord__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_f_q_const__p_NewtonBody_q_const__p_NewtonBody_p_f_q_const__p_void_q_const__p_void_int__void_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_q_const__p_NewtonCollisionInfoRecord__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_q_const__p_NewtonCollisionInfoRecord__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_q_const__p_NewtonCollisionInfoRecord__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_q_const__p_NewtonCollisionInfoRecord__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonMaterial {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonMaterial(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonMaterial() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonMaterial obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_a_4__float {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_a_4__float(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_a_4__float() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_a_4__float obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonSkeletonContainer {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonSkeletonContainer(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonSkeletonContainer() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonSkeletonContainer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_void__unsigned_int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__float_q_const__p_q_const__float_long_long_q_const__p_void_float__float {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__float_q_const__p_q_const__float_long_long_q_const__p_void_float__float(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__float_q_const__p_q_const__float_long_long_q_const__p_void_float__float() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_q_const__p_q_const__float_q_const__p_q_const__float_long_long_q_const__p_void_float__float obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_void__int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_void__int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_void__int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_void__int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_unsigned_short {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_unsigned_short(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_unsigned_short() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_unsigned_short obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_short {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_short(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_short() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_short obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_int_int_q_const__p_float_int_q_const__p_void__float {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_int_int_q_const__p_float_int_q_const__p_void__float(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_int_int_q_const__p_float_int_q_const__p_void__float() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_int_int_q_const__p_float_int_q_const__p_void__float obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_q_const__p_float_int_q_const__p_void__float {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_q_const__p_float_int_q_const__p_void__float(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_q_const__p_float_int_q_const__p_void__float() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonCollision_float_q_const__p_float_int_q_const__p_void__float obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int_int_q_const__p_q_const__float_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int_int_q_const__p_q_const__float_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int_int_q_const__p_q_const__float_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__NewtonBody_int_int_q_const__p_q_const__float_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_int_q_const__p_q_const__float_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_int_q_const__p_q_const__float_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_int_q_const__p_q_const__float_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_int_q_const__p_q_const__float_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonBody_q_const__p_q_const__float_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__void_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__void_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__void_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_q_const__p_q_const__void_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonJoint {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonJoint(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonJoint() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonJoint obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_p_NewtonJoint {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_NewtonJoint(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_NewtonJoint() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_NewtonJoint obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionRayHitDesc__float {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionRayHitDesc__float(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionRayHitDesc__float() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_NewtonUserMeshCollisionRayHitDesc__float obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonCollision {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonCollision(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonCollision() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonCollision obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonDeformableMeshSegment {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonDeformableMeshSegment(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonDeformableMeshSegment() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonDeformableMeshSegment obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_long_long {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_long_long(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_long_long() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_long_long obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_p_q_const__void_int__int {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_p_q_const__void_int__int(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_p_q_const__void_int__int() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonWorld_p_q_const__void_int__int obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_float {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_float(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_float() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_float obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_NewtonMesh {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_NewtonMesh(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_NewtonMesh() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_NewtonMesh obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_p_float {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_float(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_float() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_float obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_q_const__p_void_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_q_const__p_void_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_q_const__p_void_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_q_const__p_void_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_q_const__NewtonJoint_float__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_p_NewtonMesh {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_p_NewtonMesh(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_p_NewtonMesh() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_p_NewtonMesh obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_void_p_f_q_const__p_void_q_const__p_q_const__void_int__void_q_const__p_void__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}

public class SWIGTYPE_p_f_q_const__p_NewtonWorld_q_const__p_void_int__void {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SWIGTYPE_p_f_q_const__p_NewtonWorld_q_const__p_void_int__void(global::System.IntPtr cPtr, bool futureUse) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  protected SWIGTYPE_p_f_q_const__p_NewtonWorld_q_const__p_void_int__void() {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SWIGTYPE_p_f_q_const__p_NewtonWorld_q_const__p_void_int__void obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }
}
